     = false
     : bool
Certif after storing shared terms: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(t3, CongAST, (cl  (((a = y) = (x = y)))), [ h1], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_fins: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(t3, CongAST, (cl  (((a = y) = (x = y)))), [ h1], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_hole: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(t3, CongAST, (cl  (((a = y) = (x = y)))), [ h1], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_notnot: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(t3, CongAST, (cl  (((a = y) = (x = y)))), [ h1], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_same: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(t3, CongAST, (cl  (((a = y) = (x = y)))), [ h1], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_cong: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(x2, Equn1AST, (cl  ((y = y)) (y)), [], [])
(x3, Equn2AST, (cl  ((y = y)) ((not y))), [], [])
(x1, ResoAST, (cl  ((y = y))), [ x2 x3], [])

(x4, Equp1AST, (cl  ((not (y = y))) (y) ((not y))), [], [])
(x5, ResoAST, (cl  (y) ((not y))), [ x1 x4], [])
(x6, Equp1AST, (cl  ((not (a = y))) (a) ((not y))), [], [])
(x7, Equn2AST, (cl  ((x = y)) (x) (y)), [], [])
(x8, Equn2AST, (cl  (((a = y) = (x = y))) ((a = y)) ((x = y))), [], [])
(x9, ResoAST, (cl  (((a = y) = (x = y))) ((x = y)) (a) (x)), [ x5 x6 x7 x8], [])
(x10, Equp2AST, (cl  ((not (y = y))) ((not y)) (y)), [], [])
(x11, ResoAST, (cl  ((not y)) (y)), [ x1 x10], [])
(x12, Equn2AST, (cl  ((a = y)) (a) (y)), [], [])
(x13, Equp1AST, (cl  ((not (x = y))) (x) ((not y))), [], [])
~y, y     a = y, a, y
---------------------
a = y, a, y              ~(x = y), x, ~y
----------------------------------------
a = y, ~(x = y), a, x                                 (a = y) = (x = y), ~(a = y), ~(x = y)
---------------------------------------------------------------------------------
(a = y) = (x = y), ~(x = y), a, x
(x14, Equn1AST, (cl  (((a = y) = (x = y))) ((not (a = y))) ((not (x = y)))), [], [])
(x15, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y))) (a) (x)), [ x11 x12 x13 x14], [])
(x16, Equp1AST, (cl  ((not (a = x))) (a) ((not x))), [], [])
(x17, ResoAST, (cl  (a) ((not x))), [ h1 x16], [])
(x18, ResoAST, (cl  (((a = y) = (x = y))) (a)), [ x9 x15 x17], [])
(x19, Equp2AST, (cl  ((not (a = x))) ((not a)) (x)), [], [])
(x20, ResoAST, (cl  ((not a)) (x)), [ h1 x19], [])
(x21, ResoAST, (cl  (((a = y) = (x = y))) (x)), [ x18 x20], [])
(x22, Equn1AST, (cl  ((x = y)) ((not x)) ((not y))), [], [])
(x23, Equn1AST, (cl  ((a = y)) ((not a)) ((not y))), [], [])
(x24, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x14 x22 x23 x11 x21 x18], [])
(x25, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x24 x5], [])
(x26, Equp2AST, (cl  ((not (a = y))) ((not a)) (y)), [], [])
(x27, ResoAST, (cl  (((a = y) = (x = y))) ((not (a = y)))), [ x26 x24 x18], [])
(x28, Equp2AST, (cl  ((not (x = y))) ((not x)) (y)), [], [])
(x29, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y)))), [ x28 x25 x21], [])
(t3, ResoAST, (cl  (((a = y) = (x = y)))), [ x8 x27 x29], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_trans: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(x2, Equn1AST, (cl  ((y = y)) (y)), [], [])
(x3, Equn2AST, (cl  ((y = y)) ((not y))), [], [])
(x1, ResoAST, (cl  ((y = y))), [ x2 x3], [])
(x4, Equp1AST, (cl  ((not (y = y))) (y) ((not y))), [], [])
(x5, ResoAST, (cl  (y) ((not y))), [ x1 x4], [])
(x6, Equp1AST, (cl  ((not (a = y))) (a) ((not y))), [], [])
(x7, Equn2AST, (cl  ((x = y)) (x) (y)), [], [])
(x8, Equn2AST, (cl  (((a = y) = (x = y))) ((a = y)) ((x = y))), [], [])
(x9, ResoAST, (cl  (((a = y) = (x = y))) ((x = y)) (a) (x)), [ x5 x6 x7 x8], [])
(x10, Equp2AST, (cl  ((not (y = y))) ((not y)) (y)), [], [])
(x11, ResoAST, (cl  ((not y)) (y)), [ x1 x10], [])
(x12, Equn2AST, (cl  ((a = y)) (a) (y)), [], [])
(x13, Equp1AST, (cl  ((not (x = y))) (x) ((not y))), [], [])
(x14, Equn1AST, (cl  (((a = y) = (x = y))) ((not (a = y))) ((not (x = y)))), [], [])
(x15, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y))) (a) (x)), [ x11 x12 x13 x14], [])
(x16, Equp1AST, (cl  ((not (a = x))) (a) ((not x))), [], [])
(x17, ResoAST, (cl  (a) ((not x))), [ h1 x16], [])
(x18, ResoAST, (cl  (((a = y) = (x = y))) (a)), [ x9 x15 x17], [])
(x19, Equp2AST, (cl  ((not (a = x))) ((not a)) (x)), [], [])
(x20, ResoAST, (cl  ((not a)) (x)), [ h1 x19], [])
(x21, ResoAST, (cl  (((a = y) = (x = y))) (x)), [ x18 x20], [])
(x22, Equn1AST, (cl  ((x = y)) ((not x)) ((not y))), [], [])
(x23, Equn1AST, (cl  ((a = y)) ((not a)) ((not y))), [], [])
(x24, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x14 x22 x23 x11 x21 x18], [])
(x25, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x24 x5], [])
(x26, Equp2AST, (cl  ((not (a = y))) ((not a)) (y)), [], [])
(x27, ResoAST, (cl  (((a = y) = (x = y))) ((not (a = y)))), [ x26 x24 x18], [])
(x28, Equp2AST, (cl  ((not (x = y))) ((not x)) (y)), [], [])
(x29, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y)))), [ x28 x25 x21], [])
(t3, ResoAST, (cl  (((a = y) = (x = y)))), [ x8 x27 x29], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_simplify: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(x2, Equn1AST, (cl  ((y = y)) (y)), [], [])
(x3, Equn2AST, (cl  ((y = y)) ((not y))), [], [])
(x1, ResoAST, (cl  ((y = y))), [ x2 x3], [])
(x4, Equp1AST, (cl  ((not (y = y))) (y) ((not y))), [], [])
(x5, ResoAST, (cl  (y) ((not y))), [ x1 x4], [])
(x6, Equp1AST, (cl  ((not (a = y))) (a) ((not y))), [], [])
(x7, Equn2AST, (cl  ((x = y)) (x) (y)), [], [])
(x8, Equn2AST, (cl  (((a = y) = (x = y))) ((a = y)) ((x = y))), [], [])
(x9, ResoAST, (cl  (((a = y) = (x = y))) ((x = y)) (a) (x)), [ x5 x6 x7 x8], [])
(x10, Equp2AST, (cl  ((not (y = y))) ((not y)) (y)), [], [])
(x11, ResoAST, (cl  ((not y)) (y)), [ x1 x10], [])
(x12, Equn2AST, (cl  ((a = y)) (a) (y)), [], [])
(x13, Equp1AST, (cl  ((not (x = y))) (x) ((not y))), [], [])
(x14, Equn1AST, (cl  (((a = y) = (x = y))) ((not (a = y))) ((not (x = y)))), [], [])
(x15, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y))) (a) (x)), [ x11 x12 x13 x14], [])
(x16, Equp1AST, (cl  ((not (a = x))) (a) ((not x))), [], [])
(x17, ResoAST, (cl  (a) ((not x))), [ h1 x16], [])
(x18, ResoAST, (cl  (((a = y) = (x = y))) (a)), [ x9 x15 x17], [])
(x19, Equp2AST, (cl  ((not (a = x))) ((not a)) (x)), [], [])
(x20, ResoAST, (cl  ((not a)) (x)), [ h1 x19], [])
(x21, ResoAST, (cl  (((a = y) = (x = y))) (x)), [ x18 x20], [])
(x22, Equn1AST, (cl  ((x = y)) ((not x)) ((not y))), [], [])
(x23, Equn1AST, (cl  ((a = y)) ((not a)) ((not y))), [], [])
(x24, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x14 x22 x23 x11 x21 x18], [])
(x25, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x24 x5], [])
(x26, Equp2AST, (cl  ((not (a = y))) ((not a)) (y)), [], [])
(x27, ResoAST, (cl  (((a = y) = (x = y))) ((not (a = y)))), [ x26 x24 x18], [])
(x28, Equp2AST, (cl  ((not (x = y))) ((not x)) (y)), [], [])
(x29, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y)))), [ x28 x25 x21], [])
(t3, ResoAST, (cl  (((a = y) = (x = y)))), [ x8 x27 x29], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_proj: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(x2, Equn1AST, (cl  ((y = y)) (y)), [], [])
(x3, Equn2AST, (cl  ((y = y)) ((not y))), [], [])
(x1, ResoAST, (cl  ((y = y))), [ x2 x3], [])
(x4, Equp1AST, (cl  ((not (y = y))) (y) ((not y))), [], [])
(x5, ResoAST, (cl  (y) ((not y))), [ x1 x4], [])
(x6, Equp1AST, (cl  ((not (a = y))) (a) ((not y))), [], [])
(x7, Equn2AST, (cl  ((x = y)) (x) (y)), [], [])
(x8, Equn2AST, (cl  (((a = y) = (x = y))) ((a = y)) ((x = y))), [], [])
(x9, ResoAST, (cl  (((a = y) = (x = y))) ((x = y)) (a) (x)), [ x5 x6 x7 x8], [])
(x10, Equp2AST, (cl  ((not (y = y))) ((not y)) (y)), [], [])
(x11, ResoAST, (cl  ((not y)) (y)), [ x1 x10], [])
(x12, Equn2AST, (cl  ((a = y)) (a) (y)), [], [])
(x13, Equp1AST, (cl  ((not (x = y))) (x) ((not y))), [], [])
(x14, Equn1AST, (cl  (((a = y) = (x = y))) ((not (a = y))) ((not (x = y)))), [], [])
(x15, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y))) (a) (x)), [ x11 x12 x13 x14], [])
(x16, Equp1AST, (cl  ((not (a = x))) (a) ((not x))), [], [])
(x17, ResoAST, (cl  (a) ((not x))), [ h1 x16], [])
(x18, ResoAST, (cl  (((a = y) = (x = y))) (a)), [ x9 x15 x17], [])
(x19, Equp2AST, (cl  ((not (a = x))) ((not a)) (x)), [], [])
(x20, ResoAST, (cl  ((not a)) (x)), [ h1 x19], [])
(x21, ResoAST, (cl  (((a = y) = (x = y))) (x)), [ x18 x20], [])
(x22, Equn1AST, (cl  ((x = y)) ((not x)) ((not y))), [], [])
(x23, Equn1AST, (cl  ((a = y)) ((not a)) ((not y))), [], [])
(x24, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x14 x22 x23 x11 x21 x18], [])
(x25, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x24 x5], [])
(x26, Equp2AST, (cl  ((not (a = y))) ((not a)) (y)), [], [])
(x27, ResoAST, (cl  (((a = y) = (x = y))) ((not (a = y)))), [ x26 x24 x18], [])
(x28, Equp2AST, (cl  ((not (x = y))) ((not x)) (y)), [], [])
(x29, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y)))), [ x28 x25 x21], [])
(t3, ResoAST, (cl  (((a = y) = (x = y)))), [ x8 x27 x29], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_subproof: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(x2, Equn1AST, (cl  ((y = y)) (y)), [], [])
(x3, Equn2AST, (cl  ((y = y)) ((not y))), [], [])
(x1, ResoAST, (cl  ((y = y))), [ x2 x3], [])
(x4, Equp1AST, (cl  ((not (y = y))) (y) ((not y))), [], [])
(x5, ResoAST, (cl  (y) ((not y))), [ x1 x4], [])
(x6, Equp1AST, (cl  ((not (a = y))) (a) ((not y))), [], [])
(x7, Equn2AST, (cl  ((x = y)) (x) (y)), [], [])
(x8, Equn2AST, (cl  (((a = y) = (x = y))) ((a = y)) ((x = y))), [], [])
(x9, ResoAST, (cl  (((a = y) = (x = y))) ((x = y)) (a) (x)), [ x5 x6 x7 x8], [])
(x10, Equp2AST, (cl  ((not (y = y))) ((not y)) (y)), [], [])
(x11, ResoAST, (cl  ((not y)) (y)), [ x1 x10], [])
(x12, Equn2AST, (cl  ((a = y)) (a) (y)), [], [])
(x13, Equp1AST, (cl  ((not (x = y))) (x) ((not y))), [], [])
(x14, Equn1AST, (cl  (((a = y) = (x = y))) ((not (a = y))) ((not (x = y)))), [], [])
(x15, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y))) (a) (x)), [ x11 x12 x13 x14], [])
(x16, Equp1AST, (cl  ((not (a = x))) (a) ((not x))), [], [])
(x17, ResoAST, (cl  (a) ((not x))), [ h1 x16], [])
(x18, ResoAST, (cl  (((a = y) = (x = y))) (a)), [ x9 x15 x17], [])
(x19, Equp2AST, (cl  ((not (a = x))) ((not a)) (x)), [], [])
(x20, ResoAST, (cl  ((not a)) (x)), [ h1 x19], [])
(x21, ResoAST, (cl  (((a = y) = (x = y))) (x)), [ x18 x20], [])
(x22, Equn1AST, (cl  ((x = y)) ((not x)) ((not y))), [], [])
(x23, Equn1AST, (cl  ((a = y)) ((not a)) ((not y))), [], [])
(x24, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x14 x22 x23 x11 x21 x18], [])
(x25, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x24 x5], [])
(x26, Equp2AST, (cl  ((not (a = y))) ((not a)) (y)), [], [])
(x27, ResoAST, (cl  (((a = y) = (x = y))) ((not (a = y)))), [ x26 x24 x18], [])
(x28, Equp2AST, (cl  ((not (x = y))) ((not x)) (y)), [], [])
(x29, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y)))), [ x28 x25 x21], [])
(t3, ResoAST, (cl  (((a = y) = (x = y)))), [ x8 x27 x29], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

