     = true
     : bool
Certif after storing shared terms: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(t3, CongAST, (cl  (((a = y) = (x = y)))), [ h1], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_fins: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(t3, CongAST, (cl  (((a = y) = (x = y)))), [ h1], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_hole: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(t3, CongAST, (cl  (((a = y) = (x = y)))), [ h1], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_notnot: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(t3, CongAST, (cl  (((a = y) = (x = y)))), [ h1], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_same: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(t3, CongAST, (cl  (((a = y) = (x = y)))), [ h1], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_cong: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(x2, Equn1AST, (cl  ((y = y)) (y)), [], [])
(x3, Equn2AST, (cl  ((y = y)) ((not y))), [], [])
(x1, ResoAST, (cl  ((y = y))), [ x2 x3], [])
(x4, Equp1AST, (cl  ((not (a = y))) (a) ((not y))), [], [])
(x5, Equn2AST, (cl  ((x = y)) (x) (y)), [], [])
(x6, Equn2AST, (cl  (((a = y) = (x = y))) ((a = y)) ((x = y))), [], [])
(x7, ResoAST, (cl  (((a = y) = (x = y))) ((x = y)) (a) (x)), [ x4 x5 x6], [])
(x8, Equn2AST, (cl  ((a = y)) (a) (y)), [], [])
(x9, Equp1AST, (cl  ((not (x = y))) (x) ((not y))), [], [])
(x10, Equn1AST, (cl  (((a = y) = (x = y))) ((not (a = y))) ((not (x = y)))), [], [])
(x11, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y))) (a) (x)), [ x8 x9 x10], [])
(x12, Equp1AST, (cl  ((not (a = x))) (a) ((not x))), [], [])
(x13, ResoAST, (cl  (a) ((not x))), [ h1 x12], [])
(x14, ResoAST, (cl  (((a = y) = (x = y))) (a)), [ x7 x11 x13], [])
(x15, Equp2AST, (cl  ((not (a = x))) ((not a)) (x)), [], [])
(x16, ResoAST, (cl  ((not a)) (x)), [ h1 x15], [])
(x17, ResoAST, (cl  (((a = y) = (x = y))) (x)), [ x14 x16], [])
(x18, Equn1AST, (cl  ((x = y)) ((not x)) ((not y))), [], [])
(x19, Equn1AST, (cl  ((a = y)) ((not a)) ((not y))), [], [])
(x20, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x10 x18 x19 x17 x14], [])
(x21, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x20], [])
(x22, Equp2AST, (cl  ((not (a = y))) ((not a)) (y)), [], [])
(x23, ResoAST, (cl  (((a = y) = (x = y))) ((not (a = y)))), [ x22 x20 x14], [])
(x24, Equp2AST, (cl  ((not (x = y))) ((not x)) (y)), [], [])
(x25, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y)))), [ x24 x21 x17], [])
(t3, ResoAST, (cl  (((a = y) = (x = y)))), [ x6 x23 x25], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_trans: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(x2, Equn1AST, (cl  ((y = y)) (y)), [], [])
(x3, Equn2AST, (cl  ((y = y)) ((not y))), [], [])
(x1, ResoAST, (cl  ((y = y))), [ x2 x3], [])
(x4, Equp1AST, (cl  ((not (a = y))) (a) ((not y))), [], [])
(x5, Equn2AST, (cl  ((x = y)) (x) (y)), [], [])
(x6, Equn2AST, (cl  (((a = y) = (x = y))) ((a = y)) ((x = y))), [], [])
(x7, ResoAST, (cl  (((a = y) = (x = y))) ((x = y)) (a) (x)), [ x4 x5 x6], [])
(x8, Equn2AST, (cl  ((a = y)) (a) (y)), [], [])
(x9, Equp1AST, (cl  ((not (x = y))) (x) ((not y))), [], [])
(x10, Equn1AST, (cl  (((a = y) = (x = y))) ((not (a = y))) ((not (x = y)))), [], [])
(x11, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y))) (a) (x)), [ x8 x9 x10], [])
(x12, Equp1AST, (cl  ((not (a = x))) (a) ((not x))), [], [])
(x13, ResoAST, (cl  (a) ((not x))), [ h1 x12], [])
(x14, ResoAST, (cl  (((a = y) = (x = y))) (a)), [ x7 x11 x13], [])
(x15, Equp2AST, (cl  ((not (a = x))) ((not a)) (x)), [], [])
(x16, ResoAST, (cl  ((not a)) (x)), [ h1 x15], [])
(x17, ResoAST, (cl  (((a = y) = (x = y))) (x)), [ x14 x16], [])
(x18, Equn1AST, (cl  ((x = y)) ((not x)) ((not y))), [], [])
(x19, Equn1AST, (cl  ((a = y)) ((not a)) ((not y))), [], [])
(x20, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x10 x18 x19 x17 x14], [])
(x21, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x20], [])
(x22, Equp2AST, (cl  ((not (a = y))) ((not a)) (y)), [], [])
(x23, ResoAST, (cl  (((a = y) = (x = y))) ((not (a = y)))), [ x22 x20 x14], [])
(x24, Equp2AST, (cl  ((not (x = y))) ((not x)) (y)), [], [])
(x25, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y)))), [ x24 x21 x17], [])
(t3, ResoAST, (cl  (((a = y) = (x = y)))), [ x6 x23 x25], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_simplify: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(x2, Equn1AST, (cl  ((y = y)) (y)), [], [])
(x3, Equn2AST, (cl  ((y = y)) ((not y))), [], [])
(x1, ResoAST, (cl  ((y = y))), [ x2 x3], [])
(x4, Equp1AST, (cl  ((not (a = y))) (a) ((not y))), [], [])
(x5, Equn2AST, (cl  ((x = y)) (x) (y)), [], [])
(x6, Equn2AST, (cl  (((a = y) = (x = y))) ((a = y)) ((x = y))), [], [])
(x7, ResoAST, (cl  (((a = y) = (x = y))) ((x = y)) (a) (x)), [ x4 x5 x6], [])
(x8, Equn2AST, (cl  ((a = y)) (a) (y)), [], [])
(x9, Equp1AST, (cl  ((not (x = y))) (x) ((not y))), [], [])
(x10, Equn1AST, (cl  (((a = y) = (x = y))) ((not (a = y))) ((not (x = y)))), [], [])
(x11, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y))) (a) (x)), [ x8 x9 x10], [])
(x12, Equp1AST, (cl  ((not (a = x))) (a) ((not x))), [], [])
(x13, ResoAST, (cl  (a) ((not x))), [ h1 x12], [])
(x14, ResoAST, (cl  (((a = y) = (x = y))) (a)), [ x7 x11 x13], [])
(x15, Equp2AST, (cl  ((not (a = x))) ((not a)) (x)), [], [])
(x16, ResoAST, (cl  ((not a)) (x)), [ h1 x15], [])
(x17, ResoAST, (cl  (((a = y) = (x = y))) (x)), [ x14 x16], [])
(x18, Equn1AST, (cl  ((x = y)) ((not x)) ((not y))), [], [])
(x19, Equn1AST, (cl  ((a = y)) ((not a)) ((not y))), [], [])
(x20, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x10 x18 x19 x17 x14], [])
(x21, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x20], [])
(x22, Equp2AST, (cl  ((not (a = y))) ((not a)) (y)), [], [])
(x23, ResoAST, (cl  (((a = y) = (x = y))) ((not (a = y)))), [ x22 x20 x14], [])
(x24, Equp2AST, (cl  ((not (x = y))) ((not x)) (y)), [], [])
(x25, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y)))), [ x24 x21 x17], [])
(t3, ResoAST, (cl  (((a = y) = (x = y)))), [ x6 x23 x25], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_proj: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(x2, Equn1AST, (cl  ((y = y)) (y)), [], [])
(x3, Equn2AST, (cl  ((y = y)) ((not y))), [], [])
(x1, ResoAST, (cl  ((y = y))), [ x2 x3], [])
(x4, Equp1AST, (cl  ((not (a = y))) (a) ((not y))), [], [])
(x5, Equn2AST, (cl  ((x = y)) (x) (y)), [], [])
(x6, Equn2AST, (cl  (((a = y) = (x = y))) ((a = y)) ((x = y))), [], [])
(x7, ResoAST, (cl  (((a = y) = (x = y))) ((x = y)) (a) (x)), [ x4 x5 x6], [])
(x8, Equn2AST, (cl  ((a = y)) (a) (y)), [], [])
(x9, Equp1AST, (cl  ((not (x = y))) (x) ((not y))), [], [])
(x10, Equn1AST, (cl  (((a = y) = (x = y))) ((not (a = y))) ((not (x = y)))), [], [])
(x11, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y))) (a) (x)), [ x8 x9 x10], [])
(x12, Equp1AST, (cl  ((not (a = x))) (a) ((not x))), [], [])
(x13, ResoAST, (cl  (a) ((not x))), [ h1 x12], [])
(x14, ResoAST, (cl  (((a = y) = (x = y))) (a)), [ x7 x11 x13], [])
(x15, Equp2AST, (cl  ((not (a = x))) ((not a)) (x)), [], [])
(x16, ResoAST, (cl  ((not a)) (x)), [ h1 x15], [])
(x17, ResoAST, (cl  (((a = y) = (x = y))) (x)), [ x14 x16], [])
(x18, Equn1AST, (cl  ((x = y)) ((not x)) ((not y))), [], [])
(x19, Equn1AST, (cl  ((a = y)) ((not a)) ((not y))), [], [])
(x20, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x10 x18 x19 x17 x14], [])
(x21, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x20], [])
(x22, Equp2AST, (cl  ((not (a = y))) ((not a)) (y)), [], [])
(x23, ResoAST, (cl  (((a = y) = (x = y))) ((not (a = y)))), [ x22 x20 x14], [])
(x24, Equp2AST, (cl  ((not (x = y))) ((not x)) (y)), [], [])
(x25, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y)))), [ x24 x21 x17], [])
(t3, ResoAST, (cl  (((a = y) = (x = y)))), [ x6 x23 x25], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_subproof: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((not ((a = y) = (x = y))))), [], [])
(x2, Equn1AST, (cl  ((y = y)) (y)), [], [])
(x3, Equn2AST, (cl  ((y = y)) ((not y))), [], [])
(x1, ResoAST, (cl  ((y = y))), [ x2 x3], [])
(x4, Equp1AST, (cl  ((not (a = y))) (a) ((not y))), [], [])
(x5, Equn2AST, (cl  ((x = y)) (x) (y)), [], [])
(x6, Equn2AST, (cl  (((a = y) = (x = y))) ((a = y)) ((x = y))), [], [])
(x7, ResoAST, (cl  (((a = y) = (x = y))) ((x = y)) (a) (x)), [ x4 x5 x6], [])
(x8, Equn2AST, (cl  ((a = y)) (a) (y)), [], [])
(x9, Equp1AST, (cl  ((not (x = y))) (x) ((not y))), [], [])
(x10, Equn1AST, (cl  (((a = y) = (x = y))) ((not (a = y))) ((not (x = y)))), [], [])
(x11, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y))) (a) (x)), [ x8 x9 x10], [])
(x12, Equp1AST, (cl  ((not (a = x))) (a) ((not x))), [], [])
(x13, ResoAST, (cl  (a) ((not x))), [ h1 x12], [])
(x14, ResoAST, (cl  (((a = y) = (x = y))) (a)), [ x7 x11 x13], [])
(x15, Equp2AST, (cl  ((not (a = x))) ((not a)) (x)), [], [])
(x16, ResoAST, (cl  ((not a)) (x)), [ h1 x15], [])
(x17, ResoAST, (cl  (((a = y) = (x = y))) (x)), [ x14 x16], [])
(x18, Equn1AST, (cl  ((x = y)) ((not x)) ((not y))), [], [])
(x19, Equn1AST, (cl  ((a = y)) ((not a)) ((not y))), [], [])
(x20, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x10 x18 x19 x17 x14], [])
(x21, ResoAST, (cl  (((a = y) = (x = y))) ((not y))), [ x20], [])
(x22, Equp2AST, (cl  ((not (a = y))) ((not a)) (y)), [], [])
(x23, ResoAST, (cl  (((a = y) = (x = y))) ((not (a = y)))), [ x22 x20 x14], [])
(x24, Equp2AST, (cl  ((not (x = y))) ((not x)) (y)), [], [])
(x25, ResoAST, (cl  (((a = y) = (x = y))) ((not (x = y)))), [ x24 x21 x17], [])
(t3, ResoAST, (cl  (((a = y) = (x = y)))), [ x6 x23 x25], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

