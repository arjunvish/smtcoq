     = false
     : bool
Certif after storing shared terms: 
(h1, AssumeAST, (cl  ((b = y))), [], [])
(h2, AssumeAST, (cl  ((not ((x = b) = (x = y))))), [], [])
(t3, CongAST, (cl  (((x = b) = (x = y)))), [ h1], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_fins: 
(h1, AssumeAST, (cl  ((b = y))), [], [])
(h2, AssumeAST, (cl  ((not ((x = b) = (x = y))))), [], [])
(t3, CongAST, (cl  (((x = b) = (x = y)))), [ h1], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_hole: 
(h1, AssumeAST, (cl  ((b = y))), [], [])
(h2, AssumeAST, (cl  ((not ((x = b) = (x = y))))), [], [])
(t3, CongAST, (cl  (((x = b) = (x = y)))), [ h1], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_notnot: 
(h1, AssumeAST, (cl  ((b = y))), [], [])
(h2, AssumeAST, (cl  ((not ((x = b) = (x = y))))), [], [])
(t3, CongAST, (cl  (((x = b) = (x = y)))), [ h1], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_same: 
(h1, AssumeAST, (cl  ((b = y))), [], [])
(h2, AssumeAST, (cl  ((not ((x = b) = (x = y))))), [], [])
(t3, CongAST, (cl  (((x = b) = (x = y)))), [ h1], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_cong: 
(h1, AssumeAST, (cl  ((b = y))), [], [])
(h2, AssumeAST, (cl  ((not ((x = b) = (x = y))))), [], [])
(x2, Equn1AST, (cl  ((x = x)) (x)), [], [])
(x3, Equn2AST, (cl  ((x = x)) ((not x))), [], [])
(x1, ResoAST, (cl  ((x = x))), [ x2 x3], [])
(x4, Equp1AST, (cl  ((not (b = y))) (b) ((not y))), [], [])
(x5, ResoAST, (cl  (b) ((not y))), [ h1 x4], [])
(x6, Equp1AST, (cl  ((not (x = b))) (x) ((not b))), [], [])
(x7, Equn2AST, (cl  ((x = y)) (x) (y)), [], [])
(x8, Equn2AST, (cl  (((x = b) = (x = y))) ((x = b)) ((x = y))), [], [])
(x9, ResoAST, (cl  (((x = b) = (x = y))) ((x = y)) (x) (x)), [ x5 x6 x7 x8], [])
(x10, Equp2AST, (cl  ((not (b = y))) ((not b)) (y)), [], [])
(x11, ResoAST, (cl  ((not b)) (y)), [ h1 x10], [])
(x12, Equn2AST, (cl  ((x = b)) (x) (b)), [], [])
(x13, Equp1AST, (cl  ((not (x = y))) (x) ((not y))), [], [])
(x14, Equn1AST, (cl  (((x = b) = (x = y))) ((not (x = b))) ((not (x = y)))), [], [])
(x15, ResoAST, (cl  (((x = b) = (x = y))) ((not (x = y))) (x) (x)), [ x11 x12 x13 x14], [])
(x16, ResoAST, (cl  (((x = b) = (x = y))) (x)), [ x9 x15], [])
(x17, ResoAST, (cl  (((x = b) = (x = y))) (x)), [ x16], [])
(x18, Equn1AST, (cl  ((x = y)) ((not x)) ((not y))), [], [])
(x19, Equn1AST, (cl  ((x = b)) ((not x)) ((not b))), [], [])
(x = b) = (x = y), ~(x = b), ~(x = y)   (x = y), ~x, ~y     
-------------------------------------------------------
          (x = b) = (x = y), ~(x = b), ~x, ~y               x = b, ~x, ~b
          ---------------------------------------------------------------
                         (x = b) = (x = y), ~x, ~y, ~b                     ~b, y
                         -------------------------------------------------------
                                        (x = b) = (x = y), ~x, ~b                    (x = b) = (x = y), x
                                        -----------------------------------------------------------------
                                                            (x = b) = (x = y), ~x, ~b                         (x = b) = (x = y), x
                                                            -----------------------------------------------------------------------
                                                                                     (x = b) = (x = y), ~b
(x20, ResoAST, (cl  (((x = b) = (x = y))) ((not b))), [ x14 x18 x19 x11 x17 x16], [])
(x21, ResoAST, (cl  (((x = b) = (x = y))) ((not y))), [ x20 x5], [])
(x22, Equp2AST, (cl  ((not (x = b))) ((not x)) (b)), [], [])
(x23, ResoAST, (cl  (((x = b) = (x = y))) ((not (x = b)))), [ x22 x20 x16], [])
(x24, Equp2AST, (cl  ((not (x = y))) ((not x)) (y)), [], [])
(x25, ResoAST, (cl  (((x = b) = (x = y))) ((not (x = y)))), [ x24 x21 x17], [])
(t3, ResoAST, (cl  (((x = b) = (x = y)))), [ x8 x23 x25], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_trans: 
(h1, AssumeAST, (cl  ((b = y))), [], [])
(h2, AssumeAST, (cl  ((not ((x = b) = (x = y))))), [], [])
(x2, Equn1AST, (cl  ((x = x)) (x)), [], [])
(x3, Equn2AST, (cl  ((x = x)) ((not x))), [], [])
(x1, ResoAST, (cl  ((x = x))), [ x2 x3], [])
(x4, Equp1AST, (cl  ((not (b = y))) (b) ((not y))), [], [])
(x5, ResoAST, (cl  (b) ((not y))), [ h1 x4], [])
(x6, Equp1AST, (cl  ((not (x = b))) (x) ((not b))), [], [])
(x7, Equn2AST, (cl  ((x = y)) (x) (y)), [], [])
(x8, Equn2AST, (cl  (((x = b) = (x = y))) ((x = b)) ((x = y))), [], [])
(x9, ResoAST, (cl  (((x = b) = (x = y))) ((x = y)) (x) (x)), [ x5 x6 x7 x8], [])
(x10, Equp2AST, (cl  ((not (b = y))) ((not b)) (y)), [], [])
(x11, ResoAST, (cl  ((not b)) (y)), [ h1 x10], [])
(x12, Equn2AST, (cl  ((x = b)) (x) (b)), [], [])
(x13, Equp1AST, (cl  ((not (x = y))) (x) ((not y))), [], [])
(x14, Equn1AST, (cl  (((x = b) = (x = y))) ((not (x = b))) ((not (x = y)))), [], [])
(x15, ResoAST, (cl  (((x = b) = (x = y))) ((not (x = y))) (x) (x)), [ x11 x12 x13 x14], [])
(x16, ResoAST, (cl  (((x = b) = (x = y))) (x)), [ x9 x15], [])
(x17, ResoAST, (cl  (((x = b) = (x = y))) (x)), [ x16], [])
(x18, Equn1AST, (cl  ((x = y)) ((not x)) ((not y))), [], [])
(x19, Equn1AST, (cl  ((x = b)) ((not x)) ((not b))), [], [])
(x20, ResoAST, (cl  (((x = b) = (x = y))) ((not b))), [ x14 x18 x19 x11 x17 x16], [])
(x21, ResoAST, (cl  (((x = b) = (x = y))) ((not y))), [ x20 x5], [])
(x22, Equp2AST, (cl  ((not (x = b))) ((not x)) (b)), [], [])
(x23, ResoAST, (cl  (((x = b) = (x = y))) ((not (x = b)))), [ x22 x20 x16], [])
(x24, Equp2AST, (cl  ((not (x = y))) ((not x)) (y)), [], [])
(x25, ResoAST, (cl  (((x = b) = (x = y))) ((not (x = y)))), [ x24 x21 x17], [])
(t3, ResoAST, (cl  (((x = b) = (x = y)))), [ x8 x23 x25], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_simplify: 
(h1, AssumeAST, (cl  ((b = y))), [], [])
(h2, AssumeAST, (cl  ((not ((x = b) = (x = y))))), [], [])
(x2, Equn1AST, (cl  ((x = x)) (x)), [], [])
(x3, Equn2AST, (cl  ((x = x)) ((not x))), [], [])
(x1, ResoAST, (cl  ((x = x))), [ x2 x3], [])
(x4, Equp1AST, (cl  ((not (b = y))) (b) ((not y))), [], [])
(x5, ResoAST, (cl  (b) ((not y))), [ h1 x4], [])
(x6, Equp1AST, (cl  ((not (x = b))) (x) ((not b))), [], [])
(x7, Equn2AST, (cl  ((x = y)) (x) (y)), [], [])
(x8, Equn2AST, (cl  (((x = b) = (x = y))) ((x = b)) ((x = y))), [], [])
(x9, ResoAST, (cl  (((x = b) = (x = y))) ((x = y)) (x) (x)), [ x5 x6 x7 x8], [])
(x10, Equp2AST, (cl  ((not (b = y))) ((not b)) (y)), [], [])
(x11, ResoAST, (cl  ((not b)) (y)), [ h1 x10], [])
(x12, Equn2AST, (cl  ((x = b)) (x) (b)), [], [])
(x13, Equp1AST, (cl  ((not (x = y))) (x) ((not y))), [], [])
(x14, Equn1AST, (cl  (((x = b) = (x = y))) ((not (x = b))) ((not (x = y)))), [], [])
(x15, ResoAST, (cl  (((x = b) = (x = y))) ((not (x = y))) (x) (x)), [ x11 x12 x13 x14], [])
(x16, ResoAST, (cl  (((x = b) = (x = y))) (x)), [ x9 x15], [])
(x17, ResoAST, (cl  (((x = b) = (x = y))) (x)), [ x16], [])
(x18, Equn1AST, (cl  ((x = y)) ((not x)) ((not y))), [], [])
(x19, Equn1AST, (cl  ((x = b)) ((not x)) ((not b))), [], [])
(x20, ResoAST, (cl  (((x = b) = (x = y))) ((not b))), [ x14 x18 x19 x11 x17 x16], [])
(x21, ResoAST, (cl  (((x = b) = (x = y))) ((not y))), [ x20 x5], [])
(x22, Equp2AST, (cl  ((not (x = b))) ((not x)) (b)), [], [])
(x23, ResoAST, (cl  (((x = b) = (x = y))) ((not (x = b)))), [ x22 x20 x16], [])
(x24, Equp2AST, (cl  ((not (x = y))) ((not x)) (y)), [], [])
(x25, ResoAST, (cl  (((x = b) = (x = y))) ((not (x = y)))), [ x24 x21 x17], [])
(t3, ResoAST, (cl  (((x = b) = (x = y)))), [ x8 x23 x25], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_proj: 
(h1, AssumeAST, (cl  ((b = y))), [], [])
(h2, AssumeAST, (cl  ((not ((x = b) = (x = y))))), [], [])
(x2, Equn1AST, (cl  ((x = x)) (x)), [], [])
(x3, Equn2AST, (cl  ((x = x)) ((not x))), [], [])
(x1, ResoAST, (cl  ((x = x))), [ x2 x3], [])
(x4, Equp1AST, (cl  ((not (b = y))) (b) ((not y))), [], [])
(x5, ResoAST, (cl  (b) ((not y))), [ h1 x4], [])
(x6, Equp1AST, (cl  ((not (x = b))) (x) ((not b))), [], [])
(x7, Equn2AST, (cl  ((x = y)) (x) (y)), [], [])
(x8, Equn2AST, (cl  (((x = b) = (x = y))) ((x = b)) ((x = y))), [], [])
(x9, ResoAST, (cl  (((x = b) = (x = y))) ((x = y)) (x) (x)), [ x5 x6 x7 x8], [])
(x10, Equp2AST, (cl  ((not (b = y))) ((not b)) (y)), [], [])
(x11, ResoAST, (cl  ((not b)) (y)), [ h1 x10], [])
(x12, Equn2AST, (cl  ((x = b)) (x) (b)), [], [])
(x13, Equp1AST, (cl  ((not (x = y))) (x) ((not y))), [], [])
(x14, Equn1AST, (cl  (((x = b) = (x = y))) ((not (x = b))) ((not (x = y)))), [], [])
(x15, ResoAST, (cl  (((x = b) = (x = y))) ((not (x = y))) (x) (x)), [ x11 x12 x13 x14], [])
(x16, ResoAST, (cl  (((x = b) = (x = y))) (x)), [ x9 x15], [])
(x17, ResoAST, (cl  (((x = b) = (x = y))) (x)), [ x16], [])
(x18, Equn1AST, (cl  ((x = y)) ((not x)) ((not y))), [], [])
(x19, Equn1AST, (cl  ((x = b)) ((not x)) ((not b))), [], [])
(x20, ResoAST, (cl  (((x = b) = (x = y))) ((not b))), [ x14 x18 x19 x11 x17 x16], [])
(x21, ResoAST, (cl  (((x = b) = (x = y))) ((not y))), [ x20 x5], [])
(x22, Equp2AST, (cl  ((not (x = b))) ((not x)) (b)), [], [])
(x23, ResoAST, (cl  (((x = b) = (x = y))) ((not (x = b)))), [ x22 x20 x16], [])
(x24, Equp2AST, (cl  ((not (x = y))) ((not x)) (y)), [], [])
(x25, ResoAST, (cl  (((x = b) = (x = y))) ((not (x = y)))), [ x24 x21 x17], [])
(t3, ResoAST, (cl  (((x = b) = (x = y)))), [ x8 x23 x25], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

Certif after process_subproof: 
(h1, AssumeAST, (cl  ((b = y))), [], [])
(h2, AssumeAST, (cl  ((not ((x = b) = (x = y))))), [], [])
(x2, Equn1AST, (cl  ((x = x)) (x)), [], [])
(x3, Equn2AST, (cl  ((x = x)) ((not x))), [], [])
(x1, ResoAST, (cl  ((x = x))), [ x2 x3], [])
(x4, Equp1AST, (cl  ((not (b = y))) (b) ((not y))), [], [])
(x5, ResoAST, (cl  (b) ((not y))), [ h1 x4], [])
(x6, Equp1AST, (cl  ((not (x = b))) (x) ((not b))), [], [])
(x7, Equn2AST, (cl  ((x = y)) (x) (y)), [], [])
(x8, Equn2AST, (cl  (((x = b) = (x = y))) ((x = b)) ((x = y))), [], [])
(x9, ResoAST, (cl  (((x = b) = (x = y))) ((x = y)) (x) (x)), [ x5 x6 x7 x8], [])
(x10, Equp2AST, (cl  ((not (b = y))) ((not b)) (y)), [], [])
(x11, ResoAST, (cl  ((not b)) (y)), [ h1 x10], [])
(x12, Equn2AST, (cl  ((x = b)) (x) (b)), [], [])
(x13, Equp1AST, (cl  ((not (x = y))) (x) ((not y))), [], [])
(x14, Equn1AST, (cl  (((x = b) = (x = y))) ((not (x = b))) ((not (x = y)))), [], [])
(x15, ResoAST, (cl  (((x = b) = (x = y))) ((not (x = y))) (x) (x)), [ x11 x12 x13 x14], [])
(x16, ResoAST, (cl  (((x = b) = (x = y))) (x)), [ x9 x15], [])
(x17, ResoAST, (cl  (((x = b) = (x = y))) (x)), [ x16], [])
(x18, Equn1AST, (cl  ((x = y)) ((not x)) ((not y))), [], [])
(x19, Equn1AST, (cl  ((x = b)) ((not x)) ((not b))), [], [])
(x20, ResoAST, (cl  (((x = b) = (x = y))) ((not b))), [ x14 x18 x19 x11 x17 x16], [])
(x21, ResoAST, (cl  (((x = b) = (x = y))) ((not y))), [ x20 x5], [])
(x22, Equp2AST, (cl  ((not (x = b))) ((not x)) (b)), [], [])
(x23, ResoAST, (cl  (((x = b) = (x = y))) ((not (x = b)))), [ x22 x20 x16], [])
(x24, Equp2AST, (cl  ((not (x = y))) ((not x)) (y)), [], [])
(x25, ResoAST, (cl  (((x = b) = (x = y))) ((not (x = y)))), [ x24 x21 x17], [])
(t3, ResoAST, (cl  (((x = b) = (x = y)))), [ x8 x23 x25], [])
(t4, ResoAST, (cl ), [ h2 t3], [])

