(assume h1 (> x 0))
(assume h2 (> y 0))
(assume h3 (not (> (+ x y) 0)))
(step t4 (cl (= (> x 0) (not (<= x 0)))) :rule comp_simplify)
(step t5 (cl (not (= (> x 0) (not (<= x 0)))) (not (> x 0)) (not (<= x 0))) :rule equiv_pos2)
(step t6 (cl (not (<= x 0))) :rule th_resolution :premises (h1 t4 t5))
(step t7 (cl (= (> y 0) (not (<= y 0)))) :rule comp_simplify)
(step t8 (cl (not (= (> y 0) (not (<= y 0)))) (not (> y 0)) (not (<= y 0))) :rule equiv_pos2)
(step t9 (cl (not (<= y 0))) :rule th_resolution :premises (h2 t7 t8))
(step t10 (cl (= (> (+ x y) 0) (not (<= (+ x y) 0)))) :rule comp_simplify)
(step t11 (cl (= (not (> (+ x y) 0)) (not (not (<= (+ x y) 0))))) :rule cong :premises (t10))
(step t12 (cl (= (not (not (<= (+ x y) 0))) (<= (+ x y) 0))) :rule not_simplify)
(step t13 (cl (= (not (> (+ x y) 0)) (<= (+ x y) 0))) :rule trans :premises (t11 t12))
(step t14 (cl (not (= (not (> (+ x y) 0)) (<= (+ x y) 0))) (not (not (> (+ x y) 0))) (<= (+ x y) 0)) :rule equiv_pos2)
(step t15 (cl (not (not (not (> (+ x y) 0)))) (> (+ x y) 0)) :rule not_not)
(step t16 (cl (not (= (not (> (+ x y) 0)) (<= (+ x y) 0))) (> (+ x y) 0) (<= (+ x y) 0)) :rule th_resolution :premises (t15 t14))
(step t17 (cl (<= (+ x y) 0)) :rule th_resolution :premises (h3 t13 t16))
(step t18 (cl (<= y 0) (not (<= (+ x y) 0)) (<= x 0)) :rule la_generic :args (1 1 1))
(step t19 (cl) :rule resolution :premises (t18 t6 t9 t17))
