(assume a0 (and (or op_0 op_2 op_1) (or (not op_0) (not op_2) (not op_1)) (or (not op_0) op_2) (or (not op_2) op_1) (or (not op_1) op_0)))
(step t1 (cl (or op_0 op_2 op_1)) :rule and :premises (a0))
(step t2 (cl op_0 op_2 op_1) :rule or :premises (t1))
(step t3 (cl op_1 op_0 op_2) :rule reordering :premises (t2))
(step t4 (cl (or (not op_2) op_1)) :rule and :premises (a0))
(step t5 (cl (not op_2) op_1) :rule or :premises (t4))
(step t6 (cl op_1 (not op_2)) :rule reordering :premises (t5))
(step t7 (cl (or (not op_1) op_0)) :rule and :premises (a0))
(step t8 (cl (not op_1) op_0) :rule or :premises (t7))
(step t9 (cl op_0 (not op_1)) :rule reordering :premises (t8))
(step t10 (cl (or (not op_0) (not op_2) (not op_1))) :rule and :premises (a0))
(step t11 (cl (not op_0) (not op_2) (not op_1)) :rule or :premises (t10))
(step t12 (cl (not op_2) (not op_0) (not op_2)) :rule resolution :premises (t6 t11))
(step t13 (cl (not op_2) (not op_0)) :rule contraction :premises (t12))
(step t14 (cl (or (not op_0) op_2)) :rule and :premises (a0))
(step t15 (cl (not op_0) op_2) :rule or :premises (t14))
(step t16 (cl op_2 (not op_0)) :rule reordering :premises (t15))
(step t17 (cl (not op_0) (not op_0)) :rule resolution :premises (t13 t16))
(step t18 (cl (not op_0)) :rule contraction :premises (t17))
(step t19 (cl (not op_1)) :rule resolution :premises (t9 t18))
(step t20 (cl (not op_2)) :rule resolution :premises (t6 t19))
(step t21 (cl) :rule resolution :premises (t3 t20 t19 t18))

