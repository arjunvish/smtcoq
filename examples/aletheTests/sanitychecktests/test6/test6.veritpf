(assume h1 (not (or (not (= (f x) y)) (not (g (f x))) (g y))))
(step t2 (cl (not (not (= (f x) y)))) :rule not_or :premises (h1))
(step t3 (cl (not (not (not (= (f x) y)))) (= (f x) y)) :rule not_not)
(step t4 (cl (= (f x) y)) :rule th_resolution :premises (t3 t2))
(step t5 (cl (not (not (g (f x))))) :rule not_or :premises (h1))
(step t6 (cl (not (not (not (g (f x))))) (g (f x))) :rule not_not)
(step t7 (cl (g (f x))) :rule th_resolution :premises (t6 t5))
(step t8 (cl (not (g y))) :rule not_or :premises (h1))
(step t9 (cl (not (= (f x) y)) (not (g (f x))) (g y)) :rule eq_congruent_pred)
(step t10 (cl) :rule resolution :premises (t9 t4 t7 t8))
