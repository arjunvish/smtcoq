Certif before preprocessing: 
(a0, AssumeAST, (cl  ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))) ((not (not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))) ((not (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [], [])
(t2, HoleAST, (cl  ((((f ( x)) = y) = (y = (f ( x)))))), [], [ ARITH_POLY_NORM (((f ( x)) = y) = (y = (f ( x))))])
(t3, CongAST, (cl  (((not ((f ( x)) = y)) = (not (y = (f ( x))))))), [ t2], [])
(t4, ReflAST, (cl  (((not (g ( (f ( x))))) = (not (g ( (f ( x)))))))), [], [])
(t5, ReflAST, (cl  (((g ( y)) = (g ( y))))), [], [])
(t6, CongAST, (cl  (((or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y))) = (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [ t3 t4 t5], [])
(t7, CongAST, (cl  (((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))))))), [ t6], [])
(t8, NotnotAST, (cl  ((not (not (not (y = (f ( x))))))) ((y = (f ( x))))), [], [])
(t9, Equp2AST, (cl  ((not ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))))))) ((not (not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))) ((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [], [])
(t10, ResoAST, (cl  ((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [ t9 t7 a0], [])
(t11, NorAST, (cl  ((not (not (y = (f ( x))))))), [ t10], [])
(t12, ResoAST, (cl  ((y = (f ( x))))), [ t8 t11], [])
(t13, ReflAST, (cl  (((f ( x)) = (f ( x))))), [], [])
(t14, CongAST, (cl  (((y = (f ( x))) = ((f ( x)) = (f ( x)))))), [ t12 t13], [])
(t15, CongAST, (cl  (((not (y = (f ( x)))) = (not ((f ( x)) = (f ( x))))))), [ t14], [])
(t16, ReflAST, (cl  (((not (g ( (f ( x))))) = (not (g ( (f ( x)))))))), [], [])
(t17, CongAST, (cl  (((g ( y)) = (g ( (f ( x))))))), [ t12], [])
(t18, CongAST, (cl  (((or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))) = (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t15 t16 t17], [])
(t19, CongAST, (cl  (((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t18], [])
(t20, AllsimpAST, (cl  ((((f ( x)) = (f ( x))) = (true)))), [], [ eq_simplify1 (f ( x))])
(t21, CongAST, (cl  (((not ((f ( x)) = (f ( x)))) = (not (true))))), [ t20], [])
(t22, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t23, TransAST, (cl  (((not ((f ( x)) = (f ( x)))) = (false)))), [ t21 t22], [])
(t24, ReflAST, (cl  (((g ( (f ( x)))) = (g ( (f ( x))))))), [], [])
(t25, CongAST, (cl  (((or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (false) (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t23 t4 t24], [])
(t26, AllsimpAST, (cl  (((or  (false) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [], [ or_simplify2 cvc5_nary_op (cvc5_nary_op ( (not (g ( (f ( x)))))))])
(t27, TransAST, (cl  (((or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t25 t26], [])
(t28, CongAST, (cl  (((not (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x)))))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t27], [])
(t29, TransAST, (cl  (((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t19 t28], [])
(t30, TransAST, (cl  (((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t7 t29], [])
(t31, ResoAST, (cl  ((not (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t1 t30 a0], [])
(t32, NorAST, (cl  ((not (g ( (f ( x))))))), [ t31], [])
(t33, NotnotAST, (cl  ((not (not (not (g ( (f ( x)))))))) ((g ( (f ( x)))))), [], [])
(t34, NorAST, (cl  ((not (not (g ( (f ( x)))))))), [ t31], [])
(t35, ResoAST, (cl  ((g ( (f ( x)))))), [ t33 t34], [])
(t36, ResoAST, (cl ), [ t32 t35], [])

Certif after storing shared terms: 
(a0, AssumeAST, (cl  ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))) ((not (not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))) ((not (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [], [])
(t2, HoleAST, (cl  ((((f ( x)) = y) = (y = (f ( x)))))), [], [ ARITH_POLY_NORM (((f ( x)) = y) = (y = (f ( x))))])
(t3, CongAST, (cl  (((not ((f ( x)) = y)) = (not (y = (f ( x))))))), [ t2], [])
(t4, ReflAST, (cl  (((not (g ( (f ( x))))) = (not (g ( (f ( x)))))))), [], [])
(t5, ReflAST, (cl  (((g ( y)) = (g ( y))))), [], [])
(t6, CongAST, (cl  (((or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y))) = (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [ t3 t4 t5], [])
(t7, CongAST, (cl  (((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))))))), [ t6], [])
(t8, NotnotAST, (cl  ((not (not (not (y = (f ( x))))))) ((y = (f ( x))))), [], [])
(t9, Equp2AST, (cl  ((not ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))))))) ((not (not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))) ((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [], [])
(t10, ResoAST, (cl  ((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [ t9 t7 a0], [])
(t11, NorAST, (cl  ((not (not (y = (f ( x))))))), [ t10], [])
(t12, ResoAST, (cl  ((y = (f ( x))))), [ t8 t11], [])
(t13, ReflAST, (cl  (((f ( x)) = (f ( x))))), [], [])
(t14, CongAST, (cl  (((y = (f ( x))) = ((f ( x)) = (f ( x)))))), [ t12 t13], [])
(t15, CongAST, (cl  (((not (y = (f ( x)))) = (not ((f ( x)) = (f ( x))))))), [ t14], [])
(t16, ReflAST, (cl  (((not (g ( (f ( x))))) = (not (g ( (f ( x)))))))), [], [])
(t17, CongAST, (cl  (((g ( y)) = (g ( (f ( x))))))), [ t12], [])
(t18, CongAST, (cl  (((or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))) = (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t15 t16 t17], [])
(t19, CongAST, (cl  (((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t18], [])
(t20, AllsimpAST, (cl  ((((f ( x)) = (f ( x))) = (true)))), [], [ eq_simplify1 (f ( x))])
(t21, CongAST, (cl  (((not ((f ( x)) = (f ( x)))) = (not (true))))), [ t20], [])
(t22, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t23, TransAST, (cl  (((not ((f ( x)) = (f ( x)))) = (false)))), [ t21 t22], [])
(t24, ReflAST, (cl  (((g ( (f ( x)))) = (g ( (f ( x))))))), [], [])
(t25, CongAST, (cl  (((or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (false) (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t23 t4 t24], [])
(t26, AllsimpAST, (cl  (((or  (false) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [], [ or_simplify2 cvc5_nary_op (cvc5_nary_op ( (not (g ( (f ( x)))))))])
(t27, TransAST, (cl  (((or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t25 t26], [])
(t28, CongAST, (cl  (((not (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x)))))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t27], [])
(t29, TransAST, (cl  (((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t19 t28], [])
(t30, TransAST, (cl  (((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t7 t29], [])
(t31, ResoAST, (cl  ((not (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t1 t30 a0], [])
(t32, NorAST, (cl  ((not (g ( (f ( x))))))), [ t31], [])
(t33, NotnotAST, (cl  ((not (not (not (g ( (f ( x)))))))) ((g ( (f ( x)))))), [], [])
(t34, NorAST, (cl  ((not (not (g ( (f ( x)))))))), [ t31], [])
(t35, ResoAST, (cl  ((g ( (f ( x)))))), [ t33 t34], [])
(t36, ResoAST, (cl ), [ t32 t35], [])

Certif after process_fins: 
(a0, AssumeAST, (cl  ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))) ((not (not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))) ((not (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [], [])
(t2, HoleAST, (cl  ((((f ( x)) = y) = (y = (f ( x)))))), [], [ ARITH_POLY_NORM (((f ( x)) = y) = (y = (f ( x))))])
(t3, CongAST, (cl  (((not ((f ( x)) = y)) = (not (y = (f ( x))))))), [ t2], [])
(t4, ReflAST, (cl  (((not (g ( (f ( x))))) = (not (g ( (f ( x)))))))), [], [])
(t5, ReflAST, (cl  (((g ( y)) = (g ( y))))), [], [])
(t6, CongAST, (cl  (((or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y))) = (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [ t3 t4 t5], [])
(t7, CongAST, (cl  (((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))))))), [ t6], [])
(t8, NotnotAST, (cl  ((not (not (not (y = (f ( x))))))) ((y = (f ( x))))), [], [])
(t9, Equp2AST, (cl  ((not ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))))))) ((not (not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))) ((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [], [])
(t10, ResoAST, (cl  ((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [ t9 t7 a0], [])
(t11, NorAST, (cl  ((not (not (y = (f ( x))))))), [ t10], [])
(t12, ResoAST, (cl  ((y = (f ( x))))), [ t8 t11], [])
(t13, ReflAST, (cl  (((f ( x)) = (f ( x))))), [], [])
(t14, CongAST, (cl  (((y = (f ( x))) = ((f ( x)) = (f ( x)))))), [ t12 t13], [])
(t15, CongAST, (cl  (((not (y = (f ( x)))) = (not ((f ( x)) = (f ( x))))))), [ t14], [])
(t16, ReflAST, (cl  (((not (g ( (f ( x))))) = (not (g ( (f ( x)))))))), [], [])
(t17, CongAST, (cl  (((g ( y)) = (g ( (f ( x))))))), [ t12], [])
(t18, CongAST, (cl  (((or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))) = (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t15 t16 t17], [])
(t19, CongAST, (cl  (((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t18], [])
(t20, AllsimpAST, (cl  ((((f ( x)) = (f ( x))) = (true)))), [], [ eq_simplify1 (f ( x))])
(t21, CongAST, (cl  (((not ((f ( x)) = (f ( x)))) = (not (true))))), [ t20], [])
(t22, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t23, TransAST, (cl  (((not ((f ( x)) = (f ( x)))) = (false)))), [ t21 t22], [])
(t24, ReflAST, (cl  (((g ( (f ( x)))) = (g ( (f ( x))))))), [], [])
(t25, CongAST, (cl  (((or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (false) (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t23 t4 t24], [])
(t26, AllsimpAST, (cl  (((or  (false) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [], [ or_simplify2 cvc5_nary_op (cvc5_nary_op ( (not (g ( (f ( x)))))))])
(t27, TransAST, (cl  (((or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t25 t26], [])
(t28, CongAST, (cl  (((not (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x)))))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t27], [])
(t29, TransAST, (cl  (((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t19 t28], [])
(t30, TransAST, (cl  (((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t7 t29], [])
(t31, ResoAST, (cl  ((not (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t1 t30 a0], [])
(t32, NorAST, (cl  ((not (g ( (f ( x))))))), [ t31], [])
(t33, NotnotAST, (cl  ((not (not (not (g ( (f ( x)))))))) ((g ( (f ( x)))))), [], [])
(t34, NorAST, (cl  ((not (not (g ( (f ( x)))))))), [ t31], [])
(t35, ResoAST, (cl  ((g ( (f ( x)))))), [ t33 t34], [])
(t36, ResoAST, (cl ), [ t32 t35], [])

Certif after process_hole: 
(a0, AssumeAST, (cl  ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))) ((not (not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))) ((not (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [], [])
(t2, ArithpolynormAST, (cl  ((((f ( x)) = y) = (y = (f ( x)))))), [], [ ARITH_POLY_NORM (((f ( x)) = y) = (y = (f ( x))))])
(t3, CongAST, (cl  (((not ((f ( x)) = y)) = (not (y = (f ( x))))))), [ t2], [])
(t4, ReflAST, (cl  (((not (g ( (f ( x))))) = (not (g ( (f ( x)))))))), [], [])
(t5, ReflAST, (cl  (((g ( y)) = (g ( y))))), [], [])
(t6, CongAST, (cl  (((or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y))) = (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [ t3 t4 t5], [])
(t7, CongAST, (cl  (((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))))))), [ t6], [])
(t8, NotnotAST, (cl  ((not (not (not (y = (f ( x))))))) ((y = (f ( x))))), [], [])
(t9, Equp2AST, (cl  ((not ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))))))) ((not (not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))) ((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [], [])
(t10, ResoAST, (cl  ((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [ t9 t7 a0], [])
(t11, NorAST, (cl  ((not (not (y = (f ( x))))))), [ t10], [])
(t12, ResoAST, (cl  ((y = (f ( x))))), [ t8 t11], [])
(t13, ReflAST, (cl  (((f ( x)) = (f ( x))))), [], [])
(t14, CongAST, (cl  (((y = (f ( x))) = ((f ( x)) = (f ( x)))))), [ t12 t13], [])
(t15, CongAST, (cl  (((not (y = (f ( x)))) = (not ((f ( x)) = (f ( x))))))), [ t14], [])
(t16, ReflAST, (cl  (((not (g ( (f ( x))))) = (not (g ( (f ( x)))))))), [], [])
(t17, CongAST, (cl  (((g ( y)) = (g ( (f ( x))))))), [ t12], [])
(t18, CongAST, (cl  (((or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))) = (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t15 t16 t17], [])
(t19, CongAST, (cl  (((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t18], [])
(t20, AllsimpAST, (cl  ((((f ( x)) = (f ( x))) = (true)))), [], [ eq_simplify1 (f ( x))])
(t21, CongAST, (cl  (((not ((f ( x)) = (f ( x)))) = (not (true))))), [ t20], [])
(t22, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t23, TransAST, (cl  (((not ((f ( x)) = (f ( x)))) = (false)))), [ t21 t22], [])
(t24, ReflAST, (cl  (((g ( (f ( x)))) = (g ( (f ( x))))))), [], [])
(t25, CongAST, (cl  (((or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (false) (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t23 t4 t24], [])
(t26, AllsimpAST, (cl  (((or  (false) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [], [ or_simplify2 cvc5_nary_op (cvc5_nary_op ( (not (g ( (f ( x)))))))])
(t27, TransAST, (cl  (((or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t25 t26], [])
(t28, CongAST, (cl  (((not (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x)))))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t27], [])
(t29, TransAST, (cl  (((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t19 t28], [])
(t30, TransAST, (cl  (((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t7 t29], [])
(t31, ResoAST, (cl  ((not (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t1 t30 a0], [])
(t32, NorAST, (cl  ((not (g ( (f ( x))))))), [ t31], [])
(t33, NotnotAST, (cl  ((not (not (not (g ( (f ( x)))))))) ((g ( (f ( x)))))), [], [])
(t34, NorAST, (cl  ((not (not (g ( (f ( x)))))))), [ t31], [])
(t35, ResoAST, (cl  ((g ( (f ( x)))))), [ t33 t34], [])
(t36, ResoAST, (cl ), [ t32 t35], [])

Certif after process_notnot: 
(a0, AssumeAST, (cl  ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))) ((not (not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))) ((not (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [], [])
(t2, ArithpolynormAST, (cl  ((((f ( x)) = y) = (y = (f ( x)))))), [], [ ARITH_POLY_NORM (((f ( x)) = y) = (y = (f ( x))))])
(t3, CongAST, (cl  (((not ((f ( x)) = y)) = (not (y = (f ( x))))))), [ t2], [])
(t4, ReflAST, (cl  (((not (g ( (f ( x))))) = (not (g ( (f ( x)))))))), [], [])
(t5, ReflAST, (cl  (((g ( y)) = (g ( y))))), [], [])
(t6, CongAST, (cl  (((or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y))) = (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [ t3 t4 t5], [])
(t7, CongAST, (cl  (((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))))))), [ t6], [])
(t9, Equp2AST, (cl  ((not ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))))))) ((not (not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))) ((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [], [])
(t10, ResoAST, (cl  ((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [ t9 t7 a0], [])
(t11, NorAST, (cl  ((not (not (y = (f ( x))))))), [ t10], [])
(t12, ResoAST, (cl  ((y = (f ( x))))), [ t11], [])
(t13, ReflAST, (cl  (((f ( x)) = (f ( x))))), [], [])
(t14, CongAST, (cl  (((y = (f ( x))) = ((f ( x)) = (f ( x)))))), [ t12 t13], [])
(t15, CongAST, (cl  (((not (y = (f ( x)))) = (not ((f ( x)) = (f ( x))))))), [ t14], [])
(t16, ReflAST, (cl  (((not (g ( (f ( x))))) = (not (g ( (f ( x)))))))), [], [])
(t17, CongAST, (cl  (((g ( y)) = (g ( (f ( x))))))), [ t12], [])
(t18, CongAST, (cl  (((or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))) = (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t15 t16 t17], [])
(t19, CongAST, (cl  (((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t18], [])
(t20, AllsimpAST, (cl  ((((f ( x)) = (f ( x))) = (true)))), [], [ eq_simplify1 (f ( x))])
(t21, CongAST, (cl  (((not ((f ( x)) = (f ( x)))) = (not (true))))), [ t20], [])
(t22, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t23, TransAST, (cl  (((not ((f ( x)) = (f ( x)))) = (false)))), [ t21 t22], [])
(t24, ReflAST, (cl  (((g ( (f ( x)))) = (g ( (f ( x))))))), [], [])
(t25, CongAST, (cl  (((or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (false) (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t23 t4 t24], [])
(t26, AllsimpAST, (cl  (((or  (false) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [], [ or_simplify2 cvc5_nary_op (cvc5_nary_op ( (not (g ( (f ( x)))))))])
(t27, TransAST, (cl  (((or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t25 t26], [])
(t28, CongAST, (cl  (((not (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x)))))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t27], [])
(t29, TransAST, (cl  (((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t19 t28], [])
(t30, TransAST, (cl  (((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t7 t29], [])
(t31, ResoAST, (cl  ((not (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t1 t30 a0], [])
(t32, NorAST, (cl  ((not (g ( (f ( x))))))), [ t31], [])
(t34, NorAST, (cl  ((not (not (g ( (f ( x)))))))), [ t31], [])
(t35, ResoAST, (cl  ((g ( (f ( x)))))), [ t34], [])
(t36, ResoAST, (cl ), [ t32 t35], [])

Certif after process_same: 
(a0, AssumeAST, (cl  ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))) ((not (not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))) ((not (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [], [])
(t2, ArithpolynormAST, (cl  ((((f ( x)) = y) = (y = (f ( x)))))), [], [ ARITH_POLY_NORM (((f ( x)) = y) = (y = (f ( x))))])
(t3, CongAST, (cl  (((not ((f ( x)) = y)) = (not (y = (f ( x))))))), [ t2], [])
(t4, ReflAST, (cl  (((not (g ( (f ( x))))) = (not (g ( (f ( x)))))))), [], [])
(t5, ReflAST, (cl  (((g ( y)) = (g ( y))))), [], [])
(t6, CongAST, (cl  (((or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y))) = (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [ t3 t4 t5], [])
(t7, CongAST, (cl  (((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))))))), [ t6], [])
(t9, Equp2AST, (cl  ((not ((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))))))) ((not (not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))))) ((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [], [])
(t10, ResoAST, (cl  ((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))))), [ t9 t7 a0], [])
(t11, NorAST, (cl  ((not (not (y = (f ( x))))))), [ t10], [])
(t12, ResoAST, (cl  ((y = (f ( x))))), [ t11], [])
(t13, ReflAST, (cl  (((f ( x)) = (f ( x))))), [], [])
(t14, CongAST, (cl  (((y = (f ( x))) = ((f ( x)) = (f ( x)))))), [ t12 t13], [])
(t15, CongAST, (cl  (((not (y = (f ( x)))) = (not ((f ( x)) = (f ( x))))))), [ t14], [])
(t16, ReflAST, (cl  (((not (g ( (f ( x))))) = (not (g ( (f ( x)))))))), [], [])
(t17, CongAST, (cl  (((g ( y)) = (g ( (f ( x))))))), [ t12], [])
(t18, CongAST, (cl  (((or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y))) = (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t15 t16 t17], [])
(t19, CongAST, (cl  (((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t18], [])
(t20, AllsimpAST, (cl  ((((f ( x)) = (f ( x))) = (true)))), [], [ eq_simplify1 (f ( x))])
(t21, CongAST, (cl  (((not ((f ( x)) = (f ( x)))) = (not (true))))), [ t20], [])
(t22, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t23, TransAST, (cl  (((not ((f ( x)) = (f ( x)))) = (false)))), [ t21 t22], [])
(t24, ReflAST, (cl  (((g ( (f ( x)))) = (g ( (f ( x))))))), [], [])
(t25, CongAST, (cl  (((or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (false) (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t23 t4 t24], [])
(t26, AllsimpAST, (cl  (((or  (false) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [], [ or_simplify2 cvc5_nary_op (cvc5_nary_op ( (not (g ( (f ( x)))))))])
(t27, TransAST, (cl  (((or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x))))) = (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t25 t26], [])
(t28, CongAST, (cl  (((not (or  (not ((f ( x)) = (f ( x)))) (not (g ( (f ( x))))) (g ( (f ( x)))))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t27], [])
(t29, TransAST, (cl  (((not (or  (not (y = (f ( x)))) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t19 t28], [])
(t30, TransAST, (cl  (((not (or  (not ((f ( x)) = y)) (not (g ( (f ( x))))) (g ( y)))) = (not (or  (not (g ( (f ( x))))) (g ( (f ( x))))))))), [ t7 t29], [])
(t31, ResoAST, (cl  ((not (or  (not (g ( (f ( x))))) (g ( (f ( x)))))))), [ t1 t30 a0], [])
(t32, NorAST, (cl  ((not (g ( (f ( x))))))), [ t31], [])
(t34, NorAST, (cl  ((not (not (g ( (f ( x)))))))), [ t31], [])
(t35, ResoAST, (cl  ((g ( (f ( x)))))), [ t34], [])
(t36, ResoAST, (cl ), [ t32 t35], [])

nwt: op_3 (aka Smt_var_y)File "./test6cvc5.v", line 23, characters 5-255:
Error:
Verit.import_trace: preprocessing certificate 

Error: Smtcoq_plugin.SmtForm.Make(Atom).NotWellTyped(_)
Position: Line 38 Position 1

