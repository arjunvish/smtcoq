Certif after process_subproof: 
(a0, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x117, Equn1AST, (cl  ((op_0 = op_0)) ((not op_0))), [], [])
(x118, Equn2AST, (cl  ((op_0 = op_0)) (op_0)), [], [])
(t2, ResoAST, (cl  ((op_0 = op_0))), [ x117 x118], [])
(x119, Equn1AST, (cl  ((op_1 = op_1)) ((not op_1))), [], [])
(x120, Equn2AST, (cl  ((op_1 = op_1)) (op_1)), [], [])
(t3, ResoAST, (cl  ((op_1 = op_1))), [ x119 x120], [])
(t4, ArithpolynormAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [ ARITH_POLY_NORM (((2 * op_2) + 1) = (1 + (2 * op_2)))])
(t5, ArithpolynormAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [ ARITH_POLY_NORM (((2 * op_3) + 1) = (1 + (2 * op_3)))])
(x1, EqcpAST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x3, Equn2AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x5, ResoAST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((1 + (2 * op_2)) = (1 + (2 * op_3)))) (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x1 x3], [])
(x2, EqcpAST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [], [])
(x4, Equn1AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x6, ResoAST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x2 x4], [])
(t6, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x5 x6 t4 t5], [])
(t7, ArithpolynormAST, (cl  ((((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3))])
(x124, Equp1AST, (cl  ((not (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [], [])
(x123, ResoAST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [ x124 t7], [])
(x122, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x121, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x122 t6], [])
(x125, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [ x123 x121], [])
(x126, Equn2AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((op_2 = op_3))), [], [])
(x127, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [ x125 x126], [])
(x131, Equp2AST, (cl  ((not (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((op_2 = op_3))), [], [])
(x130, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((op_2 = op_3))), [ x131 t7], [])
(x129, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x128, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ x129 t6], [])
(x132, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [ x130 x128], [])
(x133, Equn1AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not (op_2 = op_3)))), [], [])
(x134, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [ x132 x133], [])
(t8, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))), [ x127 x134], [])
(t9, ReflAST, (cl  (((2 * op_3) = (2 * op_3)))), [], [])
(x7, EqcpAST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_3) = (2 * op_3)))) ((not (((2 * op_2) + 1) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3)))), [], [])
(x9, Equn2AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((((2 * op_2) + 1) = (2 * op_3))) (((1 + (2 * op_2)) = (2 * op_3)))), [], [])
(x11, ResoAST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_3) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3))) (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))), [ x7 x9], [])
(x8, EqcpAST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_3) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((((2 * op_2) + 1) = (2 * op_3)))), [], [])
(x10, Equn1AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [], [])
(x12, ResoAST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_3) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3)))) (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))), [ x8 x10], [])
(t10, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))), [ x11 x12 t4 t9], [])

Problematic step
(t11, LiaRewriteAST, (cl  ((((1 + (2 * op_2)) = (2 * op_3)) = (false)))), [], [])

(x138, Equp1AST, (cl  ((not (((1 + (2 * op_2)) = (2 * op_3)) = (false)))) (((1 + (2 * op_2)) = (2 * op_3))) ((not (false)))), [], [])
(x137, ResoAST, (cl  (((1 + (2 * op_2)) = (2 * op_3))) ((not (false)))), [ x138 t11], [])
(x136, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))) ((((2 * op_2) + 1) = (2 * op_3))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [], [])
(x135, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [ x136 t10], [])
(x139, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [ x137 x135], [])
(x140, Equn2AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((((2 * op_2) + 1) = (2 * op_3))) ((false))), [], [])
(x141, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((((2 * op_2) + 1) = (2 * op_3)))), [ x139 x140], [])
(x145, Equp2AST, (cl  ((not (((1 + (2 * op_2)) = (2 * op_3)) = (false)))) ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((false))), [], [])
(x144, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((false))), [ x145 t11], [])
(x143, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))) ((not (((2 * op_2) + 1) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3)))), [], [])
(x142, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3)))), [ x143 t10], [])
(x146, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [ x144 x142], [])
(x147, Equn1AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not (false)))), [], [])
(x148, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((not (((2 * op_2) + 1) = (2 * op_3))))), [ x146 x147], [])
(t12, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false)))), [ x141 x148], [])
(x13, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = (false)))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [], [])
(x14, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [ x13 t12], [])
(x15, Itep1AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) (op_1) ((((2 * op_2) + 1) = (2 * op_3)))), [], [])
(x16, Iten1AST, (cl  ((ite  op_1 (op_2 = op_3) (false))) (op_1) ((not (false)))), [], [])
(x17, Equn2AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((ite  op_1 (op_2 = op_3) (false)))), [], [])
(x18, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (op_2 = op_3) (false))) (op_1) (op_1)), [ x14 x15 x16 x17], [])
(x19, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = (false)))) ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [], [])
(x20, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [ x19 t12], [])
(x21, Iten1AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) (op_1) ((not (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x22, Itep1AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) (op_1) ((false))), [], [])
(x23, Equn1AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not (ite  op_1 (op_2 = op_3) (false))))), [], [])
(x24, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) (op_1)), [ x20 x21 x22 x23 x18], [])
(x25, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [], [])
(x26, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [ x25 t8], [])
(x27, Itep2AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) ((not op_1)) ((op_2 = op_3))), [], [])
(x28, Iten2AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not op_1)) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [], [])
(x29, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x26 x27 x28 x17 x24], [])
(x30, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x23 x29], [])
(x31, Itep2AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not op_1)) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [], [])
(x32, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [ x31 x29 x24], [])
(x33, Iten2AST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not op_1)) ((not (op_2 = op_3)))), [], [])
(x34, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (op_2 = op_3)))), [ x33 x30 x24], [])
(x35, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [], [])
(x36, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [ x35 t8], [])
(t13, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))), [ x36 x32 x34], [])
(x227, Equn1AST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (op_2 = op_3) (false)))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x225, AndnAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((not (ite  op_1 (op_2 = op_3) (false)))) ((and  op_1 (op_2 = op_3)))), [], [])
(x229, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x225 x227], [])
(x228, Equn2AST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (op_2 = op_3) (false))) ((and  op_1 (op_2 = op_3)))), [], [])
(x226, AndnAST, (cl  ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((not (and  op_1 (op_2 = op_3)))) ((ite  op_1 (op_2 = op_3) (false)))), [], [])
(x230, ResoAST, (cl  ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (op_2 = op_3) (false)))), [ x226 x228], [])
(t14, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))), [ x229 x230], [])
(x152, Equp1AST, (cl  ((not ((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))) ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x151, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3))))), [ x152 t14], [])
(x150, Equp1AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [], [])
(x149, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x150 t13], [])
(x153, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [ x151 x149], [])
(x154, Equn2AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((and  op_1 (op_2 = op_3)))), [], [])
(x155, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x153 x154], [])
(x159, Equp2AST, (cl  ((not ((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))) ((not (ite  op_1 (op_2 = op_3) (false)))) ((and  op_1 (op_2 = op_3)))), [], [])
(x158, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((not (ite  op_1 (op_2 = op_3) (false)))) ((and  op_1 (op_2 = op_3)))), [ x159 t14], [])
(x157, Equp2AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 (op_2 = op_3) (false)))), [], [])
(x156, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 (op_2 = op_3) (false)))), [ x157 t13], [])
(x160, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [ x158 x156], [])
(x161, Equn1AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x162, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))))), [ x160 x161], [])
(t15, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))), [ x155 x162], [])
(t16, ReflAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(x37, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x39, Equn2AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x41, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3)))) ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ x37 x39], [])
(x38, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1)))), [], [])
(x40, Equn1AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x42, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ x38 x40], [])
(t17, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ x41 x42 t16 t5], [])
(t18, LiaRewriteAST, (cl  ((((2 * op_2) = (1 + (2 * op_3))) = (false)))), [], [])
(x166, Equp1AST, (cl  ((not (((2 * op_2) = (1 + (2 * op_3))) = (false)))) (((2 * op_2) = (1 + (2 * op_3)))) ((not (false)))), [], [])
(x165, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((not (false)))), [ x166 t18], [])
(x164, Equp1AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x163, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x164 t17], [])
(x167, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [ x165 x163], [])
(x168, Equn2AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) (((2 * op_2) = ((2 * op_3) + 1))) ((false))), [], [])
(x169, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) (((2 * op_2) = ((2 * op_3) + 1)))), [ x167 x168], [])
(x173, Equp2AST, (cl  ((not (((2 * op_2) = (1 + (2 * op_3))) = (false)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((false))), [], [])
(x172, ResoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((false))), [ x173 t18], [])
(x171, Equp2AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x170, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [ x171 t17], [])
(x174, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [ x172 x170], [])
(x175, Equn1AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not (false)))), [], [])
(x176, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [ x174 x175], [])
(t19, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false)))), [ x169 x176], [])
(t20, ArithpolynormAST, (cl  ((((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((2 * op_2) = (2 * op_3)) = (op_2 = op_3))])
(x43, Equp2AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((op_2 = op_3))), [], [])
(x44, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((op_2 = op_3))), [ x43 t20], [])
(x45, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(x46, Iten1AST, (cl  ((ite  op_1 (false) (op_2 = op_3))) (op_1) ((not (op_2 = op_3)))), [], [])
(x47, Equn2AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((ite  op_1 (false) (op_2 = op_3)))), [], [])
(x48, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3))) (op_1) (op_1)), [ x44 x45 x46 x47], [])
(x49, Equp1AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))) (((2 * op_2) = (2 * op_3))) ((not (op_2 = op_3)))), [], [])
(x50, ResoAST, (cl  (((2 * op_2) = (2 * op_3))) ((not (op_2 = op_3)))), [ x49 t20], [])
(x51, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x52, Itep1AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) (op_1) ((op_2 = op_3))), [], [])
(x53, Equn1AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 (false) (op_2 = op_3))))), [], [])
(x54, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (op_1)), [ x50 x51 x52 x53 x48], [])
(x55, Equp1AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = (false)))) (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [], [])
(x56, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [ x55 t19], [])
(x57, Itep2AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) ((not op_1)) ((false))), [], [])
(x58, Iten2AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not op_1)) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [], [])
(x59, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [ x56 x57 x58 x47 x54], [])
(x60, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ x53 x59], [])
(x61, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = ((2 * op_3) + 1)))), [], [])
(x62, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (((2 * op_2) = ((2 * op_3) + 1)))), [ x61 x59 x54], [])
(x63, Iten2AST, (cl  ((ite  op_1 (false) (op_2 = op_3))) ((not op_1)) ((not (false)))), [], [])
(x64, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (false)))), [ x63 x60 x54], [])
(x65, Equp2AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = (false)))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [], [])
(x66, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [ x65 t19], [])
(t21, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))), [ x66 x62 x64], [])
(x219, Equn1AST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 (false) (op_2 = op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x217, AndnAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_1 (false) (op_2 = op_3)))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x221, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ x217 x219], [])
(x220, Equn2AST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x218, AndnAST, (cl  ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3)))), [], [])
(x222, ResoAST, (cl  ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3)))), [ x218 x220], [])
(t22, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))), [ x221 x222], [])
(x180, Equp1AST, (cl  ((not ((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 (false) (op_2 = op_3))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x179, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((ite  op_1 (false) (op_2 = op_3))) ((not (and  (not op_1) (op_2 = op_3))))), [ x180 t22], [])
(x178, Equp1AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [], [])
(x177, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ x178 t21], [])
(x181, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [ x179 x177], [])
(x182, Equn2AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x183, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [ x181 x182], [])
(x187, Equp2AST, (cl  ((not ((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_1 (false) (op_2 = op_3)))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x186, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (ite  op_1 (false) (op_2 = op_3)))) ((and  (not op_1) (op_2 = op_3)))), [ x187 t22], [])
(x185, Equp2AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 (false) (op_2 = op_3)))), [], [])
(x184, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 (false) (op_2 = op_3)))), [ x185 t21], [])
(x188, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [ x186 x184], [])
(x189, Equn1AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x190, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x188 x189], [])
(t23, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))), [ x183 x190], [])
(x67, Equp2AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x68, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [ x67 t23], [])
(x69, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [], [])
(x70, Iten1AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) (op_0) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x71, Equn2AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x72, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) (op_0) (op_0)), [ x68 x69 x70 x71], [])
(x73, Equp1AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x74, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [ x73 t23], [])
(x75, Iten1AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_0) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x76, Itep1AST, (cl  ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x77, Equn1AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [], [])
(x78, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0)), [ x74 x75 x76 x77 x72], [])
(x79, Equp1AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x80, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [ x79 t15], [])
(x81, Itep2AST, (cl  ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not op_0)) ((and  op_1 (op_2 = op_3)))), [], [])
(x82, Iten2AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_0)) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))))), [], [])
(x83, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x80 x81 x82 x71 x78], [])
(x84, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x77 x83], [])
(x85, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x86, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x85 x83 x78], [])
(x87, Iten2AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) ((not op_0)) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x88, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (and  op_1 (op_2 = op_3))))), [ x87 x84 x78], [])
(x89, Equp2AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [], [])
(x90, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [ x89 t15], [])
(t24, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x90 x86 x88], [])
(x191, Equn1AST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x192, Equn2AST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(t25, ResoAST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x191 x192], [])
(x91, ImppAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x92, Equp1AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [], [])
(x93, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x92 t24], [])
(x94, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x91 x93], [])
(x95, Impn1AST, (cl  ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x96, Impn2AST, (cl  ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x97, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x94 x95 x96], [])
(x98, Equn1AST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x99, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x97 x98], [])
(x100, ImppAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x101, Equp2AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x102, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ x101 t24], [])
(x103, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [ x100 x102], [])
(x104, Impn1AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x105, Impn2AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x106, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x103 x104 x105], [])
(x107, Equn2AST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x108, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x106 x107], [])
(t26, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x108 x99], [])
(x109, Equp1AST, (cl  ((not ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x110, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x109 t26], [])
(x111, Equn1AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x112, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x110 x111], [])
(x113, Equp2AST, (cl  ((not ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x114, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x113 t26], [])
(x115, Equn2AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x116, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x114 x115], [])
(t27, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x112 x116], [])
(t28, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t1 t27 a0], [])
(x237, Impn2AST, (cl  ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(t29, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x237 t28], [])
(x238, AndnAST, (cl  ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [], [])
(t30, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ x238 t29], [])
(t32, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t34, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((not op_1))), [], [ 0])
(x239, Impn1AST, (cl  ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(t36, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ x239 t28], [])
(x240, Itep1AST, (cl  ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0) ((and  op_1 (op_2 = op_3)))), [], [])
(t37, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (op_0) ((and  op_1 (op_2 = op_3)))), [ x240 t36], [])
(t38, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t39, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((op_2 = op_3))), [], [ 1])
(t41, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) (op_1)), [], [ 0])
(t43, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t44, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (and  op_1 (op_2 = op_3)))) ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t30 t38 t39 t41 t43], [])
(x241, Itep2AST, (cl  ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not op_0)) ((and  op_1 (op_2 = op_3)))), [], [])
(t46, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not op_0)) ((and  op_1 (op_2 = op_3)))), [ x241 t36], [])
(t48, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not op_0)) ((not op_0))), [ t44 t46], [])
(t50, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((and  (not op_1) (op_2 = op_3)))), [ t37 t48], [])
(t51, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not op_1))), [ t34 t50], [])
(t52, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((imp  op_1 op_0))), [ t32 t51], [])
(t53, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((op_2 = op_3))), [], [ 1])
(t55, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((op_2 = op_3))), [ t53 t50], [])
(t56, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t58, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((imp  op_0 op_1))), [ t56 t48], [])
(t59, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = o     = false
     : bool
p_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3)))))), [ t30 t52 t55 t58], [])
(x234, AndpAST, (cl  ((not (and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3)))))) ((and  (not op_1) (op_2 = op_3)))), [], [ 0])
(x233, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (not op_1) (op_2 = op_3)))), [ t59 x234], [])
(x213, Iten1AST, (cl  ((ite  op_1 (false) (op_2 = op_3))) (op_1) ((not (op_2 = op_3)))), [], [])
(x214, AndpAST, (cl  ((and  (not op_1) (op_2 = op_3))) ((not op_1))), [], [ 0])
(x215, AndpAST, (cl  ((and  (not op_1) (op_2 = op_3))) ((op_2 = op_3))), [], [ 1])
(x216, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 (false) (op_2 = op_3)))), [ x213 x214 x215 x233], [])
(x235, AndpAST, (cl  ((not (and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3)))))) ((not (ite  op_1 (false) (op_2 = op_3))))), [], [ 1])
(x236, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ t59 x235], [])
(x242, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3)))))), [ x216 x236], [])
(x244, AndpAST, (cl  ((not (and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3)))))) ((ite  op_1 (false) (op_2 = op_3)))), [], [ 0])
(x243, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((ite  op_1 (false) (op_2 = op_3)))), [ x242 x244], [])
(x207, AndnAST, (cl  ((and  (not op_1) (op_2 = op_3))) (op_1) ((not (op_2 = op_3)))), [], [])
(x208, Itep1AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) (op_1) ((op_2 = op_3))), [], [])
(x209, Itep2AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) ((not op_1)) ((false))), [], [])
(x210, FalsAST, (cl  ((not (false)))), [], [])
(x211, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (not op_1) (op_2 = op_3)))), [ x207 x208 x209 x210 x243], [])
(x245, AndpAST, (cl  ((not (and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3)))))) ((not (and  (not op_1) (op_2 = op_3))))), [], [ 1])
(x246, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((not (and  (not op_1) (op_2 = op_3))))), [ x242 x245], [])
(x247, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false)))))), [ x211 x246], [])
(x249, AndpAST, (cl  ((not (and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false)))))) ((and  op_1 (op_2 = op_3)))), [], [ 0])
(x248, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  op_1 (op_2 = op_3)))), [ x247 x249], [])
(x200, Iten2AST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not op_1)) ((not (op_2 = op_3)))), [], [])
(x201, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) (op_1)), [], [ 0])
(x203, ResoAST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3)))) ((not (op_2 = op_3)))), [ x200 x201], [])
(x202, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((op_2 = op_3))), [], [ 1])
(x204, ResoAST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3))))), [ x203 x202], [])
(x205, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((ite  op_1 (op_2 = op_3) (false)))), [ x204 x248], [])
(x250, AndpAST, (cl  ((not (and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false)))))) ((not (ite  op_1 (op_2 = op_3) (false))))), [], [ 1])
(x251, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x247 x250], [])
(x252, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3)))))), [ x205 x251], [])
(x254, AndpAST, (cl  ((not (and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3)))))) ((ite  op_1 (op_2 = op_3) (false)))), [], [ 0])
(x253, ResoAST, (cl  ((ite  op_1 (op_2 = op_3) (false)))), [ x252 x254], [])
(x194, AndnAST, (cl  ((and  op_1 (op_2 = op_3))) ((not op_1)) ((not (op_2 = op_3)))), [], [])
(x195, Itep2AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) ((not op_1)) ((op_2 = op_3))), [], [])
(x196, Itep1AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) (op_1) ((false))), [], [])
(x197, FalsAST, (cl  ((not (false)))), [], [])
(x198, ResoAST, (cl  ((and  op_1 (op_2 = op_3)))), [ x194 x195 x196 x197 x253], [])
(x255, AndpAST, (cl  ((not (and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3)))))) ((not (and  op_1 (op_2 = op_3))))), [], [ 1])
(x256, ResoAST, (cl  ((not (and  op_1 (op_2 = op_3))))), [ x252 x255], [])
(x257, ResoAST, (cl ), [ x198 x256], [])

