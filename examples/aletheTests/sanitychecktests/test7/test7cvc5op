Certif before preprocessing: 
(a0, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t2, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t3, ReflAST, (cl  ((op_1 = op_1))), [], [])
(t4, HoleAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [ ARITH_POLY_NORM (((2 * op_2) + 1) = (1 + (2 * op_2)))])
(t5, HoleAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [ ARITH_POLY_NORM (((2 * op_3) + 1) = (1 + (2 * op_3)))])
(t6, CongAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t4 t5], [])
(t7, HoleAST, (cl  ((((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3))])
(t8, TransAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))), [ t6 t7], [])
(t9, ReflAST, (cl  (((2 * op_3) = (2 * op_3)))), [], [])
(t10, CongAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))), [ t4 t9], [])
(t11, AllsimpAST, (cl  ((((1 + (2 * op_2)) = (2 * op_3)) = (false)))), [], [])
(t12, TransAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false)))), [ t10 t11], [])
(t13, CongAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))), [ t3 t8 t12], [])
(t14, AllsimpAST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))), [], [ ite_simplify10 op_1 (op_2 = op_3)])
(t15, TransAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))), [ t13 t14], [])
(t16, ReflAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t17, CongAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ t16 t5], [])
(t18, AllsimpAST, (cl  ((((2 * op_2) = (1 + (2 * op_3))) = (false)))), [], [])
(t19, TransAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false)))), [ t17 t18], [])
(t20, HoleAST, (cl  ((((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((2 * op_2) = (2 * op_3)) = (op_2 = op_3))])
(t21, CongAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))), [ t3 t19 t20], [])
(t22, AllsimpAST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))), [], [ ite_simplify11 op_1 (op_2 = op_3)])
(t23, TransAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))), [ t21 t22], [])
(t24, CongAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ t2 t15 t23], [])
(t25, ReflAST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(t26, CongAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t24 t25], [])
(t27, CongAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ t26], [])
(t28, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t1 t27 a0], [])
(t29, Nimp2AST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t28], [])
(t30, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t29], [])
(t31, SameAST, (cl  ((not (op_2 = op_3))) ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0)))), [ t30], [])
(t32, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t33, SameAST, (cl  (op_1) ((imp  op_1 op_0))), [ t32], [])
(t34, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((not op_1))), [], [])
(t35, SameAST, (cl  ((not op_1)) ((not (and  (not op_1) (op_2 = op_3))))), [ t34], [])
(t36, Nimp1AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ t28], [])
(t37, Ite1AST, (cl  (op_0) ((and  (not op_1) (op_2 = op_3)))), [ t36], [])
(t38, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t39, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t40, SameAST, (cl  ((op_2 = op_3)) ((not (and  op_1 (op_2 = op_3))))), [ t39], [])
(t41, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) (op_1)), [], [])
(t42, SameAST, (cl  (op_1) ((not (and  op_1 (op_2 = op_3))))), [ t41], [])
(t43, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t44, ResoAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t31 t38 t40 t42 t43], [])
(t45, SameAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t44], [])
(t46, Ite2AST, (cl  ((not op_0)) ((and  op_1 (op_2 = op_3)))), [ t36], [])
(t47, SameAST, (cl  ((and  op_1 (op_2 = op_3))) ((not op_0))), [ t46], [])
(t48, ResoAST, (cl  ((not op_0)) ((not op_0))), [ t45 t47], [])
(t49, SameAST, (cl  ((not op_0))), [ t48], [])
(t50, ResoAST, (cl  ((and  (not op_1) (op_2 = op_3)))), [ t37 t49], [])
(t51, ResoAST, (cl  ((not op_1))), [ t35 t50], [])
(t52, ResoAST, (cl  ((imp  op_1 op_0))), [ t33 t51], [])
(t53, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t54, SameAST, (cl  ((op_2 = op_3)) ((not (and  (not op_1) (op_2 = op_3))))), [ t53], [])
(t55, ResoAST, (cl  ((op_2 = op_3))), [ t54 t50], [])
(t56, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t57, SameAST, (cl  (op_0) ((imp  op_0 op_1))), [ t56], [])
(t58, ResoAST, (cl  ((imp  op_0 op_1))), [ t57 t49], [])
(t59, ResoAST, (cl ), [ t31 t52 t55 t58], [])

Certif after storing shared terms: 
(a0, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t2, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t3, ReflAST, (cl  ((op_1 = op_1))), [], [])
(t4, HoleAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [ ARITH_POLY_NORM (((2 * op_2) + 1) = (1 + (2 * op_2)))])
(t5, HoleAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [ ARITH_POLY_NORM (((2 * op_3) + 1) = (1 + (2 * op_3)))])
(t6, CongAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t4 t5], [])
(t7, HoleAST, (cl  ((((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3))])
(t8, TransAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))), [ t6 t7], [])
(t9, ReflAST, (cl  (((2 * op_3) = (2 * op_3)))), [], [])
(t10, CongAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))), [ t4 t9], [])
(t11, AllsimpAST, (cl  ((((1 + (2 * op_2)) = (2 * op_3)) = (false)))), [], [])
(t12, TransAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false)))), [ t10 t11], [])
(t13, CongAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))), [ t3 t8 t12], [])
(t14, AllsimpAST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))), [], [ ite_simplify10 op_1 (op_2 = op_3)])
(t15, TransAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))), [ t13 t14], [])
(t16, ReflAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t17, CongAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ t16 t5], [])
(t18, AllsimpAST, (cl  ((((2 * op_2) = (1 + (2 * op_3))) = (false)))), [], [])
(t19, TransAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false)))), [ t17 t18], [])
(t20, HoleAST, (cl  ((((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((2 * op_2) = (2 * op_3)) = (op_2 = op_3))])
(t21, CongAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))), [ t3 t19 t20], [])
(t22, AllsimpAST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))), [], [ ite_simplify11 op_1 (op_2 = op_3)])
(t23, TransAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))), [ t21 t22], [])
(t24, CongAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ t2 t15 t23], [])
(t25, ReflAST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(t26, CongAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t24 t25], [])
(t27, CongAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ t26], [])
(t28, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t1 t27 a0], [])
(t29, Nimp2AST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t28], [])
(t30, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t29], [])
(t31, SameAST, (cl  ((not (op_2 = op_3))) ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0)))), [ t30], [])
(t32, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t33, SameAST, (cl  (op_1) ((imp  op_1 op_0))), [ t32], [])
(t34, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((not op_1))), [], [])
(t35, SameAST, (cl  ((not op_1)) ((not (and  (not op_1) (op_2 = op_3))))), [ t34], [])
(t36, Nimp1AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ t28], [])
(t37, Ite1AST, (cl  (op_0) ((and  (not op_1) (op_2 = op_3)))), [ t36], [])
(t38, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t39, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t40, SameAST, (cl  ((op_2 = op_3)) ((not (and  op_1 (op_2 = op_3))))), [ t39], [])
(t41, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) (op_1)), [], [])
(t42, SameAST, (cl  (op_1) ((not (and  op_1 (op_2 = op_3))))), [ t41], [])
(t43, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t44, ResoAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t31 t38 t40 t42 t43], [])
(t45, SameAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t44], [])
(t46, Ite2AST, (cl  ((not op_0)) ((and  op_1 (op_2 = op_3)))), [ t36], [])
(t47, SameAST, (cl  ((and  op_1 (op_2 = op_3))) ((not op_0))), [ t46], [])
(t48, ResoAST, (cl  ((not op_0)) ((not op_0))), [ t45 t47], [])
(t49, SameAST, (cl  ((not op_0))), [ t48], [])
(t50, ResoAST, (cl  ((and  (not op_1) (op_2 = op_3)))), [ t37 t49], [])
(t51, ResoAST, (cl  ((not op_1))), [ t35 t50], [])
(t52, ResoAST, (cl  ((imp  op_1 op_0))), [ t33 t51], [])
(t53, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t54, SameAST, (cl  ((op_2 = op_3)) ((not (and  (not op_1) (op_2 = op_3))))), [ t53], [])
(t55, ResoAST, (cl  ((op_2 = op_3))), [ t54 t50], [])
(t56, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t57, SameAST, (cl  (op_0) ((imp  op_0 op_1))), [ t56], [])
(t58, ResoAST, (cl  ((imp  op_0 op_1))), [ t57 t49], [])
(t59, ResoAST, (cl ), [ t31 t52 t55 t58], [])

Certif after process_fins: 
(a0, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t2, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t3, ReflAST, (cl  ((op_1 = op_1))), [], [])
(t4, HoleAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [ ARITH_POLY_NORM (((2 * op_2) + 1) = (1 + (2 * op_2)))])
(t5, HoleAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [ ARITH_POLY_NORM (((2 * op_3) + 1) = (1 + (2 * op_3)))])
(t6, CongAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t4 t5], [])
(t7, HoleAST, (cl  ((((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3))])
(t8, TransAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))), [ t6 t7], [])
(t9, ReflAST, (cl  (((2 * op_3) = (2 * op_3)))), [], [])
(t10, CongAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))), [ t4 t9], [])
(t11, AllsimpAST, (cl  ((((1 + (2 * op_2)) = (2 * op_3)) = (false)))), [], [])
(t12, TransAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false)))), [ t10 t11], [])
(t13, CongAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))), [ t3 t8 t12], [])
(t14, AllsimpAST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))), [], [ ite_simplify10 op_1 (op_2 = op_3)])
(t15, TransAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))), [ t13 t14], [])
(t16, ReflAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t17, CongAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ t16 t5], [])
(t18, AllsimpAST, (cl  ((((2 * op_2) = (1 + (2 * op_3))) = (false)))), [], [])
(t19, TransAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false)))), [ t17 t18], [])
(t20, HoleAST, (cl  ((((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((2 * op_2) = (2 * op_3)) = (op_2 = op_3))])
(t21, CongAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))), [ t3 t19 t20], [])
(t22, AllsimpAST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))), [], [ ite_simplify11 op_1 (op_2 = op_3)])
(t23, TransAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))), [ t21 t22], [])
(t24, CongAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ t2 t15 t23], [])
(t25, ReflAST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(t26, CongAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t24 t25], [])
(t27, CongAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ t26], [])
(t28, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t1 t27 a0], [])
(t29, Nimp2AST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t28], [])
(t30, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t29], [])
(t31, SameAST, (cl  ((not (op_2 = op_3))) ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0)))), [ t30], [])
(t32, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t33, SameAST, (cl  (op_1) ((imp  op_1 op_0))), [ t32], [])
(t34, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((not op_1))), [], [])
(t35, SameAST, (cl  ((not op_1)) ((not (and  (not op_1) (op_2 = op_3))))), [ t34], [])
(t36, Nimp1AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ t28], [])
(t37, Ite1AST, (cl  (op_0) ((and  (not op_1) (op_2 = op_3)))), [ t36], [])
(t38, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t39, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t40, SameAST, (cl  ((op_2 = op_3)) ((not (and  op_1 (op_2 = op_3))))), [ t39], [])
(t41, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) (op_1)), [], [])
(t42, SameAST, (cl  (op_1) ((not (and  op_1 (op_2 = op_3))))), [ t41], [])
(t43, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t44, ResoAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t31 t38 t40 t42 t43], [])
(t45, SameAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t44], [])
(t46, Ite2AST, (cl  ((not op_0)) ((and  op_1 (op_2 = op_3)))), [ t36], [])
(t47, SameAST, (cl  ((and  op_1 (op_2 = op_3))) ((not op_0))), [ t46], [])
(t48, ResoAST, (cl  ((not op_0)) ((not op_0))), [ t45 t47], [])
(t49, SameAST, (cl  ((not op_0))), [ t48], [])
(t50, ResoAST, (cl  ((and  (not op_1) (op_2 = op_3)))), [ t37 t49], [])
(t51, ResoAST, (cl  ((not op_1))), [ t35 t50], [])
(t52, ResoAST, (cl  ((imp  op_1 op_0))), [ t33 t51], [])
(t53, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t54, SameAST, (cl  ((op_2 = op_3)) ((not (and  (not op_1) (op_2 = op_3))))), [ t53], [])
(t55, ResoAST, (cl  ((op_2 = op_3))), [ t54 t50], [])
(t56, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t57, SameAST, (cl  (op_0) ((imp  op_0 op_1))), [ t56], [])
(t58, ResoAST, (cl  ((imp  op_0 op_1))), [ t57 t49], [])
(t59, ResoAST, (cl ), [ t31 t52 t55 t58], [])

Certif after process_hole: 
(a0, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t2, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t3, ReflAST, (cl  ((op_1 = op_1))), [], [])
(t4, ArithpolynormAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [ ARITH_POLY_NORM (((2 * op_2) + 1) = (1 + (2 * op_2)))])
(t5, ArithpolynormAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [ ARITH_POLY_NORM (((2 * op_3) + 1) = (1 + (2 * op_3)))])
(t6, CongAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t4 t5], [])
(t7, ArithpolynormAST, (cl  ((((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3))])
(t8, TransAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))), [ t6 t7], [])
(t9, ReflAST, (cl  (((2 * op_3) = (2 * op_3)))), [], [])
(t10, CongAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))), [ t4 t9], [])
(t11, AllsimpAST, (cl  ((((1 + (2 * op_2)) = (2 * op_3)) = (false)))), [], [])
(t12, TransAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false)))), [ t10 t11], [])
(t13, CongAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))), [ t3 t8 t12], [])
(t14, AllsimpAST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))), [], [ ite_simplify10 op_1 (op_2 = op_3)])
(t15, TransAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))), [ t13 t14], [])
(t16, ReflAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t17, CongAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ t16 t5], [])
(t18, AllsimpAST, (cl  ((((2 * op_2) = (1 + (2 * op_3))) = (false)))), [], [])
(t19, TransAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false)))), [ t17 t18], [])
(t20, ArithpolynormAST, (cl  ((((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((2 * op_2) = (2 * op_3)) = (op_2 = op_3))])
(t21, CongAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))), [ t3 t19 t20], [])
(t22, AllsimpAST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))), [], [ ite_simplify11 op_1 (op_2 = op_3)])
(t23, TransAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))), [ t21 t22], [])
(t24, CongAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ t2 t15 t23], [])
(t25, ReflAST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(t26, CongAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t24 t25], [])
(t27, CongAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ t26], [])
(t28, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t1 t27 a0], [])
(t29, Nimp2AST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t28], [])
(t30, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t29], [])
(t31, SameAST, (cl  ((not (op_2 = op_3))) ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0)))), [ t30], [])
(t32, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t33, SameAST, (cl  (op_1) ((imp  op_1 op_0))), [ t32], [])
(t34, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((not op_1))), [], [])
(t35, SameAST, (cl  ((not op_1)) ((not (and  (not op_1) (op_2 = op_3))))), [ t34], [])
(t36, Nimp1AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ t28], [])
(t37, Ite1AST, (cl  (op_0) ((and  (not op_1) (op_2 = op_3)))), [ t36], [])
(t38, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t39, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t40, SameAST, (cl  ((op_2 = op_3)) ((not (and  op_1 (op_2 = op_3))))), [ t39], [])
(t41, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) (op_1)), [], [])
(t42, SameAST, (cl  (op_1) ((not (and  op_1 (op_2 = op_3))))), [ t41], [])
(t43, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t44, ResoAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t31 t38 t40 t42 t43], [])
(t45, SameAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t44], [])
(t46, Ite2AST, (cl  ((not op_0)) ((and  op_1 (op_2 = op_3)))), [ t36], [])
(t47, SameAST, (cl  ((and  op_1 (op_2 = op_3))) ((not op_0))), [ t46], [])
(t48, ResoAST, (cl  ((not op_0)) ((not op_0))), [ t45 t47], [])
(t49, SameAST, (cl  ((not op_0))), [ t48], [])
(t50, ResoAST, (cl  ((and  (not op_1) (op_2 = op_3)))), [ t37 t49], [])
(t51, ResoAST, (cl  ((not op_1))), [ t35 t50], [])
(t52, ResoAST, (cl  ((imp  op_1 op_0))), [ t33 t51], [])
(t53, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t54, SameAST, (cl  ((op_2 = op_3)) ((not (and  (not op_1) (op_2 = op_3))))), [ t53], [])
(t55, ResoAST, (cl  ((op_2 = op_3))), [ t54 t50], [])
(t56, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t57, SameAST, (cl  (op_0) ((imp  op_0 op_1))), [ t56], [])
(t58, ResoAST, (cl  ((imp  op_0 op_1))), [ t57 t49], [])
(t59, ResoAST, (cl ), [ t31 t52 t55 t58], [])

Certif after process_notnot: 
(a0, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t2, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t3, ReflAST, (cl  ((op_1 = op_1))), [], [])
(t4, ArithpolynormAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [ ARITH_POLY_NORM (((2 * op_2) + 1) = (1 + (2 * op_2)))])
(t5, ArithpolynormAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [ ARITH_POLY_NORM (((2 * op_3) + 1) = (1 + (2 * op_3)))])
(t6, CongAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t4 t5], [])
(t7, ArithpolynormAST, (cl  ((((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3))])
(t8, TransAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))), [ t6 t7], [])
(t9, ReflAST, (cl  (((2 * op_3) = (2 * op_3)))), [], [])
(t10, CongAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))), [ t4 t9], [])
(t11, AllsimpAST, (cl  ((((1 + (2 * op_2)) = (2 * op_3)) = (false)))), [], [])
(t12, TransAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false)))), [ t10 t11], [])
(t13, CongAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))), [ t3 t8 t12], [])
(t14, AllsimpAST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))), [], [ ite_simplify10 op_1 (op_2 = op_3)])
(t15, TransAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))), [ t13 t14], [])
(t16, ReflAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t17, CongAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ t16 t5], [])
(t18, AllsimpAST, (cl  ((((2 * op_2) = (1 + (2 * op_3))) = (false)))), [], [])
(t19, TransAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false)))), [ t17 t18], [])
(t20, ArithpolynormAST, (cl  ((((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((2 * op_2) = (2 * op_3)) = (op_2 = op_3))])
(t21, CongAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))), [ t3 t19 t20], [])
(t22, AllsimpAST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))), [], [ ite_simplify11 op_1 (op_2 = op_3)])
(t23, TransAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))), [ t21 t22], [])
(t24, CongAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ t2 t15 t23], [])
(t25, ReflAST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(t26, CongAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t24 t25], [])
(t27, CongAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ t26], [])
(t28, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t1 t27 a0], [])
(t29, Nimp2AST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t28], [])
(t30, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t29], [])
(t31, SameAST, (cl  ((not (op_2 = op_3))) ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0)))), [ t30], [])
(t32, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t33, SameAST, (cl  (op_1) ((imp  op_1 op_0))), [ t32], [])
(t34, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((not op_1))), [], [])
(t35, SameAST, (cl  ((not op_1)) ((not (and  (not op_1) (op_2 = op_3))))), [ t34], [])
(t36, Nimp1AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ t28], [])
(t37, Ite1AST, (cl  (op_0) ((and  (not op_1) (op_2 = op_3)))), [ t36], [])
(t38, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t39, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t40, SameAST, (cl  ((op_2 = op_3)) ((not (and  op_1 (op_2 = op_3))))), [ t39], [])
(t41, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) (op_1)), [], [])
(t42, SameAST, (cl  (op_1) ((not (and  op_1 (op_2 = op_3))))), [ t41], [])
(t43, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t44, ResoAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t31 t38 t40 t42 t43], [])
(t45, SameAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t44], [])
(t46, Ite2AST, (cl  ((not op_0)) ((and  op_1 (op_2 = op_3)))), [ t36], [])
(t47, SameAST, (cl  ((and  op_1 (op_2 = op_3))) ((not op_0))), [ t46], [])
(t48, ResoAST, (cl  ((not op_0)) ((not op_0))), [ t45 t47], [])
(t49, SameAST, (cl  ((not op_0))), [ t48], [])
(t50, ResoAST, (cl  ((and  (not op_1) (op_2 = op_3)))), [ t37 t49], [])
(t51, ResoAST, (cl  ((not op_1))), [ t35 t50], [])
(t52, ResoAST, (cl  ((imp  op_1 op_0))), [ t33 t51], [])
(t53, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t54, SameAST, (cl  ((op_2 = op_3)) ((not (and  (not op_1) (op_2 = op_3))))), [ t53], [])
(t55, ResoAST, (cl  ((op_2 = op_3))), [ t54 t50], [])
(t56, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t57, SameAST, (cl  (op_0) ((imp  op_0 op_1))), [ t56], [])
(t58, ResoAST, (cl  ((imp  op_0 op_1))), [ t57 t49], [])
(t59, ResoAST, (cl ), [ t31 t52 t55 t58], [])

Certif after process_same: 
(a0, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t2, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t3, ReflAST, (cl  ((op_1 = op_1))), [], [])
(t4, ArithpolynormAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [ ARITH_POLY_NORM (((2 * op_2) + 1) = (1 + (2 * op_2)))])
(t5, ArithpolynormAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [ ARITH_POLY_NORM (((2 * op_3) + 1) = (1 + (2 * op_3)))])
(t6, CongAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t4 t5], [])
(t7, ArithpolynormAST, (cl  ((((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3))])
(t8, TransAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))), [ t6 t7], [])
(t9, ReflAST, (cl  (((2 * op_3) = (2 * op_3)))), [], [])
(t10, CongAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))), [ t4 t9], [])
(t11, AllsimpAST, (cl  ((((1 + (2 * op_2)) = (2 * op_3)) = (false)))), [], [])
(t12, TransAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false)))), [ t10 t11], [])
(t13, CongAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))), [ t3 t8 t12], [])
(t14, AllsimpAST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))), [], [ ite_simplify10 op_1 (op_2 = op_3)])
(t15, TransAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))), [ t13 t14], [])
(t16, ReflAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t17, CongAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ t16 t5], [])
(t18, AllsimpAST, (cl  ((((2 * op_2) = (1 + (2 * op_3))) = (false)))), [], [])
(t19, TransAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false)))), [ t17 t18], [])
(t20, ArithpolynormAST, (cl  ((((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((2 * op_2) = (2 * op_3)) = (op_2 = op_3))])
(t21, CongAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))), [ t3 t19 t20], [])
(t22, AllsimpAST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))), [], [ ite_simplify11 op_1 (op_2 = op_3)])
(t23, TransAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))), [ t21 t22], [])
(t24, CongAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ t2 t15 t23], [])
(t25, ReflAST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(t26, CongAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t24 t25], [])
(t27, CongAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ t26], [])
(t28, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t1 t27 a0], [])
(t29, Nimp2AST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t28], [])
(t30, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t29], [])
(t32, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t34, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((not op_1))), [], [])
(t36, Nimp1AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ t28], [])
(t37, Ite1AST, (cl  (op_0) ((and  (not op_1) (op_2 = op_3)))), [ t36], [])
(t38, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t39, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t41, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) (op_1)), [], [])
(t43, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t44, ResoAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t30 t38 t39 t41 t43], [])
(t46, Ite2AST, (cl  ((not op_0)) ((and  op_1 (op_2 = op_3)))), [ t36], [])
(t48, ResoAST, (cl  ((not op_0)) ((not op_0))), [ t44 t46], [])
(t50, ResoAST, (cl  ((and  (not op_1) (op_2 = op_3)))), [ t37 t48], [])
(t51, ResoAST, (cl  ((not op_1))), [ t34 t50], [])
(t52, ResoAST, (cl  ((imp  op_1 op_0))), [ t32 t51], [])
(t53, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t55, ResoAST, (cl  ((op_2 = op_3))), [ t53 t50], [])
(t56, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t58, ResoAST, (cl  ((imp  op_0 op_1))), [ t56 t48], [])
(t59, ResoAST, (cl ), [ t30 t52 t55 t58], [])

Certif after process_cong: 
(a0, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t2, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t3, ReflAST, (cl  ((op_1 = op_1))), [], [])
(t4, ArithpolynormAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [ ARITH_POLY_NORM (((2 * op_2) + 1) = (1 + (2 * op_2)))])
(t5, ArithpolynormAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [ ARITH_POLY_NORM (((2 * op_3) + 1) = (1 + (2 * op_3)))])
(x1, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x2, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t5 x1], [])
(x3, Equp1AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((2 * op_2) + 1)) ((not ((2 * op_3) + 1)))), [], [])
(x4, Equn2AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((1 + (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x5, Equn2AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x6, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((1 + (2 * op_2)) = (1 + (2 * op_3)))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x2 x3 x4 x5], [])
(x7, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x8, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t5 x7], [])
(x9, Equn2AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((2 * op_2) + 1)) (((2 * op_3) + 1))), [], [])
(x10, Equp1AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x11, Equn1AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x12, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x8 x9 x10 x11], [])
(x13, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [], [])
(x14, ResoAST, (cl  (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [ t4 x13], [])
(x15, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1))), [ x6 x12 x14], [])
(x16, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [], [])
(x17, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [ t4 x16], [])
(x18, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2)))), [ x15 x17], [])
(x19, Equn1AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (1 + (2 * op_2)))) ((not (1 + (2 * op_3))))), [], [])
(x20, Equn1AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((2 * op_2) + 1))) ((not ((2 * op_3) + 1)))), [], [])
(x21, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x11 x19 x20 x8 x18 x15], [])
(x22, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x21 x2], [])
(x23, Equp2AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((2 * op_2) + 1))) (((2 * op_3) + 1))), [], [])
(x24, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [ x23 x21 x15], [])
(x25, Equp2AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_2)))) ((1 + (2 * op_3)))), [], [])
(x26, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x25 x22 x18], [])
(t6, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x5 x24 x26], [])
(t7, ArithpolynormAST, (cl  ((((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3))])
(t8, TransAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))), [ t6 t7], [])
(t9, ReflAST, (cl  (((2 * op_3) = (2 * op_3)))), [], [])
(x27, Equp1AST, (cl  ((not ((2 * op_3) = (2 * op_3)))) ((2 * op_3)) ((not (2 * op_3)))), [], [])
(x28, ResoAST, (cl  ((2 * op_3)) ((not (2 * op_3)))), [ t9 x27], [])
(x29, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_2) + 1)) ((not (2 * op_3)))), [], [])
(x30, Equn2AST, (cl  (((1 + (2 * op_2)) = (2 * op_3))) ((1 + (2 * op_2))) ((2 * op_3))), [], [])
(x31, Equn2AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((((2 * op_2) + 1) = (2 * op_3))) (((1 + (2 * op_2)) = (2 * op_3)))), [], [])
(x32, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x28 x29 x30 x31], [])
(x33, Equp2AST, (cl  ((not ((2 * op_3) = (2 * op_3)))) ((not (2 * op_3))) ((2 * op_3))), [], [])
(x34, ResoAST, (cl  ((not (2 * op_3))) ((2 * op_3))), [ t9 x33], [])
(x35, Equn2AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) (((2 * op_2) + 1)) ((2 * op_3))), [], [])
(x36, Equp1AST, (cl  ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((1 + (2 * op_2))) ((not (2 * op_3)))), [], [])
(x37, Equn1AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [], [])
(x38, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3)))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x34 x35 x36 x37], [])
(x39, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [], [])
(x40, ResoAST, (cl  (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [ t4 x39], [])
(x41, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) (((2 * op_2) + 1))), [ x32 x38 x40], [])
(x42, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [], [])
(x43, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [ t4 x42], [])
(x44, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((1 + (2 * op_2)))), [ x41 x43], [])
(x45, Equn1AST, (cl  (((1 + (2 * op_2)) = (2 * op_3))) ((not (1 + (2 * op_2)))) ((not (2 * op_3)))), [], [])
(x46, Equn1AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_2) + 1))) ((not (2 * op_3)))), [], [])
(x47, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (2 * op_3)))), [ x37 x45 x46 x34 x44 x41], [])
(x48, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (2 * op_3)))), [ x47 x28], [])
(x49, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_2) + 1))) ((2 * op_3))), [], [])
(x50, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (((2 * op_2) + 1) = (2 * op_3))))), [ x49 x47 x41], [])
(x51, Equp2AST, (cl  ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((not (1 + (2 * op_2)))) ((2 * op_3))), [], [])
(x52, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [ x51 x48 x44], [])
(t10, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))), [ x31 x50 x52], [])
(t11, AllsimpAST, (cl  ((((1 + (2 * op_2)) = (2 * op_3)) = (false)))), [], [])
(t12, TransAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false)))), [ t10 t11], [])
(x53, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = (false)))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [], [])
(x54, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [ x53 t12], [])
(x55, Itep1AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) (op_1) ((((2 * op_2) + 1) = (2 * op_3)))), [], [])
(x56, Iten1AST, (cl  ((ite  op_1 (op_2 = op_3) (false))) (op_1) ((not (false)))), [], [])
(x57, Equn2AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((ite  op_1 (op_2 = op_3) (false)))), [], [])
(x58, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (op_2 = op_3) (false))) (op_1) (op_1)), [ x54 x55 x56 x57], [])
(x59, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = (false)))) ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [], [])
(x60, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [ x59 t12], [])
(x61, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x62, ResoAST, (cl  (op_1) ((not op_1))), [ x61 t3], [])
(x63, Iten1AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) (op_1) ((not (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x64, Itep1AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) (op_1) ((false))), [], [])
(x65, Equn1AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not (ite  op_1 (op_2 = op_3) (false))))), [], [])
(x66, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) (op_1)), [ x60 x63 x64 x65 x58 x62], [])
(x67, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x68, ResoAST, (cl  ((not op_1)) (op_1)), [ x67 t3], [])
(x69, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) (op_1)), [ x68 x66], [])
(x70, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [], [])
(x71, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [ x70 t8], [])
(x72, Itep2AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) ((not op_1)) ((op_2 = op_3))), [], [])
(x73, Iten2AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not op_1)) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [], [])
(x74, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x71 x72 x73 x57 x69 x66], [])
(x75, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x65 x74], [])
(x76, Itep2AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not op_1)) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [], [])
(x77, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [ x76 x74 x66], [])
(x78, Iten2AST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not op_1)) ((not (op_2 = op_3)))), [], [])
(x79, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (op_2 = op_3)))), [ x78 x75 x69], [])
(x80, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [], [])
(x81, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [ x80 t8], [])
(t13, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))), [ x81 x77 x79], [])
(t14, AllsimpAST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))), [], [ ite_simplify10 op_1 (op_2 = op_3)])
(t15, TransAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))), [ t13 t14], [])
(t16, ReflAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(x82, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x83, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t5 x82], [])
(x84, Equp1AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((2 * op_2)) ((not ((2 * op_3) + 1)))), [], [])
(x85, Equn2AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((1 + (2 * op_3)))), [], [])
(x86, Equn2AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x87, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((2 * op_2))), [ x83 x84 x85 x86], [])
(x88, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x89, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t5 x88], [])
(x90, Equn2AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((2 * op_2)) (((2 * op_3) + 1))), [], [])
(x91, Equp1AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((not (1 + (2 * op_3))))), [], [])
(x92, Equn1AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x93, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((2 * op_2))), [ x89 x90 x91 x92], [])
(x94, Equp1AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((2 * op_2)) ((not (2 * op_2)))), [], [])
(x95, ResoAST, (cl  ((2 * op_2)) ((not (2 * op_2)))), [ t16 x94], [])
(x96, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x87 x93 x95], [])
(x97, Equp2AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((not (2 * op_2))) ((2 * op_2))), [], [])
(x98, ResoAST, (cl  ((not (2 * op_2))) ((2 * op_2))), [ t16 x97], [])
(x99, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x96 x98], [])
(x100, Equn1AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((not (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x101, Equn1AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (2 * op_2))) ((not ((2 * op_3) + 1)))), [], [])
(x102, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x92 x100 x101 x89 x99 x96], [])
(x103, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x102 x83], [])
(x104, Equp2AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not (2 * op_2))) (((2 * op_3) + 1))), [], [])
(x105, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [ x104 x102 x96], [])
(x106, Equp2AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x107, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x106 x103 x99], [])
(t17, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ x86 x105 x107], [])
(t18, AllsimpAST, (cl  ((((2 * op_2) = (1 + (2 * op_3))) = (false)))), [], [])
(t19, TransAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false)))), [ t17 t18], [])
(t20, ArithpolynormAST, (cl  ((((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((2 * op_2) = (2 * op_3)) = (op_2 = op_3))])
(x108, Equp2AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((op_2 = op_3))), [], [])
(x109, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((op_2 = op_3))), [ x108 t20], [])
(x110, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(x111, Iten1AST, (cl  ((ite  op_1 (false) (op_2 = op_3))) (op_1) ((not (op_2 = op_3)))), [], [])
(x112, Equn2AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((ite  op_1 (false) (op_2 = op_3)))), [], [])
(x113, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3))) (op_1) (op_1)), [ x109 x110 x111 x112], [])
(x114, Equp1AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))) (((2 * op_2) = (2 * op_3))) ((not (op_2 = op_3)))), [], [])
(x115, ResoAST, (cl  (((2 * op_2) = (2 * op_3))) ((not (op_2 = op_3)))), [ x114 t20], [])
(x116, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x117, ResoAST, (cl  (op_1) ((not op_1))), [ x116 t3], [])
(x118, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x119, Itep1AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) (op_1) ((op_2 = op_3))), [], [])
(x120, Equn1AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 (false) (op_2 = op_3))))), [], [])
(x121, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (op_1)), [ x115 x118 x119 x120 x113 x117], [])
(x122, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x123, ResoAST, (cl  ((not op_1)) (op_1)), [ x122 t3], [])
(x124, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (op_1)), [ x123 x121], [])
(x125, Equp1AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = (false)))) (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [], [])
(x126, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [ x125 t19], [])
(x127, Itep2AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) ((not op_1)) ((false))), [], [])
(x128, Iten2AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not op_1)) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [], [])
(x129, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [ x126 x127 x128 x112 x124 x121], [])
(x130, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ x120 x129], [])
(x131, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = ((2 * op_3) + 1)))), [], [])
(x132, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (((2 * op_2) = ((2 * op_3) + 1)))), [ x131 x129 x121], [])
(x133, Iten2AST, (cl  ((ite  op_1 (false) (op_2 = op_3))) ((not op_1)) ((not (false)))), [], [])
(x134, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (false)))), [ x133 x130 x124], [])
(x135, Equp2AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = (false)))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [], [])
(x136, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [ x135 t19], [])
(t21, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))), [ x136 x132 x134], [])
(t22, AllsimpAST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))), [], [ ite_simplify11 op_1 (op_2 = op_3)])
(t23, TransAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))), [ t21 t22], [])
(x137, Equp2AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x138, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [ x137 t23], [])
(x139, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [], [])
(x140, Iten1AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) (op_0) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x141, Equn2AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x142, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) (op_0) (op_0)), [ x138 x139 x140 x141], [])
(x143, Equp1AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x144, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [ x143 t23], [])
(x145, Equp1AST, (cl  ((not (op_0 = op_0))) (op_0) ((not op_0))), [], [])
(x146, ResoAST, (cl  (op_0) ((not op_0))), [ x145 t2], [])
(x147, Iten1AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_0) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x148, Itep1AST, (cl  ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x149, Equn1AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [], [])
(x150, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0)), [ x144 x147 x148 x149 x142 x146], [])
(x151, Equp2AST, (cl  ((not (op_0 = op_0))) ((not op_0)) (op_0)), [], [])
(x152, ResoAST, (cl  ((not op_0)) (op_0)), [ x151 t2], [])
(x153, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0)), [ x152 x150], [])
(x154, Equp1AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x155, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [ x154 t15], [])
(x156, Itep2AST, (cl  ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not op_0)) ((and  op_1 (op_2 = op_3)))), [], [])
(x157, Iten2AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_0)) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))))), [], [])
(x158, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x155 x156 x157 x141 x153 x150], [])
(x159, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x149 x158], [])
(x160, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x161, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x160 x158 x150], [])
(x162, Iten2AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) ((not op_0)) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x163, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (and  op_1 (op_2 = op_3))))), [ x162 x159 x153], [])
(x164, Equp2AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [], [])
(x165, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [ x164 t15], [])
(t24, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x165 x161 x163], [])
(t25, ReflAST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x166, ImppAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x169, Equp2AST, (cl  ((not ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x168, ResoAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [ x169 t25], [])
(x167, Equp1AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [], [])
(x170, ResoAST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x167 t24], [])
(x171, ResoAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x166 x168 x170], [])
(x172, Impn1AST, (cl  ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x173, Impn2AST, (cl  ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x174, ResoAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x171 x172 x173], [])
(x175, Equn1AST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x176, ResoAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x174 x175], [])
(x177, ImppAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x180, Equp2AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x179, ResoAST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ x180 t24], [])
(x178, Equp1AST, (cl  ((not ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x181, ResoAST, (cl  ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x178 t25], [])
(x182, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [ x177 x179 x181], [])
(x183, Impn1AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x184, Impn2AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x185, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x182 x183 x184], [])
(x186, Equn2AST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x187, ResoAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x185 x186], [])
(t26, ResoAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x187 x176], [])
(x188, Equp1AST, (cl  ((not ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x189, ResoAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x188 t26], [])
(x190, Equn1AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x191, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x189 x190], [])
(x192, Equp2AST, (cl  ((not ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x193, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x192 t26], [])
(x194, Equn2AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x195, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x193 x194], [])
(t27, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x191 x195], [])
(t28, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t1 t27 a0], [])
(t29, Nimp2AST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t28], [])
(t30, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t29], [])
(t32, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t34, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((not op_1))), [], [])
(t36, Nimp1AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ t28], [])
(t37, Ite1AST, (cl  (op_0) ((and  (not op_1) (op_2 = op_3)))), [ t36], [])
(t38, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t39, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t41, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) (op_1)), [], [])
(t43, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t44, ResoAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t30 t38 t39 t41 t43], [])
(t46, Ite2AST, (cl  ((not op_0)) ((and  op_1 (op_2 = op_3)))), [ t36], [])
(t48, ResoAST, (cl  ((not op_0)) ((not op_0))), [ t44 t46], [])
(t50, ResoAST, (cl  ((and  (not op_1) (op_2 = op_3)))), [ t37 t48], [])
(t51, ResoAST, (cl  ((not op_1))), [ t34 t50], [])
(t52, ResoAST, (cl  ((imp  op_1 op_0))), [ t32 t51], [])
(t53, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t55, ResoAST, (cl  ((op_2 = op_3))), [ t53 t50], [])
(t56, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t58, ResoAST, (cl  ((imp  op_0 op_1))), [ t56 t48], [])
(t59, ResoAST, (cl ), [ t30 t52 t55 t58], [])

Certif after process_trans: 
(a0, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x196, Equn1AST, (cl  ((op_0 = op_0)) ((not op_0))), [], [])
(x197, Equn2AST, (cl  ((op_0 = op_0)) (op_0)), [], [])
(t2, ResoAST, (cl  ((op_0 = op_0))), [ x196 x197], [])
(x198, Equn1AST, (cl  ((op_1 = op_1)) ((not op_1))), [], [])
(x199, Equn2AST, (cl  ((op_1 = op_1)) (op_1)), [], [])
(t3, ResoAST, (cl  ((op_1 = op_1))), [ x198 x199], [])
(t4, ArithpolynormAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [ ARITH_POLY_NORM (((2 * op_2) + 1) = (1 + (2 * op_2)))])
(t5, ArithpolynormAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [ ARITH_POLY_NORM (((2 * op_3) + 1) = (1 + (2 * op_3)))])
(x1, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x2, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t5 x1], [])
(x3, Equp1AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((2 * op_2) + 1)) ((not ((2 * op_3) + 1)))), [], [])
(x4, Equn2AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((1 + (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x5, Equn2AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x6, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((1 + (2 * op_2)) = (1 + (2 * op_3)))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x2 x3 x4 x5], [])
(x7, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x8, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t5 x7], [])
(x9, Equn2AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((2 * op_2) + 1)) (((2 * op_3) + 1))), [], [])
(x10, Equp1AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x11, Equn1AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x12, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x8 x9 x10 x11], [])
(x13, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [], [])
(x14, ResoAST, (cl  (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [ t4 x13], [])
(x15, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1))), [ x6 x12 x14], [])
(x16, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [], [])
(x17, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [ t4 x16], [])
(x18, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2)))), [ x15 x17], [])
(x19, Equn1AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (1 + (2 * op_2)))) ((not (1 + (2 * op_3))))), [], [])
(x20, Equn1AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((2 * op_2) + 1))) ((not ((2 * op_3) + 1)))), [], [])
(x21, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x11 x19 x20 x8 x18 x15], [])
(x22, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x21 x2], [])
(x23, Equp2AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((2 * op_2) + 1))) (((2 * op_3) + 1))), [], [])
(x24, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [ x23 x21 x15], [])
(x25, Equp2AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_2)))) ((1 + (2 * op_3)))), [], [])
(x26, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x25 x22 x18], [])
(t6, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x5 x24 x26], [])
(t7, ArithpolynormAST, (cl  ((((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3))])
(x203, Equp1AST, (cl  ((not (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [], [])
(x202, ResoAST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [ x203 t7], [])
(x201, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x200, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x201 t6], [])
(x204, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [ x202 x200], [])
(x205, Equn2AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((op_2 = op_3))), [], [])
(x206, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [ x204 x205], [])
(x210, Equp2AST, (cl  ((not (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((op_2 = op_3))), [], [])
(x209, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((op_2 = op_3))), [ x210 t7], [])
(x208, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x207, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ x208 t6], [])
(x211, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [ x209 x207], [])
(x212, Equn1AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not (op_2 = op_3)))), [], [])
(x213, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [ x211 x212], [])
(t8, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))), [ x206 x213], [])
(t9, ReflAST, (cl  (((2 * op_3) = (2 * op_3)))), [], [])
(x27, Equp1AST, (cl  ((not ((2 * op_3) = (2 * op_3)))) ((2 * op_3)) ((not (2 * op_3)))), [], [])
(x28, ResoAST, (cl  ((2 * op_3)) ((not (2 * op_3)))), [ t9 x27], [])
(x29, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_2) + 1)) ((not (2 * op_3)))), [], [])
(x30, Equn2AST, (cl  (((1 + (2 * op_2)) = (2 * op_3))) ((1 + (2 * op_2))) ((2 * op_3))), [], [])
(x31, Equn2AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((((2 * op_2) + 1) = (2 * op_3))) (((1 + (2 * op_2)) = (2 * op_3)))), [], [])
(x32, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x28 x29 x30 x31], [])
(x33, Equp2AST, (cl  ((not ((2 * op_3) = (2 * op_3)))) ((not (2 * op_3))) ((2 * op_3))), [], [])
(x34, ResoAST, (cl  ((not (2 * op_3))) ((2 * op_3))), [ t9 x33], [])
(x35, Equn2AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) (((2 * op_2) + 1)) ((2 * op_3))), [], [])
(x36, Equp1AST, (cl  ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((1 + (2 * op_2))) ((not (2 * op_3)))), [], [])
(x37, Equn1AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [], [])
(x38, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3)))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x34 x35 x36 x37], [])
(x39, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [], [])
(x40, ResoAST, (cl  (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [ t4 x39], [])
(x41, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) (((2 * op_2) + 1))), [ x32 x38 x40], [])
(x42, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [], [])
(x43, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [ t4 x42], [])
(x44, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((1 + (2 * op_2)))), [ x41 x43], [])
(x45, Equn1AST, (cl  (((1 + (2 * op_2)) = (2 * op_3))) ((not (1 + (2 * op_2)))) ((not (2 * op_3)))), [], [])
(x46, Equn1AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_2) + 1))) ((not (2 * op_3)))), [], [])
(x47, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (2 * op_3)))), [ x37 x45 x46 x34 x44 x41], [])
(x48, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (2 * op_3)))), [ x47 x28], [])
(x49, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_2) + 1))) ((2 * op_3))), [], [])
(x50, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (((2 * op_2) + 1) = (2 * op_3))))), [ x49 x47 x41], [])
(x51, Equp2AST, (cl  ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((not (1 + (2 * op_2)))) ((2 * op_3))), [], [])
(x52, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [ x51 x48 x44], [])
(t10, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))), [ x31 x50 x52], [])
(t11, AllsimpAST, (cl  ((((1 + (2 * op_2)) = (2 * op_3)) = (false)))), [], [])
(x217, Equp1AST, (cl  ((not (((1 + (2 * op_2)) = (2 * op_3)) = (false)))) (((1 + (2 * op_2)) = (2 * op_3))) ((not (false)))), [], [])
(x216, ResoAST, (cl  (((1 + (2 * op_2)) = (2 * op_3))) ((not (false)))), [ x217 t11], [])
(x215, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))) ((((2 * op_2) + 1) = (2 * op_3))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [], [])
(x214, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [ x215 t10], [])
(x218, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [ x216 x214], [])
(x219, Equn2AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((((2 * op_2) + 1) = (2 * op_3))) ((false))), [], [])
(x220, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((((2 * op_2) + 1) = (2 * op_3)))), [ x218 x219], [])
(x224, Equp2AST, (cl  ((not (((1 + (2 * op_2)) = (2 * op_3)) = (false)))) ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((false))), [], [])
(x223, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((false))), [ x224 t11], [])
(x222, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))) ((not (((2 * op_2) + 1) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3)))), [], [])
(x221, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3)))), [ x222 t10], [])
(x225, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [ x223 x221], [])
(x226, Equn1AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not (false)))), [], [])
(x227, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((not (((2 * op_2) + 1) = (2 * op_3))))), [ x225 x226], [])
(t12, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false)))), [ x220 x227], [])
(x53, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = (false)))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [], [])
(x54, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [ x53 t12], [])
(x55, Itep1AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) (op_1) ((((2 * op_2) + 1) = (2 * op_3)))), [], [])
(x56, Iten1AST, (cl  ((ite  op_1 (op_2 = op_3) (false))) (op_1) ((not (false)))), [], [])
(x57, Equn2AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((ite  op_1 (op_2 = op_3) (false)))), [], [])
(x58, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (op_2 = op_3) (false))) (op_1) (op_1)), [ x54 x55 x56 x57], [])
(x59, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = (false)))) ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [], [])
(x60, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [ x59 t12], [])
(x61, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x62, ResoAST, (cl  (op_1) ((not op_1))), [ x61 t3], [])
(x63, Iten1AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) (op_1) ((not (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x64, Itep1AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) (op_1) ((false))), [], [])
(x65, Equn1AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not (ite  op_1 (op_2 = op_3) (false))))), [], [])
(x66, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) (op_1)), [ x60 x63 x64 x65 x58 x62], [])
(x67, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x68, ResoAST, (cl  ((not op_1)) (op_1)), [ x67 t3], [])
(x69, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) (op_1)), [ x68 x66], [])
(x70, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [], [])
(x71, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [ x70 t8], [])
(x72, Itep2AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) ((not op_1)) ((op_2 = op_3))), [], [])
(x73, Iten2AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not op_1)) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [], [])
(x74, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x71 x72 x73 x57 x69 x66], [])
(x75, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x65 x74], [])
(x76, Itep2AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not op_1)) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [], [])
(x77, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [ x76 x74 x66], [])
(x78, Iten2AST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not op_1)) ((not (op_2 = op_3)))), [], [])
(x79, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (op_2 = op_3)))), [ x78 x75 x69], [])
(x80, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [], [])
(x81, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [ x80 t8], [])
(t13, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))), [ x81 x77 x79], [])
(t14, AllsimpAST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))), [], [ ite_simplify10 op_1 (op_2 = op_3)])
(x231, Equp1AST, (cl  ((not ((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))) ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x230, ResoAST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3))))), [ x231 t14], [])
(x229, Equp1AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [], [])
(x228, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x229 t13], [])
(x232, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [ x230 x228], [])
(x233, Equn2AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((and  op_1 (op_2 = op_3)))), [], [])
(x234, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x232 x233], [])
(x238, Equp2AST, (cl  ((not ((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))) ((not (ite  op_1 (op_2 = op_3) (false)))) ((and  op_1 (op_2 = op_3)))), [], [])
(x237, ResoAST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) ((and  op_1 (op_2 = op_3)))), [ x238 t14], [])
(x236, Equp2AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 (op_2 = op_3) (false)))), [], [])
(x235, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 (op_2 = op_3) (false)))), [ x236 t13], [])
(x239, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [ x237 x235], [])
(x240, Equn1AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x241, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))))), [ x239 x240], [])
(t15, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))), [ x234 x241], [])
(t16, ReflAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(x82, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x83, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t5 x82], [])
(x84, Equp1AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((2 * op_2)) ((not ((2 * op_3) + 1)))), [], [])
(x85, Equn2AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((1 + (2 * op_3)))), [], [])
(x86, Equn2AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x87, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((2 * op_2))), [ x83 x84 x85 x86], [])
(x88, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x89, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t5 x88], [])
(x90, Equn2AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((2 * op_2)) (((2 * op_3) + 1))), [], [])
(x91, Equp1AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((not (1 + (2 * op_3))))), [], [])
(x92, Equn1AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x93, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((2 * op_2))), [ x89 x90 x91 x92], [])
(x94, Equp1AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((2 * op_2)) ((not (2 * op_2)))), [], [])
(x95, ResoAST, (cl  ((2 * op_2)) ((not (2 * op_2)))), [ t16 x94], [])
(x96, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x87 x93 x95], [])
(x97, Equp2AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((not (2 * op_2))) ((2 * op_2))), [], [])
(x98, ResoAST, (cl  ((not (2 * op_2))) ((2 * op_2))), [ t16 x97], [])
(x99, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x96 x98], [])
(x100, Equn1AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((not (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x101, Equn1AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (2 * op_2))) ((not ((2 * op_3) + 1)))), [], [])
(x102, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x92 x100 x101 x89 x99 x96], [])
(x103, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x102 x83], [])
(x104, Equp2AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not (2 * op_2))) (((2 * op_3) + 1))), [], [])
(x105, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [ x104 x102 x96], [])
(x106, Equp2AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x107, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x106 x103 x99], [])
(t17, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ x86 x105 x107], [])
(t18, AllsimpAST, (cl  ((((2 * op_2) = (1 + (2 * op_3))) = (false)))), [], [])
(x245, Equp1AST, (cl  ((not (((2 * op_2) = (1 + (2 * op_3))) = (false)))) (((2 * op_2) = (1 + (2 * op_3)))) ((not (false)))), [], [])
(x244, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((not (false)))), [ x245 t18], [])
(x243, Equp1AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x242, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x243 t17], [])
(x246, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [ x244 x242], [])
(x247, Equn2AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) (((2 * op_2) = ((2 * op_3) + 1))) ((false))), [], [])
(x248, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) (((2 * op_2) = ((2 * op_3) + 1)))), [ x246 x247], [])
(x252, Equp2AST, (cl  ((not (((2 * op_2) = (1 + (2 * op_3))) = (false)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((false))), [], [])
(x251, ResoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((false))), [ x252 t18], [])
(x250, Equp2AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x249, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [ x250 t17], [])
(x253, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [ x251 x249], [])
(x254, Equn1AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not (false)))), [], [])
(x255, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [ x253 x254], [])
(t19, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false)))), [ x248 x255], [])
(t20, ArithpolynormAST, (cl  ((((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((2 * op_2) = (2 * op_3)) = (op_2 = op_3))])
(x108, Equp2AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((op_2 = op_3))), [], [])
(x109, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((op_2 = op_3))), [ x108 t20], [])
(x110, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(x111, Iten1AST, (cl  ((ite  op_1 (false) (op_2 = op_3))) (op_1) ((not (op_2 = op_3)))), [], [])
(x112, Equn2AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((ite  op_1 (false) (op_2 = op_3)))), [], [])
(x113, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3))) (op_1) (op_1)), [ x109 x110 x111 x112], [])
(x114, Equp1AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))) (((2 * op_2) = (2 * op_3))) ((not (op_2 = op_3)))), [], [])
(x115, ResoAST, (cl  (((2 * op_2) = (2 * op_3))) ((not (op_2 = op_3)))), [ x114 t20], [])
(x116, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x117, ResoAST, (cl  (op_1) ((not op_1))), [ x116 t3], [])
(x118, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x119, Itep1AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) (op_1) ((op_2 = op_3))), [], [])
(x120, Equn1AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 (false) (op_2 = op_3))))), [], [])
(x121, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (op_1)), [ x115 x118 x119 x120 x113 x117], [])
(x122, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x123, ResoAST, (cl  ((not op_1)) (op_1)), [ x122 t3], [])
(x124, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (op_1)), [ x123 x121], [])
(x125, Equp1AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = (false)))) (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [], [])
(x126, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [ x125 t19], [])
(x127, Itep2AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) ((not op_1)) ((false))), [], [])
(x128, Iten2AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not op_1)) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [], [])
(x129, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [ x126 x127 x128 x112 x124 x121], [])
(x130, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ x120 x129], [])
(x131, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = ((2 * op_3) + 1)))), [], [])
(x132, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (((2 * op_2) = ((2 * op_3) + 1)))), [ x131 x129 x121], [])
(x133, Iten2AST, (cl  ((ite  op_1 (false) (op_2 = op_3))) ((not op_1)) ((not (false)))), [], [])
(x134, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (false)))), [ x133 x130 x124], [])
(x135, Equp2AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = (false)))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [], [])
(x136, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [ x135 t19], [])
(t21, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))), [ x136 x132 x134], [])
(t22, AllsimpAST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))), [], [ ite_simplify11 op_1 (op_2 = op_3)])
(x259, Equp1AST, (cl  ((not ((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 (false) (op_2 = op_3))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x258, ResoAST, (cl  ((ite  op_1 (false) (op_2 = op_3))) ((not (and  (not op_1) (op_2 = op_3))))), [ x259 t22], [])
(x257, Equp1AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [], [])
(x256, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ x257 t21], [])
(x260, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [ x258 x256], [])
(x261, Equn2AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x262, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [ x260 x261], [])
(x266, Equp2AST, (cl  ((not ((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_1 (false) (op_2 = op_3)))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x265, ResoAST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) ((and  (not op_1) (op_2 = op_3)))), [ x266 t22], [])
(x264, Equp2AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 (false) (op_2 = op_3)))), [], [])
(x263, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 (false) (op_2 = op_3)))), [ x264 t21], [])
(x267, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [ x265 x263], [])
(x268, Equn1AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x269, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x267 x268], [])
(t23, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))), [ x262 x269], [])
(x137, Equp2AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x138, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [ x137 t23], [])
(x139, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [], [])
(x140, Iten1AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) (op_0) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x141, Equn2AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x142, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) (op_0) (op_0)), [ x138 x139 x140 x141], [])
(x143, Equp1AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x144, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [ x143 t23], [])
(x145, Equp1AST, (cl  ((not (op_0 = op_0))) (op_0) ((not op_0))), [], [])
(x146, ResoAST, (cl  (op_0) ((not op_0))), [ x145 t2], [])
(x147, Iten1AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_0) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x148, Itep1AST, (cl  ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x149, Equn1AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [], [])
(x150, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0)), [ x144 x147 x148 x149 x142 x146], [])
(x151, Equp2AST, (cl  ((not (op_0 = op_0))) ((not op_0)) (op_0)), [], [])
(x152, ResoAST, (cl  ((not op_0)) (op_0)), [ x151 t2], [])
(x153, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0)), [ x152 x150], [])
(x154, Equp1AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x155, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [ x154 t15], [])
(x156, Itep2AST, (cl  ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not op_0)) ((and  op_1 (op_2 = op_3)))), [], [])
(x157, Iten2AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_0)) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))))), [], [])
(x158, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x155 x156 x157 x141 x153 x150], [])
(x159, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x149 x158], [])
(x160, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x161, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x160 x158 x150], [])
(x162, Iten2AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) ((not op_0)) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x163, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (and  op_1 (op_2 = op_3))))), [ x162 x159 x153], [])
(x164, Equp2AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [], [])
(x165, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [ x164 t15], [])
(t24, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x165 x161 x163], [])
(x270, Equn1AST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x271, Equn2AST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(t25, ResoAST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x270 x271], [])
(x166, ImppAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x169, Equp2AST, (cl  ((not ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x168, ResoAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [ x169 t25], [])
(x167, Equp1AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [], [])
(x170, ResoAST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x167 t24], [])
(x171, ResoAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x166 x168 x170], [])
(x172, Impn1AST, (cl  ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x173, Impn2AST, (cl  ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x174, ResoAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x171 x172 x173], [])
(x175, Equn1AST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x176, ResoAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x174 x175], [])
(x177, ImppAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x180, Equp2AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x179, ResoAST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ x180 t24], [])
(x178, Equp1AST, (cl  ((not ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x181, ResoAST, (cl  ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x178 t25], [])
(x182, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [ x177 x179 x181], [])
(x183, Impn1AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x184, Impn2AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x185, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x182 x183 x184], [])
(x186, Equn2AST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x187, ResoAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x185 x186], [])
(t26, ResoAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x187 x176], [])
(x188, Equp1AST, (cl  ((not ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x189, ResoAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x188 t26], [])
(x190, Equn1AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x191, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x189 x190], [])
(x192, Equp2AST, (cl  ((not ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x193, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x192 t26], [])
(x194, Equn2AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x195, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x193 x194], [])
(t27, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x191 x195], [])
(t28, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t1 t27 a0], [])
(t29, Nimp2AST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t28], [])
(t30, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t29], [])
(t32, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t34, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((not op_1))), [], [])
(t36, Nimp1AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ t28], [])
(t37, Ite1AST, (cl  (op_0) ((and  (not op_1) (op_2 = op_3)))), [ t36], [])
(t38, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t39, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t41, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) (op_1)), [], [])
(t43, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t44, ResoAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t30 t38 t39 t41 t43], [])
(t46, Ite2AST, (cl  ((not op_0)) ((and  op_1 (op_2 = op_3)))), [ t36], [])
(t48, ResoAST, (cl  ((not op_0)) ((not op_0))), [ t44 t46], [])
(t50, ResoAST, (cl  ((and  (not op_1) (op_2 = op_3)))), [ t37 t48], [])
(t51, ResoAST, (cl  ((not op_1))), [ t34 t50], [])
(t52, ResoAST, (cl  ((imp  op_1 op_0))), [ t32 t51], [])
(t53, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t55, ResoAST, (cl  ((op_2 = op_3))), [ t53 t50], [])
(t56, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t58, ResoAST, (cl  ((imp  op_0 op_1))), [ t56 t48], [])
(t59, ResoAST, (cl ), [ t30 t52 t55 t58], [])

Certif after process_simplify: 
(a0, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x196, Equn1AST, (cl  ((op_0 = op_0)) ((not op_0))), [], [])
(x197, Equn2AST, (cl  ((op_0 = op_0)) (op_0)), [], [])
(t2, ResoAST, (cl  ((op_0 = op_0))), [ x196 x197], [])
(x198, Equn1AST, (cl  ((op_1 = op_1)) ((not op_1))), [], [])
(x199, Equn2AST, (cl  ((op_1 = op_1)) (op_1)), [], [])
(t3, ResoAST, (cl  ((op_1 = op_1))), [ x198 x199], [])
(t4, ArithpolynormAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [ ARITH_POLY_NORM (((2 * op_2) + 1) = (1 + (2 * op_2)))])
(t5, ArithpolynormAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [ ARITH_POLY_NORM (((2 * op_3) + 1) = (1 + (2 * op_3)))])
(x1, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x2, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t5 x1], [])
(x3, Equp1AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((2 * op_2) + 1)) ((not ((2 * op_3) + 1)))), [], [])
(x4, Equn2AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((1 + (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x5, Equn2AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x6, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((1 + (2 * op_2)) = (1 + (2 * op_3)))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x2 x3 x4 x5], [])
(x7, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x8, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t5 x7], [])
(x9, Equn2AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((2 * op_2) + 1)) (((2 * op_3) + 1))), [], [])
(x10, Equp1AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x11, Equn1AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x12, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x8 x9 x10 x11], [])
(x13, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [], [])
(x14, ResoAST, (cl  (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [ t4 x13], [])
(x15, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1))), [ x6 x12 x14], [])
(x16, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [], [])
(x17, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [ t4 x16], [])
(x18, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2)))), [ x15 x17], [])
(x19, Equn1AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (1 + (2 * op_2)))) ((not (1 + (2 * op_3))))), [], [])
(x20, Equn1AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((2 * op_2) + 1))) ((not ((2 * op_3) + 1)))), [], [])
(x21, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x11 x19 x20 x8 x18 x15], [])
(x22, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x21 x2], [])
(x23, Equp2AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((2 * op_2) + 1))) (((2 * op_3) + 1))), [], [])
(x24, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [ x23 x21 x15], [])
(x25, Equp2AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_2)))) ((1 + (2 * op_3)))), [], [])
(x26, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x25 x22 x18], [])
(t6, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x5 x24 x26], [])
(t7, ArithpolynormAST, (cl  ((((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3))])
(x203, Equp1AST, (cl  ((not (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [], [])
(x202, ResoAST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [ x203 t7], [])
(x201, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x200, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x201 t6], [])
(x204, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [ x202 x200], [])
(x205, Equn2AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((op_2 = op_3))), [], [])
(x206, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [ x204 x205], [])
(x210, Equp2AST, (cl  ((not (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((op_2 = op_3))), [], [])
(x209, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((op_2 = op_3))), [ x210 t7], [])
(x208, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x207, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ x208 t6], [])
(x211, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [ x209 x207], [])
(x212, Equn1AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not (op_2 = op_3)))), [], [])
(x213, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [ x211 x212], [])
(t8, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))), [ x206 x213], [])
(t9, ReflAST, (cl  (((2 * op_3) = (2 * op_3)))), [], [])
(x27, Equp1AST, (cl  ((not ((2 * op_3) = (2 * op_3)))) ((2 * op_3)) ((not (2 * op_3)))), [], [])
(x28, ResoAST, (cl  ((2 * op_3)) ((not (2 * op_3)))), [ t9 x27], [])
(x29, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_2) + 1)) ((not (2 * op_3)))), [], [])
(x30, Equn2AST, (cl  (((1 + (2 * op_2)) = (2 * op_3))) ((1 + (2 * op_2))) ((2 * op_3))), [], [])
(x31, Equn2AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((((2 * op_2) + 1) = (2 * op_3))) (((1 + (2 * op_2)) = (2 * op_3)))), [], [])
(x32, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x28 x29 x30 x31], [])
(x33, Equp2AST, (cl  ((not ((2 * op_3) = (2 * op_3)))) ((not (2 * op_3))) ((2 * op_3))), [], [])
(x34, ResoAST, (cl  ((not (2 * op_3))) ((2 * op_3))), [ t9 x33], [])
(x35, Equn2AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) (((2 * op_2) + 1)) ((2 * op_3))), [], [])
(x36, Equp1AST, (cl  ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((1 + (2 * op_2))) ((not (2 * op_3)))), [], [])
(x37, Equn1AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [], [])
(x38, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3)))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x34 x35 x36 x37], [])
(x39, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [], [])
(x40, ResoAST, (cl  (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [ t4 x39], [])
(x41, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) (((2 * op_2) + 1))), [ x32 x38 x40], [])
(x42, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [], [])
(x43, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [ t4 x42], [])
(x44, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((1 + (2 * op_2)))), [ x41 x43], [])
(x45, Equn1AST, (cl  (((1 + (2 * op_2)) = (2 * op_3))) ((not (1 + (2 * op_2)))) ((not (2 * op_3)))), [], [])
(x46, Equn1AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_2) + 1))) ((not (2 * op_3)))), [], [])
(x47, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (2 * op_3)))), [ x37 x45 x46 x34 x44 x41], [])
(x48, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (2 * op_3)))), [ x47 x28], [])
(x49, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_2) + 1))) ((2 * op_3))), [], [])
(x50, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (((2 * op_2) + 1) = (2 * op_3))))), [ x49 x47 x41], [])
(x51, Equp2AST, (cl  ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((not (1 + (2 * op_2)))) ((2 * op_3))), [], [])
(x52, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [ x51 x48 x44], [])
(t10, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))), [ x31 x50 x52], [])
(t11, LiaRewriteAST, (cl  ((((1 + (2 * op_2)) = (2 * op_3)) = (false)))), [], [])
(x217, Equp1AST, (cl  ((not (((1 + (2 * op_2)) = (2 * op_3)) = (false)))) (((1 + (2 * op_2)) = (2 * op_3))) ((not (false)))), [], [])
(x216, ResoAST, (cl  (((1 + (2 * op_2)) = (2 * op_3))) ((not (false)))), [ x217 t11], [])
(x215, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))) ((((2 * op_2) + 1) = (2 * op_3))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [], [])
(x214, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [ x215 t10], [])
(x218, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [ x216 x214], [])
(x219, Equn2AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((((2 * op_2) + 1) = (2 * op_3))) ((false))), [], [])
(x220, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((((2 * op_2) + 1) = (2 * op_3)))), [ x218 x219], [])
(x224, Equp2AST, (cl  ((not (((1 + (2 * op_2)) = (2 * op_3)) = (false)))) ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((false))), [], [])
(x223, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((false))), [ x224 t11], [])
(x222, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))) ((not (((2 * op_2) + 1) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3)))), [], [])
(x221, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3)))), [ x222 t10], [])
(x225, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [ x223 x221], [])
(x226, Equn1AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not (false)))), [], [])
(x227, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((not (((2 * op_2) + 1) = (2 * op_3))))), [ x225 x226], [])
(t12, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false)))), [ x220 x227], [])
(x53, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = (false)))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [], [])
(x54, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [ x53 t12], [])
(x55, Itep1AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) (op_1) ((((2 * op_2) + 1) = (2 * op_3)))), [], [])
(x56, Iten1AST, (cl  ((ite  op_1 (op_2 = op_3) (false))) (op_1) ((not (false)))), [], [])
(x57, Equn2AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((ite  op_1 (op_2 = op_3) (false)))), [], [])
(x58, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (op_2 = op_3) (false))) (op_1) (op_1)), [ x54 x55 x56 x57], [])
(x59, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = (false)))) ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [], [])
(x60, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [ x59 t12], [])
(x61, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x62, ResoAST, (cl  (op_1) ((not op_1))), [ x61 t3], [])
(x63, Iten1AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) (op_1) ((not (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x64, Itep1AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) (op_1) ((false))), [], [])
(x65, Equn1AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not (ite  op_1 (op_2 = op_3) (false))))), [], [])
(x66, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) (op_1)), [ x60 x63 x64 x65 x58 x62], [])
(x67, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x68, ResoAST, (cl  ((not op_1)) (op_1)), [ x67 t3], [])
(x69, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) (op_1)), [ x68 x66], [])
(x70, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [], [])
(x71, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [ x70 t8], [])
(x72, Itep2AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) ((not op_1)) ((op_2 = op_3))), [], [])
(x73, Iten2AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not op_1)) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [], [])
(x74, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x71 x72 x73 x57 x69 x66], [])
(x75, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x65 x74], [])
(x76, Itep2AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not op_1)) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [], [])
(x77, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [ x76 x74 x66], [])
(x78, Iten2AST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not op_1)) ((not (op_2 = op_3)))), [], [])
(x79, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (op_2 = op_3)))), [ x78 x75 x69], [])
(x80, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [], [])
(x81, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [ x80 t8], [])
(t13, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))), [ x81 x77 x79], [])
(x306, Equn1AST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (op_2 = op_3) (false)))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x311, SubproofAST
	(x272, AssumeAST, (cl  ((ite  op_1 (op_2 = op_3) (false)))), [], [])
(x273, AndnAST, (cl  ((and  op_1 (op_2 = op_3))) ((not op_1)) ((not (op_2 = op_3)))), [], [])
(x274, Itep2AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) ((not op_1)) ((op_2 = op_3))), [], [])
(x275, Itep1AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) (op_1) ((false))), [], [])
(x276, FalsAST, (cl  ((not (false)))), [], [])
(x277, ResoAST, (cl  ((and  op_1 (op_2 = op_3)))), [ x273 x274 x275 x276 x272], [])
(x304, DischargeAST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) ((and  op_1 (op_2 = op_3)))), [], [])
	, (cl ), [], [])
(x308, ResoAST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x304 x306], [])
(x307, Equn2AST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (op_2 = op_3) (false))) ((and  op_1 (op_2 = op_3)))), [], [])
(x310, SubproofAST
	(x278, AssumeAST, (cl  ((and  op_1 (op_2 = op_3)))), [], [])
(x279, Iten2AST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not op_1)) ((not (op_2 = op_3)))), [], [])
(x280, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) (op_1)), [], [ 0])
(x282, ResoAST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3)))) ((not (op_2 = op_3)))), [ x279 x280], [])
(x281, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((op_2 = op_3))), [], [ 1])
(x283, ResoAST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3))))), [ x282 x281], [])
(x284, ResoAST, (cl  ((ite  op_1 (op_2 = op_3) (false)))), [ x283 x278], [])
(x305, DischargeAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((ite  op_1 (op_2 = op_3) (false)))), [], [])
	, (cl ), [], [])
(x309, ResoAST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (op_2 = op_3) (false)))), [ x305 x307], [])
(t14, ResoAST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))), [ x308 x309], [])
(x231, Equp1AST, (cl  ((not ((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))) ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x230, ResoAST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3))))), [ x231 t14], [])
(x229, Equp1AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [], [])
(x228, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x229 t13], [])
(x232, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [ x230 x228], [])
(x233, Equn2AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((and  op_1 (op_2 = op_3)))), [], [])
(x234, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x232 x233], [])
(x238, Equp2AST, (cl  ((not ((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))) ((not (ite  op_1 (op_2 = op_3) (false)))) ((and  op_1 (op_2 = op_3)))), [], [])
(x237, ResoAST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) ((and  op_1 (op_2 = op_3)))), [ x238 t14], [])
(x236, Equp2AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 (op_2 = op_3) (false)))), [], [])
(x235, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 (op_2 = op_3) (false)))), [ x236 t13], [])
(x239, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [ x237 x235], [])
(x240, Equn1AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x241, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))))), [ x239 x240], [])
(t15, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))), [ x234 x241], [])
(t16, ReflAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(x82, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x83, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t5 x82], [])
(x84, Equp1AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((2 * op_2)) ((not ((2 * op_3) + 1)))), [], [])
(x85, Equn2AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((1 + (2 * op_3)))), [], [])
(x86, Equn2AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x87, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((2 * op_2))), [ x83 x84 x85 x86], [])
(x88, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x89, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t5 x88], [])
(x90, Equn2AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((2 * op_2)) (((2 * op_3) + 1))), [], [])
(x91, Equp1AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((not (1 + (2 * op_3))))), [], [])
(x92, Equn1AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x93, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((2 * op_2))), [ x89 x90 x91 x92], [])
(x94, Equp1AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((2 * op_2)) ((not (2 * op_2)))), [], [])
(x95, ResoAST, (cl  ((2 * op_2)) ((not (2 * op_2)))), [ t16 x94], [])
(x96, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x87 x93 x95], [])
(x97, Equp2AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((not (2 * op_2))) ((2 * op_2))), [], [])
(x98, ResoAST, (cl  ((not (2 * op_2))) ((2 * op_2))), [ t16 x97], [])
(x99, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x96 x98], [])
(x100, Equn1AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((not (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x101, Equn1AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (2 * op_2))) ((not ((2 * op_3) + 1)))), [], [])
(x102, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x92 x100 x101 x89 x99 x96], [])
(x103, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x102 x83], [])
(x104, Equp2AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not (2 * op_2))) (((2 * op_3) + 1))), [], [])
(x105, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [ x104 x102 x96], [])
(x106, Equp2AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x107, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x106 x103 x99], [])
(t17, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ x86 x105 x107], [])
(t18, LiaRewriteAST, (cl  ((((2 * op_2) = (1 + (2 * op_3))) = (false)))), [], [])
(x245, Equp1AST, (cl  ((not (((2 * op_2) = (1 + (2 * op_3))) = (false)))) (((2 * op_2) = (1 + (2 * op_3)))) ((not (false)))), [], [])
(x244, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((not (false)))), [ x245 t18], [])
(x243, Equp1AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x242, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x243 t17], [])
(x246, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [ x244 x242], [])
(x247, Equn2AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) (((2 * op_2) = ((2 * op_3) + 1))) ((false))), [], [])
(x248, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) (((2 * op_2) = ((2 * op_3) + 1)))), [ x246 x247], [])
(x252, Equp2AST, (cl  ((not (((2 * op_2) = (1 + (2 * op_3))) = (false)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((false))), [], [])
(x251, ResoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((false))), [ x252 t18], [])
(x250, Equp2AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x249, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [ x250 t17], [])
(x253, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [ x251 x249], [])
(x254, Equn1AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not (false)))), [], [])
(x255, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [ x253 x254], [])
(t19, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false)))), [ x248 x255], [])
(t20, ArithpolynormAST, (cl  ((((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((2 * op_2) = (2 * op_3)) = (op_2 = op_3))])
(x108, Equp2AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((op_2 = op_3))), [], [])
(x109, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((op_2 = op_3))), [ x108 t20], [])
(x110, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(x111, Iten1AST, (cl  ((ite  op_1 (false) (op_2 = op_3))) (op_1) ((not (op_2 = op_3)))), [], [])
(x112, Equn2AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((ite  op_1 (false) (op_2 = op_3)))), [], [])
(x113, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3))) (op_1) (op_1)), [ x109 x110 x111 x112], [])
(x114, Equp1AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))) (((2 * op_2) = (2 * op_3))) ((not (op_2 = op_3)))), [], [])
(x115, ResoAST, (cl  (((2 * op_2) = (2 * op_3))) ((not (op_2 = op_3)))), [ x114 t20], [])
(x116, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x117, ResoAST, (cl  (op_1) ((not op_1))), [ x116 t3], [])
(x118, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x119, Itep1AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) (op_1) ((op_2 = op_3))), [], [])
(x120, Equn1AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 (false) (op_2 = op_3))))), [], [])
(x121, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (op_1)), [ x115 x118 x119 x120 x113 x117], [])
(x122, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x123, ResoAST, (cl  ((not op_1)) (op_1)), [ x122 t3], [])
(x124, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (op_1)), [ x123 x121], [])
(x125, Equp1AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = (false)))) (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [], [])
(x126, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [ x125 t19], [])
(x127, Itep2AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) ((not op_1)) ((false))), [], [])
(x128, Iten2AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not op_1)) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [], [])
(x129, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [ x126 x127 x128 x112 x124 x121], [])
(x130, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ x120 x129], [])
(x131, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = ((2 * op_3) + 1)))), [], [])
(x132, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (((2 * op_2) = ((2 * op_3) + 1)))), [ x131 x129 x121], [])
(x133, Iten2AST, (cl  ((ite  op_1 (false) (op_2 = op_3))) ((not op_1)) ((not (false)))), [], [])
(x134, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (false)))), [ x133 x130 x124], [])
(x135, Equp2AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = (false)))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [], [])
(x136, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [ x135 t19], [])
(t21, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))), [ x136 x132 x134], [])
(x298, Equn1AST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 (false) (op_2 = op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x303, SubproofAST
	(x285, AssumeAST, (cl  ((ite  op_1 (false) (op_2 = op_3)))), [], [])
(x286, AndnAST, (cl  ((and  (not op_1) (op_2 = op_3))) (op_1) ((not (op_2 = op_3)))), [], [])
(x287, Itep1AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) (op_1) ((op_2 = op_3))), [], [])
(x288, Itep2AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) ((not op_1)) ((false))), [], [])
(x289, FalsAST, (cl  ((not (false)))), [], [])
(x290, ResoAST, (cl  ((and  (not op_1) (op_2 = op_3)))), [ x286 x287 x288 x289 x285], [])
(x296, DischargeAST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) ((and  (not op_1) (op_2 = op_3)))), [], [])
	, (cl ), [], [])
(x300, ResoAST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ x296 x298], [])
(x299, Equn2AST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x302, SubproofAST
	(x291, AssumeAST, (cl  ((and  (not op_1) (op_2 = op_3)))), [], [])
(x292, Iten1AST, (cl  ((ite  op_1 (false) (op_2 = op_3))) (op_1) ((not (op_2 = op_3)))), [], [])
(x293, AndpAST, (cl  ((and  (not op_1) (op_2 = op_3))) ((not op_1))), [], [ 0])
(x294, AndpAST, (cl  ((and  (not op_1) (op_2 = op_3))) ((op_2 = op_3))), [], [ 1])
(x295, ResoAST, (cl  ((ite  op_1 (false) (op_2 = op_3)))), [ x292 x293 x294 x291], [])
(x297, DischargeAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3)))), [], [])
	, (cl ), [], [])
(x301, ResoAST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3)))), [ x297 x299], [])
(t22, ResoAST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))), [ x300 x301], [])
(x259, Equp1AST, (cl  ((not ((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 (false) (op_2 = op_3))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x258, ResoAST, (cl  ((ite  op_1 (false) (op_2 = op_3))) ((not (and  (not op_1) (op_2 = op_3))))), [ x259 t22], [])
(x257, Equp1AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [], [])
(x256, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ x257 t21], [])
(x260, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [ x258 x256], [])
(x261, Equn2AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x262, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [ x260 x261], [])
(x266, Equp2AST, (cl  ((not ((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_1 (false) (op_2 = op_3)))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x265, ResoAST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) ((and  (not op_1) (op_2 = op_3)))), [ x266 t22], [])
(x264, Equp2AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 (false) (op_2 = op_3)))), [], [])
(x263, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 (false) (op_2 = op_3)))), [ x264 t21], [])
(x267, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [ x265 x263], [])
(x268, Equn1AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x269, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x267 x268], [])
(t23, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))), [ x262 x269], [])
(x137, Equp2AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x138, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [ x137 t23], [])
(x139, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [], [])
(x140, Iten1AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) (op_0) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x141, Equn2AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x142, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) (op_0) (op_0)), [ x138 x139 x140 x141], [])
(x143, Equp1AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x144, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [ x143 t23], [])
(x145, Equp1AST, (cl  ((not (op_0 = op_0))) (op_0) ((not op_0))), [], [])
(x146, ResoAST, (cl  (op_0) ((not op_0))), [ x145 t2], [])
(x147, Iten1AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_0) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x148, Itep1AST, (cl  ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x149, Equn1AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [], [])
(x150, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0)), [ x144 x147 x148 x149 x142 x146], [])
(x151, Equp2AST, (cl  ((not (op_0 = op_0))) ((not op_0)) (op_0)), [], [])
(x152, ResoAST, (cl  ((not op_0)) (op_0)), [ x151 t2], [])
(x153, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0)), [ x152 x150], [])
(x154, Equp1AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x155, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [ x154 t15], [])
(x156, Itep2AST, (cl  ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not op_0)) ((and  op_1 (op_2 = op_3)))), [], [])
(x157, Iten2AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_0)) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))))), [], [])
(x158, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x155 x156 x157 x141 x153 x150], [])
(x159, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x149 x158], [])
(x160, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x161, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x160 x158 x150], [])
(x162, Iten2AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) ((not op_0)) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x163, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (and  op_1 (op_2 = op_3))))), [ x162 x159 x153], [])
(x164, Equp2AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [], [])
(x165, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [ x164 t15], [])
(t24, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x165 x161 x163], [])
(x270, Equn1AST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x271, Equn2AST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(t25, ResoAST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x270 x271], [])
(x166, ImppAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x169, Equp2AST, (cl  ((not ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x168, ResoAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [ x169 t25], [])
(x167, Equp1AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [], [])
(x170, ResoAST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x167 t24], [])
(x171, ResoAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x166 x168 x170], [])
(x172, Impn1AST, (cl  ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x173, Impn2AST, (cl  ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x174, ResoAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x171 x172 x173], [])
(x175, Equn1AST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x176, ResoAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x174 x175], [])
(x177, ImppAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x180, Equp2AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x179, ResoAST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ x180 t24], [])
(x178, Equp1AST, (cl  ((not ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x181, ResoAST, (cl  ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x178 t25], [])
(x182, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [ x177 x179 x181], [])
(x183, Impn1AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x184, Impn2AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x185, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x182 x183 x184], [])
(x186, Equn2AST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x187, ResoAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x185 x186], [])
(t26, ResoAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x187 x176], [])
(x188, Equp1AST, (cl  ((not ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x189, ResoAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x188 t26], [])
(x190, Equn1AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x191, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x189 x190], [])
(x192, Equp2AST, (cl  ((not ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x193, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x192 t26], [])
(x194, Equn2AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x195, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x193 x194], [])
(t27, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x191 x195], [])
(t28, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t1 t27 a0], [])
(t29, Nimp2AST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t28], [])
(t30, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t29], [])
(t32, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t34, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((not op_1))), [], [])
(t36, Nimp1AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ t28], [])
(t37, Ite1AST, (cl  (op_0) ((and  (not op_1) (op_2 = op_3)))), [ t36], [])
(t38, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t39, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t41, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) (op_1)), [], [])
(t43, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t44, ResoAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t30 t38 t39 t41 t43], [])
(t46, Ite2AST, (cl  ((not op_0)) ((and  op_1 (op_2 = op_3)))), [ t36], [])
(t48, ResoAST, (cl  ((not op_0)) ((not op_0))), [ t44 t46], [])
(t50, ResoAST, (cl  ((and  (not op_1) (op_2 = op_3)))), [ t37 t48], [])
(t51, ResoAST, (cl  ((not op_1))), [ t34 t50], [])
(t52, ResoAST, (cl  ((imp  op_1 op_0))), [ t32 t51], [])
(t53, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((op_2 = op_3))), [], [])
(t55, ResoAST, (cl  ((op_2 = op_3))), [ t53 t50], [])
(t56, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t58, ResoAST, (cl  ((imp  op_0 op_1))), [ t56 t48], [])
(t59, ResoAST, (cl ), [ t30 t52 t55 t58], [])

Certif after process_proj: 
(a0, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x196, Equn1AST, (cl  ((op_0 = op_0)) ((not op_0))), [], [])
(x197, Equn2AST, (cl  ((op_0 = op_0)) (op_0)), [], [])
(t2, ResoAST, (cl  ((op_0 = op_0))), [ x196 x197], [])
(x198, Equn1AST, (cl  ((op_1 = op_1)) ((not op_1))), [], [])
(x199, Equn2AST, (cl  ((op_1 = op_1)) (op_1)), [], [])
(t3, ResoAST, (cl  ((op_1 = op_1))), [ x198 x199], [])
(t4, ArithpolynormAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [ ARITH_POLY_NORM (((2 * op_2) + 1) = (1 + (2 * op_2)))])
(t5, ArithpolynormAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [ ARITH_POLY_NORM (((2 * op_3) + 1) = (1 + (2 * op_3)))])
(x1, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x2, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t5 x1], [])
(x3, Equp1AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((2 * op_2) + 1)) ((not ((2 * op_3) + 1)))), [], [])
(x4, Equn2AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((1 + (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x5, Equn2AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x6, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((1 + (2 * op_2)) = (1 + (2 * op_3)))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x2 x3 x4 x5], [])
(x7, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x8, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t5 x7], [])
(x9, Equn2AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((2 * op_2) + 1)) (((2 * op_3) + 1))), [], [])
(x10, Equp1AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x11, Equn1AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x12, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x8 x9 x10 x11], [])
(x13, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [], [])
(x14, ResoAST, (cl  (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [ t4 x13], [])
(x15, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1))), [ x6 x12 x14], [])
(x16, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [], [])
(x17, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [ t4 x16], [])
(x18, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2)))), [ x15 x17], [])
(x19, Equn1AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (1 + (2 * op_2)))) ((not (1 + (2 * op_3))))), [], [])
(x20, Equn1AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((2 * op_2) + 1))) ((not ((2 * op_3) + 1)))), [], [])
(x21, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x11 x19 x20 x8 x18 x15], [])
(x22, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x21 x2], [])
(x23, Equp2AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((2 * op_2) + 1))) (((2 * op_3) + 1))), [], [])
(x24, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [ x23 x21 x15], [])
(x25, Equp2AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_2)))) ((1 + (2 * op_3)))), [], [])
(x26, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x25 x22 x18], [])
(t6, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x5 x24 x26], [])
(t7, ArithpolynormAST, (cl  ((((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3))])
(x203, Equp1AST, (cl  ((not (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [], [])
(x202, ResoAST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [ x203 t7], [])
(x201, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x200, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x201 t6], [])
(x204, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [ x202 x200], [])
(x205, Equn2AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((op_2 = op_3))), [], [])
(x206, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [ x204 x205], [])
(x210, Equp2AST, (cl  ((not (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((op_2 = op_3))), [], [])
(x209, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((op_2 = op_3))), [ x210 t7], [])
(x208, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x207, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ x208 t6], [])
(x211, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [ x209 x207], [])
(x212, Equn1AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not (op_2 = op_3)))), [], [])
(x213, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [ x211 x212], [])
(t8, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))), [ x206 x213], [])
(t9, ReflAST, (cl  (((2 * op_3) = (2 * op_3)))), [], [])
(x27, Equp1AST, (cl  ((not ((2 * op_3) = (2 * op_3)))) ((2 * op_3)) ((not (2 * op_3)))), [], [])
(x28, ResoAST, (cl  ((2 * op_3)) ((not (2 * op_3)))), [ t9 x27], [])
(x29, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_2) + 1)) ((not (2 * op_3)))), [], [])
(x30, Equn2AST, (cl  (((1 + (2 * op_2)) = (2 * op_3))) ((1 + (2 * op_2))) ((2 * op_3))), [], [])
(x31, Equn2AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((((2 * op_2) + 1) = (2 * op_3))) (((1 + (2 * op_2)) = (2 * op_3)))), [], [])
(x32, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x28 x29 x30 x31], [])
(x33, Equp2AST, (cl  ((not ((2 * op_3) = (2 * op_3)))) ((not (2 * op_3))) ((2 * op_3))), [], [])
(x34, ResoAST, (cl  ((not (2 * op_3))) ((2 * op_3))), [ t9 x33], [])
(x35, Equn2AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) (((2 * op_2) + 1)) ((2 * op_3))), [], [])
(x36, Equp1AST, (cl  ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((1 + (2 * op_2))) ((not (2 * op_3)))), [], [])
(x37, Equn1AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [], [])
(x38, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3)))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x34 x35 x36 x37], [])
(x39, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [], [])
(x40, ResoAST, (cl  (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [ t4 x39], [])
(x41, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) (((2 * op_2) + 1))), [ x32 x38 x40], [])
(x42, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [], [])
(x43, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [ t4 x42], [])
(x44, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((1 + (2 * op_2)))), [ x41 x43], [])
(x45, Equn1AST, (cl  (((1 + (2 * op_2)) = (2 * op_3))) ((not (1 + (2 * op_2)))) ((not (2 * op_3)))), [], [])
(x46, Equn1AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_2) + 1))) ((not (2 * op_3)))), [], [])
(x47, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (2 * op_3)))), [ x37 x45 x46 x34 x44 x41], [])
(x48, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (2 * op_3)))), [ x47 x28], [])
(x49, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_2) + 1))) ((2 * op_3))), [], [])
(x50, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (((2 * op_2) + 1) = (2 * op_3))))), [ x49 x47 x41], [])
(x51, Equp2AST, (cl  ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((not (1 + (2 * op_2)))) ((2 * op_3))), [], [])
(x52, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [ x51 x48 x44], [])
(t10, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))), [ x31 x50 x52], [])
(t11, LiaRewriteAST, (cl  ((((1 + (2 * op_2)) = (2 * op_3)) = (false)))), [], [])
(x217, Equp1AST, (cl  ((not (((1 + (2 * op_2)) = (2 * op_3)) = (false)))) (((1 + (2 * op_2)) = (2 * op_3))) ((not (false)))), [], [])
(x216, ResoAST, (cl  (((1 + (2 * op_2)) = (2 * op_3))) ((not (false)))), [ x217 t11], [])
(x215, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))) ((((2 * op_2) + 1) = (2 * op_3))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [], [])
(x214, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [ x215 t10], [])
(x218, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [ x216 x214], [])
(x219, Equn2AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((((2 * op_2) + 1) = (2 * op_3))) ((false))), [], [])
(x220, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((((2 * op_2) + 1) = (2 * op_3)))), [ x218 x219], [])
(x224, Equp2AST, (cl  ((not (((1 + (2 * op_2)) = (2 * op_3)) = (false)))) ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((false))), [], [])
(x223, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((false))), [ x224 t11], [])
(x222, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))) ((not (((2 * op_2) + 1) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3)))), [], [])
(x221, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3)))), [ x222 t10], [])
(x225, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [ x223 x221], [])
(x226, Equn1AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not (false)))), [], [])
(x227, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((not (((2 * op_2) + 1) = (2 * op_3))))), [ x225 x226], [])
(t12, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false)))), [ x220 x227], [])
(x53, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = (false)))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [], [])
(x54, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [ x53 t12], [])
(x55, Itep1AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) (op_1) ((((2 * op_2) + 1) = (2 * op_3)))), [], [])
(x56, Iten1AST, (cl  ((ite  op_1 (op_2 = op_3) (false))) (op_1) ((not (false)))), [], [])
(x57, Equn2AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((ite  op_1 (op_2 = op_3) (false)))), [], [])
(x58, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (op_2 = op_3) (false))) (op_1) (op_1)), [ x54 x55 x56 x57], [])
(x59, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = (false)))) ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [], [])
(x60, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [ x59 t12], [])
(x61, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x62, ResoAST, (cl  (op_1) ((not op_1))), [ x61 t3], [])
(x63, Iten1AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) (op_1) ((not (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x64, Itep1AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) (op_1) ((false))), [], [])
(x65, Equn1AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not (ite  op_1 (op_2 = op_3) (false))))), [], [])
(x66, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) (op_1)), [ x60 x63 x64 x65 x58 x62], [])
(x67, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x68, ResoAST, (cl  ((not op_1)) (op_1)), [ x67 t3], [])
(x69, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) (op_1)), [ x68 x66], [])
(x70, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [], [])
(x71, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [ x70 t8], [])
(x72, Itep2AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) ((not op_1)) ((op_2 = op_3))), [], [])
(x73, Iten2AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not op_1)) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [], [])
(x74, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x71 x72 x73 x57 x69 x66], [])
(x75, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x65 x74], [])
(x76, Itep2AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not op_1)) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [], [])
(x77, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [ x76 x74 x66], [])
(x78, Iten2AST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not op_1)) ((not (op_2 = op_3)))), [], [])
(x79, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (op_2 = op_3)))), [ x78 x75 x69], [])
(x80, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [], [])
(x81, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [ x80 t8], [])
(t13, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))), [ x81 x77 x79], [])
(x306, Equn1AST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (op_2 = op_3) (false)))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x311, SubproofAST
	(x272, AssumeAST, (cl  ((ite  op_1 (op_2 = op_3) (false)))), [], [])
(x273, AndnAST, (cl  ((and  op_1 (op_2 = op_3))) ((not op_1)) ((not (op_2 = op_3)))), [], [])
(x274, Itep2AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) ((not op_1)) ((op_2 = op_3))), [], [])
(x275, Itep1AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) (op_1) ((false))), [], [])
(x276, FalsAST, (cl  ((not (false)))), [], [])
(x277, ResoAST, (cl  ((and  op_1 (op_2 = op_3)))), [ x273 x274 x275 x276 x272], [])
(x304, DischargeAST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) ((and  op_1 (op_2 = op_3)))), [], [])
	, (cl ), [], [])
(x308, ResoAST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x304 x306], [])
(x307, Equn2AST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (op_2 = op_3) (false))) ((and  op_1 (op_2 = op_3)))), [], [])
(x310, SubproofAST
	(x278, AssumeAST, (cl  ((and  op_1 (op_2 = op_3)))), [], [])
(x279, Iten2AST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not op_1)) ((not (op_2 = op_3)))), [], [])
(x280, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) (op_1)), [], [ 0])
(x282, ResoAST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3)))) ((not (op_2 = op_3)))), [ x279 x280], [])
(x281, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((op_2 = op_3))), [], [ 1])
(x283, ResoAST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3))))), [ x282 x281], [])
(x284, ResoAST, (cl  ((ite  op_1 (op_2 = op_3) (false)))), [ x283 x278], [])
(x305, DischargeAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((ite  op_1 (op_2 = op_3) (false)))), [], [])
	, (cl ), [], [])
(x309, ResoAST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (op_2 = op_3) (false)))), [ x305 x307], [])
(t14, ResoAST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))), [ x308 x309], [])
(x231, Equp1AST, (cl  ((not ((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))) ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x230, ResoAST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3))))), [ x231 t14], [])
(x229, Equp1AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [], [])
(x228, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x229 t13], [])
(x232, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [ x230 x228], [])
(x233, Equn2AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((and  op_1 (op_2 = op_3)))), [], [])
(x234, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x232 x233], [])
(x238, Equp2AST, (cl  ((not ((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))) ((not (ite  op_1 (op_2 = op_3) (false)))) ((and  op_1 (op_2 = op_3)))), [], [])
(x237, ResoAST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) ((and  op_1 (op_2 = op_3)))), [ x238 t14], [])
(x236, Equp2AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 (op_2 = op_3) (false)))), [], [])
(x235, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 (op_2 = op_3) (false)))), [ x236 t13], [])
(x239, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [ x237 x235], [])
(x240, Equn1AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x241, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))))), [ x239 x240], [])
(t15, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))), [ x234 x241], [])
(t16, ReflAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(x82, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x83, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t5 x82], [])
(x84, Equp1AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((2 * op_2)) ((not ((2 * op_3) + 1)))), [], [])
(x85, Equn2AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((1 + (2 * op_3)))), [], [])
(x86, Equn2AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x87, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((2 * op_2))), [ x83 x84 x85 x86], [])
(x88, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x89, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t5 x88], [])
(x90, Equn2AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((2 * op_2)) (((2 * op_3) + 1))), [], [])
(x91, Equp1AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((not (1 + (2 * op_3))))), [], [])
(x92, Equn1AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x93, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((2 * op_2))), [ x89 x90 x91 x92], [])
(x94, Equp1AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((2 * op_2)) ((not (2 * op_2)))), [], [])
(x95, ResoAST, (cl  ((2 * op_2)) ((not (2 * op_2)))), [ t16 x94], [])
(x96, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x87 x93 x95], [])
(x97, Equp2AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((not (2 * op_2))) ((2 * op_2))), [], [])
(x98, ResoAST, (cl  ((not (2 * op_2))) ((2 * op_2))), [ t16 x97], [])
(x99, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x96 x98], [])
(x100, Equn1AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((not (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x101, Equn1AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (2 * op_2))) ((not ((2 * op_3) + 1)))), [], [])
(x102, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x92 x100 x101 x89 x99 x96], [])
(x103, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x102 x83], [])
(x104, Equp2AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not (2 * op_2))) (((2 * op_3) + 1))), [], [])
(x105, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [ x104 x102 x96], [])
(x106, Equp2AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x107, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x106 x103 x99], [])
(t17, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ x86 x105 x107], [])
(t18, LiaRewriteAST, (cl  ((((2 * op_2) = (1 + (2 * op_3))) = (false)))), [], [])
(x245, Equp1AST, (cl  ((not (((2 * op_2) = (1 + (2 * op_3))) = (false)))) (((2 * op_2) = (1 + (2 * op_3)))) ((not (false)))), [], [])
(x244, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((not (false)))), [ x245 t18], [])
(x243, Equp1AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x242, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x243 t17], [])
(x246, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [ x244 x242], [])
(x247, Equn2AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) (((2 * op_2) = ((2 * op_3) + 1))) ((false))), [], [])
(x248, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) (((2 * op_2) = ((2 * op_3) + 1)))), [ x246 x247], [])
(x252, Equp2AST, (cl  ((not (((2 * op_2) = (1 + (2 * op_3))) = (false)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((false))), [], [])
(x251, ResoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((false))), [ x252 t18], [])
(x250, Equp2AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x249, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [ x250 t17], [])
(x253, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [ x251 x249], [])
(x254, Equn1AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not (false)))), [], [])
(x255, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [ x253 x254], [])
(t19, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false)))), [ x248 x255], [])
(t20, ArithpolynormAST, (cl  ((((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((2 * op_2) = (2 * op_3)) = (op_2 = op_3))])
(x108, Equp2AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((op_2 = op_3))), [], [])
(x109, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((op_2 = op_3))), [ x108 t20], [])
(x110, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(x111, Iten1AST, (cl  ((ite  op_1 (false) (op_2 = op_3))) (op_1) ((not (op_2 = op_3)))), [], [])
(x112, Equn2AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((ite  op_1 (false) (op_2 = op_3)))), [], [])
(x113, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3))) (op_1) (op_1)), [ x109 x110 x111 x112], [])
(x114, Equp1AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))) (((2 * op_2) = (2 * op_3))) ((not (op_2 = op_3)))), [], [])
(x115, ResoAST, (cl  (((2 * op_2) = (2 * op_3))) ((not (op_2 = op_3)))), [ x114 t20], [])
(x116, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x117, ResoAST, (cl  (op_1) ((not op_1))), [ x116 t3], [])
(x118, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x119, Itep1AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) (op_1) ((op_2 = op_3))), [], [])
(x120, Equn1AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 (false) (op_2 = op_3))))), [], [])
(x121, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (op_1)), [ x115 x118 x119 x120 x113 x117], [])
(x122, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x123, ResoAST, (cl  ((not op_1)) (op_1)), [ x122 t3], [])
(x124, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (op_1)), [ x123 x121], [])
(x125, Equp1AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = (false)))) (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [], [])
(x126, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [ x125 t19], [])
(x127, Itep2AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) ((not op_1)) ((false))), [], [])
(x128, Iten2AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not op_1)) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [], [])
(x129, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [ x126 x127 x128 x112 x124 x121], [])
(x130, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ x120 x129], [])
(x131, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = ((2 * op_3) + 1)))), [], [])
(x132, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (((2 * op_2) = ((2 * op_3) + 1)))), [ x131 x129 x121], [])
(x133, Iten2AST, (cl  ((ite  op_1 (false) (op_2 = op_3))) ((not op_1)) ((not (false)))), [], [])
(x134, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (false)))), [ x133 x130 x124], [])
(x135, Equp2AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = (false)))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [], [])
(x136, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [ x135 t19], [])
(t21, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))), [ x136 x132 x134], [])
(x298, Equn1AST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 (false) (op_2 = op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x303, SubproofAST
	(x285, AssumeAST, (cl  ((ite  op_1 (false) (op_2 = op_3)))), [], [])
(x286, AndnAST, (cl  ((and  (not op_1) (op_2 = op_3))) (op_1) ((not (op_2 = op_3)))), [], [])
(x287, Itep1AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) (op_1) ((op_2 = op_3))), [], [])
(x288, Itep2AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) ((not op_1)) ((false))), [], [])
(x289, FalsAST, (cl  ((not (false)))), [], [])
(x290, ResoAST, (cl  ((and  (not op_1) (op_2 = op_3)))), [ x286 x287 x288 x289 x285], [])
(x296, DischargeAST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) ((and  (not op_1) (op_2 = op_3)))), [], [])
	, (cl ), [], [])
(x300, ResoAST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ x296 x298], [])
(x299, Equn2AST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x302, SubproofAST
	(x291, AssumeAST, (cl  ((and  (not op_1) (op_2 = op_3)))), [], [])
(x292, Iten1AST, (cl  ((ite  op_1 (false) (op_2 = op_3))) (op_1) ((not (op_2 = op_3)))), [], [])
(x293, AndpAST, (cl  ((and  (not op_1) (op_2 = op_3))) ((not op_1))), [], [ 0])
(x294, AndpAST, (cl  ((and  (not op_1) (op_2 = op_3))) ((op_2 = op_3))), [], [ 1])
(x295, ResoAST, (cl  ((ite  op_1 (false) (op_2 = op_3)))), [ x292 x293 x294 x291], [])
(x297, DischargeAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3)))), [], [])
	, (cl ), [], [])
(x301, ResoAST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3)))), [ x297 x299], [])
(t22, ResoAST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))), [ x300 x301], [])
(x259, Equp1AST, (cl  ((not ((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 (false) (op_2 = op_3))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x258, ResoAST, (cl  ((ite  op_1 (false) (op_2 = op_3))) ((not (and  (not op_1) (op_2 = op_3))))), [ x259 t22], [])
(x257, Equp1AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [], [])
(x256, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ x257 t21], [])
(x260, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [ x258 x256], [])
(x261, Equn2AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x262, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [ x260 x261], [])
(x266, Equp2AST, (cl  ((not ((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_1 (false) (op_2 = op_3)))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x265, ResoAST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) ((and  (not op_1) (op_2 = op_3)))), [ x266 t22], [])
(x264, Equp2AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 (false) (op_2 = op_3)))), [], [])
(x263, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 (false) (op_2 = op_3)))), [ x264 t21], [])
(x267, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [ x265 x263], [])
(x268, Equn1AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x269, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x267 x268], [])
(t23, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))), [ x262 x269], [])
(x137, Equp2AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x138, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [ x137 t23], [])
(x139, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [], [])
(x140, Iten1AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) (op_0) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x141, Equn2AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x142, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) (op_0) (op_0)), [ x138 x139 x140 x141], [])
(x143, Equp1AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x144, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [ x143 t23], [])
(x145, Equp1AST, (cl  ((not (op_0 = op_0))) (op_0) ((not op_0))), [], [])
(x146, ResoAST, (cl  (op_0) ((not op_0))), [ x145 t2], [])
(x147, Iten1AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_0) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x148, Itep1AST, (cl  ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x149, Equn1AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [], [])
(x150, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0)), [ x144 x147 x148 x149 x142 x146], [])
(x151, Equp2AST, (cl  ((not (op_0 = op_0))) ((not op_0)) (op_0)), [], [])
(x152, ResoAST, (cl  ((not op_0)) (op_0)), [ x151 t2], [])
(x153, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0)), [ x152 x150], [])
(x154, Equp1AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x155, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [ x154 t15], [])
(x156, Itep2AST, (cl  ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not op_0)) ((and  op_1 (op_2 = op_3)))), [], [])
(x157, Iten2AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_0)) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))))), [], [])
(x158, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x155 x156 x157 x141 x153 x150], [])
(x159, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x149 x158], [])
(x160, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x161, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x160 x158 x150], [])
(x162, Iten2AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) ((not op_0)) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x163, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (and  op_1 (op_2 = op_3))))), [ x162 x159 x153], [])
(x164, Equp2AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [], [])
(x165, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [ x164 t15], [])
(t24, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x165 x161 x163], [])
(x270, Equn1AST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x271, Equn2AST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(t25, ResoAST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x270 x271], [])
(x166, ImppAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x169, Equp2AST, (cl  ((not ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x168, ResoAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [ x169 t25], [])
(x167, Equp1AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [], [])
(x170, ResoAST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x167 t24], [])
(x171, ResoAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x166 x168 x170], [])
(x172, Impn1AST, (cl  ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x173, Impn2AST, (cl  ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x174, ResoAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x171 x172 x173], [])
(x175, Equn1AST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x176, ResoAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x174 x175], [])
(x177, ImppAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x180, Equp2AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x179, ResoAST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ x180 t24], [])
(x178, Equp1AST, (cl  ((not ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x181, ResoAST, (cl  ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x178 t25], [])
(x182, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [ x177 x179 x181], [])
(x183, Impn1AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x184, Impn2AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x185, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x182 x183 x184], [])
(x186, Equn2AST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x187, ResoAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x185 x186], [])
(t26, ResoAST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x187 x176], [])
(x188, Equp1AST, (cl  ((not ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x189, ResoAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x188 t26], [])
(x190, Equn1AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x191, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x189 x190], [])
(x192, Equp2AST, (cl  ((not ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x193, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x192 t26], [])
(x194, Equn2AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x195, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x193 x194], [])
(t27, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x191 x195], [])
(t28, ResoAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t1 t27 a0], [])
(t29, Nimp2AST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t28], [])
(t30, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t29], [])
(t32, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t34, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((not op_1))), [], [ 0])
(t36, Nimp1AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ t28], [])
(t37, Ite1AST, (cl  (op_0) ((and  (not op_1) (op_2 = op_3)))), [ t36], [])
(t38, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t39, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((op_2 = op_3))), [], [ 1])
(t41, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) (op_1)), [], [ 0])
(t43, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t44, ResoAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t30 t38 t39 t41 t43], [])
(t46, Ite2AST, (cl  ((not op_0)) ((and  op_1 (op_2 = op_3)))), [ t36], [])
(t48, ResoAST, (cl  ((not op_0)) ((not op_0))), [ t44 t46], [])
(t50, ResoAST, (cl  ((and  (not op_1) (op_2 = op_3)))), [ t37 t48], [])
(t51, ResoAST, (cl  ((not op_1))), [ t34 t50], [])
(t52, ResoAST, (cl  ((imp  op_1 op_0))), [ t32 t51], [])
(t53, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((op_2 = op_3))), [], [ 1])
(t55, ResoAST, (cl  ((op_2 = op_3))), [ t53 t50], [])
(t56, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t58, ResoAST, (cl  ((imp  op_0 op_1))), [ t56 t48], [])
(t59, ResoAST, (cl ), [ t30 t52 t55 t58], [])

Certif after process_subproof: 
(a0, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t1, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x196, Equn1AST, (cl  ((op_0 = op_0)) ((not op_0))), [], [])
(x197, Equn2AST, (cl  ((op_0 = op_0)) (op_0)), [], [])
(t2, ResoAST, (cl  ((op_0 = op_0))), [ x196 x197], [])
(x198, Equn1AST, (cl  ((op_1 = op_1)) ((not op_1))), [], [])
(x199, Equn2AST, (cl  ((op_1 = op_1)) (op_1)), [], [])
(t3, ResoAST, (cl  ((op_1 = op_1))), [ x198 x199], [])
(t4, ArithpolynormAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [ ARITH_POLY_NORM (((2 * op_2) + 1) = (1 + (2 * op_2)))])
(t5, ArithpolynormAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [ ARITH_POLY_NORM (((2 * op_3) + 1) = (1 + (2 * op_3)))])
(x1, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x2, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t5 x1], [])
(x3, Equp1AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((2 * op_2) + 1)) ((not ((2 * op_3) + 1)))), [], [])
(x4, Equn2AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((1 + (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x5, Equn2AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x6, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((1 + (2 * op_2)) = (1 + (2 * op_3)))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x2 x3 x4 x5], [])
(x7, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x8, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t5 x7], [])
(x9, Equn2AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((2 * op_2) + 1)) (((2 * op_3) + 1))), [], [])
(x10, Equp1AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x11, Equn1AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x12, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x8 x9 x10 x11], [])
(x13, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [], [])
(x14, ResoAST, (cl  (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [ t4 x13], [])
(x15, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1))), [ x6 x12 x14], [])
(x16, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [], [])
(x17, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [ t4 x16], [])
(x18, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2)))), [ x15 x17], [])
(x19, Equn1AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (1 + (2 * op_2)))) ((not (1 + (2 * op_3))))), [], [])
(x20, Equn1AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((2 * op_2) + 1))) ((not ((2 * op_3) + 1)))), [], [])
(x21, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x11 x19 x20 x8 x18 x15], [])
(x22, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x21 x2], [])
(x23, Equp2AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((2 * op_2) + 1))) (((2 * op_3) + 1))), [], [])
(x24, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [ x23 x21 x15], [])
(x25, Equp2AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_2)))) ((1 + (2 * op_3)))), [], [])
(x26, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x25 x22 x18], [])
(t6, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x5 x24 x26], [])
(t7, ArithpolynormAST, (cl  ((((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3))])
(x203, Equp1AST, (cl  ((not (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [], [])
(x202, ResoAST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [ x203 t7], [])
(x201, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x200, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x201 t6], [])
(x204, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [ x202 x200], [])
(x205, Equn2AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((op_2 = op_3))), [], [])
(x206, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [ x204 x205], [])
(x210, Equp2AST, (cl  ((not (((1 + (2 * op_2)) = (1 + (2 * op_3))) = (op_2 = op_3)))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((op_2 = op_3))), [], [])
(x209, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((op_2 = op_3))), [ x210 t7], [])
(x208, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x207, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ x208 t6], [])
(x211, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [ x209 x207], [])
(x212, Equn1AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not (op_2 = op_3)))), [], [])
(x213, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [ x211 x212], [])
(t8, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))), [ x206 x213], [])
(t9, ReflAST, (cl  (((2 * op_3) = (2 * op_3)))), [], [])
(x27, Equp1AST, (cl  ((not ((2 * op_3) = (2 * op_3)))) ((2 * op_3)) ((not (2 * op_3)))), [], [])
(x28, ResoAST, (cl  ((2 * op_3)) ((not (2 * op_3)))), [ t9 x27], [])
(x29, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_2) + 1)) ((not (2 * op_3)))), [], [])
(x30, Equn2AST, (cl  (((1 + (2 * op_2)) = (2 * op_3))) ((1 + (2 * op_2))) ((2 * op_3))), [], [])
(x31, Equn2AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((((2 * op_2) + 1) = (2 * op_3))) (((1 + (2 * op_2)) = (2 * op_3)))), [], [])
(x32, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x28 x29 x30 x31], [])
(x33, Equp2AST, (cl  ((not ((2 * op_3) = (2 * op_3)))) ((not (2 * op_3))) ((2 * op_3))), [], [])
(x34, ResoAST, (cl  ((not (2 * op_3))) ((2 * op_3))), [ t9 x33], [])
(x35, Equn2AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) (((2 * op_2) + 1)) ((2 * op_3))), [], [])
(x36, Equp1AST, (cl  ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((1 + (2 * op_2))) ((not (2 * op_3)))), [], [])
(x37, Equn1AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [], [])
(x38, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3)))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x34 x35 x36 x37], [])
(x39, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [], [])
(x40, ResoAST, (cl  (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [ t4 x39], [])
(x41, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) (((2 * op_2) + 1))), [ x32 x38 x40], [])
(x42, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [], [])
(x43, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [ t4 x42], [])
(x44, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((1 + (2 * op_2)))), [ x41 x43], [])
(x45, Equn1AST, (cl  (((1 + (2 * op_2)) = (2 * op_3))) ((not (1 + (2 * op_2)))) ((not (2 * op_3)))), [], [])
(x46, Equn1AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_2) + 1))) ((not (2 * op_3)))), [], [])
(x47, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (2 * op_3)))), [ x37 x45 x46 x34 x44 x41], [])
(x48, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (2 * op_3)))), [ x47 x28], [])
(x49, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_2) + 1))) ((2 * op_3))), [], [])
(x50, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not (((2 * op_2) + 1) = (2 * op_3))))), [ x49 x47 x41], [])
(x51, Equp2AST, (cl  ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((not (1 + (2 * op_2)))) ((2 * op_3))), [], [])
(x52, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3)))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [ x51 x48 x44], [])
(t10, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))), [ x31 x50 x52], [])
(t11, LiaRewriteAST, (cl  ((((1 + (2 * op_2)) = (2 * op_3)) = (false)))), [], [])
(x217, Equp1AST, (cl  ((not (((1 + (2 * op_2)) = (2 * op_3)) = (false)))) (((1 + (2 * op_2)) = (2 * op_3))) ((not (false)))), [], [])
(x216, ResoAST, (cl  (((1 + (2 * op_2)) = (2 * op_3))) ((not (false)))), [ x217 t11], [])
(x215, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))) ((((2 * op_2) + 1) = (2 * op_3))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [], [])
(x214, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((1 + (2 * op_2)) = (2 * op_3))))), [ x215 t10], [])
(x218, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [ x216 x214], [])
(x219, Equn2AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((((2 * op_2) + 1) = (2 * op_3))) ((false))), [], [])
(x220, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((((2 * op_2) + 1) = (2 * op_3)))), [ x218 x219], [])
(x224, Equp2AST, (cl  ((not (((1 + (2 * op_2)) = (2 * op_3)) = (false)))) ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((false))), [], [])
(x223, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (2 * op_3)))) ((false))), [ x224 t11], [])
(x222, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((1 + (2 * op_2)) = (2 * op_3))))) ((not (((2 * op_2) + 1) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3)))), [], [])
(x221, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((1 + (2 * op_2)) = (2 * op_3)))), [ x222 t10], [])
(x225, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [ x223 x221], [])
(x226, Equn1AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not (false)))), [], [])
(x227, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false))) ((not (((2 * op_2) + 1) = (2 * op_3))))), [ x225 x226], [])
(t12, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = (false)))), [ x220 x227], [])
(x53, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = (false)))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [], [])
(x54, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((false))), [ x53 t12], [])
(x55, Itep1AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) (op_1) ((((2 * op_2) + 1) = (2 * op_3)))), [], [])
(x56, Iten1AST, (cl  ((ite  op_1 (op_2 = op_3) (false))) (op_1) ((not (false)))), [], [])
(x57, Equn2AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((ite  op_1 (op_2 = op_3) (false)))), [], [])
(x58, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (op_2 = op_3) (false))) (op_1) (op_1)), [ x54 x55 x56 x57], [])
(x59, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = (false)))) ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [], [])
(x60, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not (false)))), [ x59 t12], [])
(x61, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x62, ResoAST, (cl  (op_1) ((not op_1))), [ x61 t3], [])
(x63, Iten1AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) (op_1) ((not (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x64, Itep1AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) (op_1) ((false))), [], [])
(x65, Equn1AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not (ite  op_1 (op_2 = op_3) (false))))), [], [])
(x66, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) (op_1)), [ x60 x63 x64 x65 x58 x62], [])
(x67, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x68, ResoAST, (cl  ((not op_1)) (op_1)), [ x67 t3], [])
(x69, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) (op_1)), [ x68 x66], [])
(x70, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [], [])
(x71, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not (op_2 = op_3)))), [ x70 t8], [])
(x72, Itep2AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) ((not op_1)) ((op_2 = op_3))), [], [])
(x73, Iten2AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not op_1)) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [], [])
(x74, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x71 x72 x73 x57 x69 x66], [])
(x75, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x65 x74], [])
(x76, Itep2AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not op_1)) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [], [])
(x77, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [ x76 x74 x66], [])
(x78, Iten2AST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not op_1)) ((not (op_2 = op_3)))), [], [])
(x79, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false)))) ((not (op_2 = op_3)))), [ x78 x75 x69], [])
(x80, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = (op_2 = op_3)))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [], [])
(x81, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((op_2 = op_3))), [ x80 t8], [])
(t13, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))), [ x81 x77 x79], [])
(x306, Equn1AST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (op_2 = op_3) (false)))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x304, AndnAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((not (ite  op_1 (op_2 = op_3) (false)))) ((and  op_1 (op_2 = op_3)))), [], [])
(x308, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x304 x306], [])
(x307, Equn2AST, (cl  (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (op_2 = op_3) (false))) ((and  op_1 (op_2 = op_3)))), [], [])
(x305, AndnAST, (cl  ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((not (and  op_1 (op_2 = op_3)))) ((ite  op_1 (op_2 = op_3) (false)))), [], [])
(x309, ResoAST, (cl  ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (op_2 = op_3) (false)))), [ x305 x307], [])
(t14, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) (((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))), [ x308 x309], [])
(x231, Equp1AST, (cl  ((not ((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))) ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x230, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3))))), [ x231 t14], [])
(x229, Equp1AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [], [])
(x228, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x229 t13], [])
(x232, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [ x230 x228], [])
(x233, Equn2AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((and  op_1 (op_2 = op_3)))), [], [])
(x234, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x232 x233], [])
(x238, Equp2AST, (cl  ((not ((ite  op_1 (op_2 = op_3) (false)) = (and  op_1 (op_2 = op_3))))) ((not (ite  op_1 (op_2 = op_3) (false)))) ((and  op_1 (op_2 = op_3)))), [], [])
(x237, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((not (ite  op_1 (op_2 = op_3) (false)))) ((and  op_1 (op_2 = op_3)))), [ x238 t14], [])
(x236, Equp2AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 (op_2 = op_3) (false))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 (op_2 = op_3) (false)))), [], [])
(x235, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 (op_2 = op_3) (false)))), [ x236 t13], [])
(x239, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [ x237 x235], [])
(x240, Equn1AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x241, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3)))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))))), [ x239 x240], [])
(t15, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))), [ x234 x241], [])
(t16, ReflAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(x82, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x83, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t5 x82], [])
(x84, Equp1AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((2 * op_2)) ((not ((2 * op_3) + 1)))), [], [])
(x85, Equn2AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((1 + (2 * op_3)))), [], [])
(x86, Equn2AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x87, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((2 * op_2))), [ x83 x84 x85 x86], [])
(x88, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x89, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t5 x88], [])
(x90, Equn2AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((2 * op_2)) (((2 * op_3) + 1))), [], [])
(x91, Equp1AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((not (1 + (2 * op_3))))), [], [])
(x92, Equn1AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x93, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((2 * op_2))), [ x89 x90 x91 x92], [])
(x94, Equp1AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((2 * op_2)) ((not (2 * op_2)))), [], [])
(x95, ResoAST, (cl  ((2 * op_2)) ((not (2 * op_2)))), [ t16 x94], [])
(x96, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x87 x93 x95], [])
(x97, Equp2AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((not (2 * op_2))) ((2 * op_2))), [], [])
(x98, ResoAST, (cl  ((not (2 * op_2))) ((2 * op_2))), [ t16 x97], [])
(x99, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x96 x98], [])
(x100, Equn1AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((not (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x101, Equn1AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (2 * op_2))) ((not ((2 * op_3) + 1)))), [], [])
(x102, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x92 x100 x101 x89 x99 x96], [])
(x103, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x102 x83], [])
(x104, Equp2AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not (2 * op_2))) (((2 * op_3) + 1))), [], [])
(x105, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [ x104 x102 x96], [])
(x106, Equp2AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x107, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x106 x103 x99], [])
(t17, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ x86 x105 x107], [])
(t18, LiaRewriteAST, (cl  ((((2 * op_2) = (1 + (2 * op_3))) = (false)))), [], [])
(x245, Equp1AST, (cl  ((not (((2 * op_2) = (1 + (2 * op_3))) = (false)))) (((2 * op_2) = (1 + (2 * op_3)))) ((not (false)))), [], [])
(x244, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((not (false)))), [ x245 t18], [])
(x243, Equp1AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x242, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x243 t17], [])
(x246, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [ x244 x242], [])
(x247, Equn2AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) (((2 * op_2) = ((2 * op_3) + 1))) ((false))), [], [])
(x248, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) (((2 * op_2) = ((2 * op_3) + 1)))), [ x246 x247], [])
(x252, Equp2AST, (cl  ((not (((2 * op_2) = (1 + (2 * op_3))) = (false)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((false))), [], [])
(x251, ResoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((false))), [ x252 t18], [])
(x250, Equp2AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x249, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [ x250 t17], [])
(x253, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [ x251 x249], [])
(x254, Equn1AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not (false)))), [], [])
(x255, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false))) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [ x253 x254], [])
(t19, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = (false)))), [ x248 x255], [])
(t20, ArithpolynormAST, (cl  ((((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))), [], [ ARITH_POLY_NORM (((2 * op_2) = (2 * op_3)) = (op_2 = op_3))])
(x108, Equp2AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((op_2 = op_3))), [], [])
(x109, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((op_2 = op_3))), [ x108 t20], [])
(x110, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(x111, Iten1AST, (cl  ((ite  op_1 (false) (op_2 = op_3))) (op_1) ((not (op_2 = op_3)))), [], [])
(x112, Equn2AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((ite  op_1 (false) (op_2 = op_3)))), [], [])
(x113, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3))) (op_1) (op_1)), [ x109 x110 x111 x112], [])
(x114, Equp1AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = (op_2 = op_3)))) (((2 * op_2) = (2 * op_3))) ((not (op_2 = op_3)))), [], [])
(x115, ResoAST, (cl  (((2 * op_2) = (2 * op_3))) ((not (op_2 = op_3)))), [ x114 t20], [])
(x116, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x117, ResoAST, (cl  (op_1) ((not op_1))), [ x116 t3], [])
(x118, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x119, Itep1AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) (op_1) ((op_2 = op_3))), [], [])
(x120, Equn1AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 (false) (op_2 = op_3))))), [], [])
(x121, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (op_1)), [ x115 x118 x119 x120 x113 x117], [])
(x122, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x123, ResoAST, (cl  ((not op_1)) (op_1)), [ x122 t3], [])
(x124, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (op_1)), [ x123 x121], [])
(x125, Equp1AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = (false)))) (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [], [])
(x126, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (false)))), [ x125 t19], [])
(x127, Itep2AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) ((not op_1)) ((false))), [], [])
(x128, Iten2AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not op_1)) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [], [])
(x129, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [ x126 x127 x128 x112 x124 x121], [])
(x130, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ x120 x129], [])
(x131, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = ((2 * op_3) + 1)))), [], [])
(x132, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) (((2 * op_2) = ((2 * op_3) + 1)))), [ x131 x129 x121], [])
(x133, Iten2AST, (cl  ((ite  op_1 (false) (op_2 = op_3))) ((not op_1)) ((not (false)))), [], [])
(x134, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3)))) ((not (false)))), [ x133 x130 x124], [])
(x135, Equp2AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = (false)))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [], [])
(x136, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((false))), [ x135 t19], [])
(t21, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))), [ x136 x132 x134], [])
(x298, Equn1AST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 (false) (op_2 = op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x296, AndnAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_1 (false) (op_2 = op_3)))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x300, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ x296 x298], [])
(x299, Equn2AST, (cl  (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x297, AndnAST, (cl  ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3)))), [], [])
(x301, ResoAST, (cl  ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 (false) (op_2 = op_3)))), [ x297 x299], [])
(t22, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))), [ x300 x301], [])
(x259, Equp1AST, (cl  ((not ((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 (false) (op_2 = op_3))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x258, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((ite  op_1 (false) (op_2 = op_3))) ((not (and  (not op_1) (op_2 = op_3))))), [ x259 t22], [])
(x257, Equp1AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [], [])
(x256, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ x257 t21], [])
(x260, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [ x258 x256], [])
(x261, Equn2AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x262, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [ x260 x261], [])
(x266, Equp2AST, (cl  ((not ((ite  op_1 (false) (op_2 = op_3)) = (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_1 (false) (op_2 = op_3)))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x265, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (ite  op_1 (false) (op_2 = op_3)))) ((and  (not op_1) (op_2 = op_3)))), [ x266 t22], [])
(x264, Equp2AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 (false) (op_2 = op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 (false) (op_2 = op_3)))), [], [])
(x263, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 (false) (op_2 = op_3)))), [ x264 t21], [])
(x267, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [ x265 x263], [])
(x268, Equn1AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x269, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3)))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x267 x268], [])
(t23, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))), [ x262 x269], [])
(x137, Equp2AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x138, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((and  (not op_1) (op_2 = op_3)))), [ x137 t23], [])
(x139, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [], [])
(x140, Iten1AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) (op_0) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x141, Equn2AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x142, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) (op_0) (op_0)), [ x138 x139 x140 x141], [])
(x143, Equp1AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [], [])
(x144, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (and  (not op_1) (op_2 = op_3))))), [ x143 t23], [])
(x145, Equp1AST, (cl  ((not (op_0 = op_0))) (op_0) ((not op_0))), [], [])
(x146, ResoAST, (cl  (op_0) ((not op_0))), [ x145 t2], [])
(x147, Iten1AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_0) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x148, Itep1AST, (cl  ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0) ((and  (not op_1) (op_2 = op_3)))), [], [])
(x149, Equn1AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [], [])
(x150, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0)), [ x144 x147 x148 x149 x142 x146], [])
(x151, Equp2AST, (cl  ((not (op_0 = op_0))) ((not op_0)) (op_0)), [], [])
(x152, ResoAST, (cl  ((not op_0)) (op_0)), [ x151 t2], [])
(x153, ResoAST, (cl  ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0)), [ x152 x150], [])
(x154, Equp1AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x155, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (and  op_1 (op_2 = op_3))))), [ x154 t15], [])
(x156, Itep2AST, (cl  ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not op_0)) ((and  op_1 (op_2 = op_3)))), [], [])
(x157, Iten2AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_0)) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))))), [], [])
(x158, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x155 x156 x157 x141 x153 x150], [])
(x159, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x149 x158], [])
(x160, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x161, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x160 x158 x150], [])
(x162, Iten2AST, (cl  ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))) ((not op_0)) ((not (and  op_1 (op_2 = op_3))))), [], [])
(x163, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not (and  op_1 (op_2 = op_3))))), [ x162 x159 x153], [])
(x164, Equp2AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (and  op_1 (op_2 = op_3))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [], [])
(x165, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((and  op_1 (op_2 = op_3)))), [ x164 t15], [])
(t24, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x165 x161 x163], [])
(x270, Equn1AST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x271, Equn2AST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(t25, ResoAST, (cl  (((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x270 x271], [])
(x166, ImppAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x169, Equp2AST, (cl  ((not ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x168, ResoAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [ x169 t25], [])
(x167, Equp1AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [], [])
(x170, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x167 t24], [])
(x171, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))), [ x166 x168 x170], [])
(x172, Impn1AST, (cl  ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x173, Impn2AST, (cl  ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x174, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x171 x172 x173], [])
(x175, Equn1AST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x176, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x174 x175], [])
(x177, ImppAST, (cl  ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x180, Equp2AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3)))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(x179, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ x180 t24], [])
(x178, Equp1AST, (cl  ((not ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)) = (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x181, ResoAST, (cl  ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x178 t25], [])
(x182, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [ x177 x179 x181], [])
(x183, Impn1AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x184, Impn2AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x185, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x182 x183 x184], [])
(x186, Equn2AST, (cl  (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x187, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x185 x186], [])
(t26, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x187 x176], [])
(x188, Equp1AST, (cl  ((not ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x189, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x188 t26], [])
(x190, Equn1AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x191, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x189 x190], [])
(x192, Equp2AST, (cl  ((not ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x193, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x192 t26], [])
(x194, Equn2AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x195, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x193 x194], [])
(t27, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x191 x195], [])
(t28, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t1 t27 a0], [])
(x316, Impn2AST, (cl  ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(t29, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x316 t28], [])
(x317, AndnAST, (cl  ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [], [])
(t30, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ x317 t29], [])
(t32, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t34, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((not op_1))), [], [ 0])
(x318, Impn1AST, (cl  ((imp  (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [], [])
(t36, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))), [ x318 t28], [])
(x319, Itep1AST, (cl  ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) (op_0) ((and  op_1 (op_2 = op_3)))), [], [])
(t37, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) (op_0) ((and  op_1 (op_2 = op_3)))), [ x319 t36], [])
(t38, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t39, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((op_2 = op_3))), [], [ 1])
(t41, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) (op_1)), [], [ 0])
(t43, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t44, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not (and  op_1 (op_2 = op_3)))) ((not (and  op_1 (op_2 = op_3)))) ((not op_0))), [ t30 t38 t39 t41 t43], [])
(x320, Itep2AST, (cl  ((not (ite  op_0 (and  op_1 (op_2 = op_3)) (and  (not op_1) (op_2 = op_3))))) ((not op_0)) ((and  op_1 (op_2 = op_3)))), [], [])
(t46, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not op_0)) ((and  op_1 (op_2 = op_3)))), [ x320 t36], [])
(t48, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not op_0)) ((not op_0))), [ t44 t46], [])
(t50, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((and  (not op_1) (op_2 = op_3)))), [ t37 t48], [])
(t51, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((not op_1))), [ t34 t50], [])
(t52, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((imp  op_1 op_0))), [ t32 t51], [])
(t53, AndpAST, (cl  ((not (and  (not op_1) (op_2 = op_3)))) ((op_2 = op_3))), [], [ 1])
(t55, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((op_2 = op_3))), [ t53 t50], [])
(t56, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t58, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3))))) ((imp  op_0 op_1))), [ t56 t48], [])
(t59, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3)))))), [ t30 t52 t55 t58], [])
(x313, AndpAST, (cl  ((not (and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3)))))) ((and  (not op_1) (op_2 = op_3)))), [], [ 0])
(x312, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((and  (not op_1) (op_2 = op_3)))), [ t59 x313], [])
(x292, Iten1AST, (cl  ((ite  op_1 (false) (op_2 = op_3))) (op_1) ((not (op_2 = op_3)))), [], [])
(x293, AndpAST, (cl  ((and  (not op_1) (op_2 = op_3))) ((not op_1))), [], [ 0])
(x294, AndpAST, (cl  ((and  (not op_1) (op_2 = op_3))) ((op_2 = op_3))), [], [ 1])
(x295, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((ite  op_1 (false) (op_2 = op_3)))), [ x292 x293 x294 x312], [])
(x314, AndpAST, (cl  ((not (and  (and  (not op_1) (op_2 = op_3)) (not (ite  op_1 (false) (op_2 = op_3)))))) ((not (ite  op_1 (false) (op_2 = op_3))))), [], [ 1])
(x315, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3))))) ((not (ite  op_1 (false) (op_2 = op_3))))), [ t59 x314], [])
(x321, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3)))))), [ x295 x315], [])
(x323, AndpAST, (cl  ((not (and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3)))))) ((ite  op_1 (false) (op_2 = op_3)))), [], [ 0])
(x322, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((ite  op_1 (false) (op_2 = op_3)))), [ x321 x323], [])
(x286, AndnAST, (cl  ((and  (not op_1) (op_2 = op_3))) (op_1) ((not (op_2 = op_3)))), [], [])
(x287, Itep1AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) (op_1) ((op_2 = op_3))), [], [])
(x288, Itep2AST, (cl  ((not (ite  op_1 (false) (op_2 = op_3)))) ((not op_1)) ((false))), [], [])
(x289, FalsAST, (cl  ((not (false)))), [], [])
(x290, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((and  (not op_1) (op_2 = op_3)))), [ x286 x287 x288 x289 x322], [])
(x324, AndpAST, (cl  ((not (and  (ite  op_1 (false) (op_2 = op_3)) (not (and  (not op_1) (op_2 = op_3)))))) ((not (and  (not op_1) (op_2 = op_3))))), [], [ 1])
(x325, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false))))) ((not (and  (not op_1) (op_2 = op_3))))), [ x321 x324], [])
(x326, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false)))))), [ x290 x325], [])
(x328, AndpAST, (cl  ((not (and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false)))))) ((and  op_1 (op_2 = op_3)))), [], [ 0])
(x327, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((and  op_1 (op_2 = op_3)))), [ x326 x328], [])
(x279, Iten2AST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not op_1)) ((not (op_2 = op_3)))), [], [])
(x280, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) (op_1)), [], [ 0])
(x282, ResoAST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3)))) ((not (op_2 = op_3)))), [ x279 x280], [])
(x281, AndpAST, (cl  ((not (and  op_1 (op_2 = op_3)))) ((op_2 = op_3))), [], [ 1])
(x283, ResoAST, (cl  ((ite  op_1 (op_2 = op_3) (false))) ((not (and  op_1 (op_2 = op_3))))), [ x282 x281], [])
(x284, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((ite  op_1 (op_2 = op_3) (false)))), [ x283 x327], [])
(x329, AndpAST, (cl  ((not (and  (and  op_1 (op_2 = op_3)) (not (ite  op_1 (op_2 = op_3) (false)))))) ((not (ite  op_1 (op_2 = op_3) (false))))), [], [ 1])
(x330, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3))))) ((not (ite  op_1 (op_2 = op_3) (false))))), [ x326 x329], [])
(x331, ResoAST, (cl  ((and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3)))))), [ x284 x330], [])
(x333, AndpAST, (cl  ((not (and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3)))))) ((ite  op_1 (op_2 = op_3) (false)))), [], [ 0])
(x332, ResoAST, (cl  ((ite  op_1 (op_2 = op_3) (false)))), [ x331 x333], [])
(x273, AndnAST, (cl  ((and  op_1 (op_2 = op_3))) ((not op_1)) ((not (op_2 = op_3)))), [], [])
(x274, Itep2AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) ((not op_1)) ((op_2 = op_3))), [], [])
(x275, Itep1AST, (cl  ((not (ite  op_1 (op_2 = op_3) (false)))) (op_1) ((false))), [], [])
(x276, FalsAST, (cl  ((not (false)))), [], [])
(x277, ResoAST, (cl  ((and  op_1 (op_2 = op_3)))), [ x273 x274 x275 x276 x332], [])
(x334, AndpAST, (cl  ((not (and  (ite  op_1 (op_2 = op_3) (false)) (not (and  op_1 (op_2 = op_3)))))) ((not (and  op_1 (op_2 = op_3))))), [], [ 1])
(x335, ResoAST, (cl  ((not (and  op_1 (op_2 = op_3))))), [ x331 x334], [])
(x336, ResoAST, (cl ), [ x277 x335], [])

