Certif before preprocessing: 
(h1, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t2, BoolsimpAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [])
(t3, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t4, NotnotAST, (cl  ((not (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(t5, ThresoAST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t4 t3], [])
(t6, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ h1 t2 t5], [])
(t7, SumsimpAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [])
(t8, SumsimpAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [])
(t9, CongAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t7 t8], [])
(t10, CongAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))), [ t7], [])
(t11, CongAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t9 t10], [])
(t12, CongAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ t8], [])
(t13, CongAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t12], [])
(t14, CongAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ t11 t13], [])
(t15, CongAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ t14], [])
(t16, Equp2AST, (cl  ((not ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t17, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t6 t15 t16], [])
(t18, AndAST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t17], [])
(t19, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(t20, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t21, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(t22, Ite1AST, (cl  (op_0) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t18], [])
(t23, Itep1AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(t24, Itep2AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not op_1)) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t25, Ite2AST, (cl  ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ t18], [])
(t26, AndAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t17], [])
(t27, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t28, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t29, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t30, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t31, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t26], [])
(t32, LageAST, (cl  (((2 * op_2) <= (2 * op_3))) (((2 * op_3) <= (2 * op_2)))), [], [ 1 1])
(t33, LageAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 1 1])
(t34, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) <= (2 * op_3)))) (((2 * op_3) <= (2 * op_2)))), [], [])
(t35, SameAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) <= (2 * op_3)))) (((2 * op_3) <= (2 * op_2)))), [ t34], [])
(t36, ResoAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t35 t19 t20 t33 t32], [])
(t37, LadeAST, (cl  ((or  (op_2 = op_3) (not (op_2 <= op_3)) (not (op_3 <= op_2))))), [], [])
(t38, OrAST, (cl  ((op_2 = op_3)) ((not (op_2 <= op_3))) ((not (op_3 <= op_2)))), [ t37], [])
(t39, LageAST, (cl  ((not ((2 * op_3) <= (2 * op_2)))) ((op_3 <= op_2))), [], [ 1 2])
(t40, LageAST, (cl  ((not ((2 * op_2) <= (2 * op_3)))) ((op_2 <= op_3))), [], [ 1 2])
(t41, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t42, EqcoAST, (cl  ((not (1 = 1))) ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t43, EqreAST, (cl  ((1 = 1))), [], [])
(t44, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ t42 t43], [])
(t45, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) = (1 + (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3))))), [ t41 t44], [])
(t46, SameAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) = (1 + (2 * op_3))))), [ t45], [])
(t47, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) (op_1) ((not (imp  op_1 op_0))) ((not (op_2 <= op_3))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t46 t23 t25 t27 t31 t38 t39 t19 t36], [])
(t48, EqcoAST, (cl  ((not (2 = 2))) ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [], [])
(t49, EqreAST, (cl  ((2 = 2))), [], [])
(t50, ThresoAST, (cl  ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [ t48 t49], [])
(t51, LageAST, (cl  ((op_3 <= op_2)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 -1])
(t52, ResoAST, (cl  ((not (op_2 <= op_3))) (op_1) (((2 * op_2) = (1 + (2 * op_3)))) ((not (imp  op_1 op_0)))), [ t51 t38 t50 t23 t25 t22 t21 t47], [])
(t53, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 1])
(t54, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2)))) (((2 * op_2) <= (2 * op_3)))), [], [])
(t55, SameAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2)))) (((2 * op_2) <= (2 * op_3)))), [ t54], [])
(t56, ResoAST, (cl  (op_1) ((op_2 <= op_3))), [ t55 t19 t22 t25 t23 t53 t32 t40], [])
(t57, LageAST, (cl  ((not (op_2 <= op_3))) ((not ((1 + (2 * op_3)) <= (2 * op_2))))), [], [ 2 1])
(t58, EqcpAST, (cl  ((not ((2 * op_3) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2))))), [], [])
(t59, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3))))), [], [])
(t60, ThresoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [ t59 t50], [])
(t61, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t58 t60], [])
(t62, EqreAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t63, ThresoAST, (cl  (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t61 t62], [])
(t64, ResoAST, (cl  (op_1)), [ t57 t63 t38 t39 t33 t52 t56 t29], [])
(t65, ResoAST, (cl  ((imp  op_0 op_1))), [ t28 t64], [])
(t66, ResoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_3))))), [ t63 t38 t57 t40 t55 t39 t33], [])
(t67, ResoAST, (cl  ((op_2 = op_3)) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2))))), [ t40 t38 t55 t39], [])
(t68, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3))))), [ t35 t32 t67 t31 t30 t22 t20 t66 t65 t64], [])
(t69, ResoAST, (cl  ((not (op_2 = op_3)))), [ t50 t68], [])
(t70, LageAST, (cl  ((op_3 <= op_2)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 1])
(t71, ResoAST, (cl  (((2 * op_3) <= (2 * op_2)))), [ t70 t24 t25 t38 t22 t40 t36 t32 t64 t69], [])
(t72, ResoAST, (cl  ((op_3 <= op_2))), [ t39 t71], [])
(t73, ResoAST, (cl  ((not (op_2 <= op_3)))), [ t38 t72 t69], [])
(t74, LageAST, (cl  ((op_2 <= op_3)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t75, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t74 t73], [])
(t76, ResoAST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t24 t75 t64], [])
(t77, ResoAST, (cl  ((not op_0))), [ t25 t76], [])
(t78, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t22 t77], [])
(t79, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3))))), [ t20 t78 t64], [])
(t80, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t81, ResoAST, (cl ), [ t80 t79 t73], [])

Certif after storing shared terms: 
(h1, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t2, BoolsimpAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [])
(t3, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t4, NotnotAST, (cl  ((not (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(t5, ThresoAST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t4 t3], [])
(t6, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ h1 t2 t5], [])
(t7, SumsimpAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [])
(t8, SumsimpAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [])
(t9, CongAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t7 t8], [])
(t10, CongAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))), [ t7], [])
(t11, CongAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t9 t10], [])
(t12, CongAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ t8], [])
(t13, CongAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t12], [])
(t14, CongAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ t11 t13], [])
(t15, CongAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ t14], [])
(t16, Equp2AST, (cl  ((not ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t17, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t6 t15 t16], [])
(t18, AndAST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t17], [])
(t19, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(t20, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t21, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(t22, Ite1AST, (cl  (op_0) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t18], [])
(t23, Itep1AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(t24, Itep2AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not op_1)) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t25, Ite2AST, (cl  ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ t18], [])
(t26, AndAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t17], [])
(t27, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t28, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t29, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t30, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t31, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t26], [])
(t32, LageAST, (cl  (((2 * op_2) <= (2 * op_3))) (((2 * op_3) <= (2 * op_2)))), [], [ 1 1])
(t33, LageAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 1 1])
(t34, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) <= (2 * op_3)))) (((2 * op_3) <= (2 * op_2)))), [], [])
(t35, SameAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) <= (2 * op_3)))) (((2 * op_3) <= (2 * op_2)))), [ t34], [])
(t36, ResoAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t35 t19 t20 t33 t32], [])
(t37, LadeAST, (cl  ((or  (op_2 = op_3) (not (op_2 <= op_3)) (not (op_3 <= op_2))))), [], [])
(t38, OrAST, (cl  ((op_2 = op_3)) ((not (op_2 <= op_3))) ((not (op_3 <= op_2)))), [ t37], [])
(t39, LageAST, (cl  ((not ((2 * op_3) <= (2 * op_2)))) ((op_3 <= op_2))), [], [ 1 2])
(t40, LageAST, (cl  ((not ((2 * op_2) <= (2 * op_3)))) ((op_2 <= op_3))), [], [ 1 2])
(t41, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t42, EqcoAST, (cl  ((not (1 = 1))) ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t43, EqreAST, (cl  ((1 = 1))), [], [])
(t44, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ t42 t43], [])
(t45, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) = (1 + (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3))))), [ t41 t44], [])
(t46, SameAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) = (1 + (2 * op_3))))), [ t45], [])
(t47, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) (op_1) ((not (imp  op_1 op_0))) ((not (op_2 <= op_3))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t46 t23 t25 t27 t31 t38 t39 t19 t36], [])
(t48, EqcoAST, (cl  ((not (2 = 2))) ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [], [])
(t49, EqreAST, (cl  ((2 = 2))), [], [])
(t50, ThresoAST, (cl  ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [ t48 t49], [])
(t51, LageAST, (cl  ((op_3 <= op_2)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 -1])
(t52, ResoAST, (cl  ((not (op_2 <= op_3))) (op_1) (((2 * op_2) = (1 + (2 * op_3)))) ((not (imp  op_1 op_0)))), [ t51 t38 t50 t23 t25 t22 t21 t47], [])
(t53, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 1])
(t54, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2)))) (((2 * op_2) <= (2 * op_3)))), [], [])
(t55, SameAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2)))) (((2 * op_2) <= (2 * op_3)))), [ t54], [])
(t56, ResoAST, (cl  (op_1) ((op_2 <= op_3))), [ t55 t19 t22 t25 t23 t53 t32 t40], [])
(t57, LageAST, (cl  ((not (op_2 <= op_3))) ((not ((1 + (2 * op_3)) <= (2 * op_2))))), [], [ 2 1])
(t58, EqcpAST, (cl  ((not ((2 * op_3) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2))))), [], [])
(t59, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3))))), [], [])
(t60, ThresoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [ t59 t50], [])
(t61, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t58 t60], [])
(t62, EqreAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t63, ThresoAST, (cl  (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t61 t62], [])
(t64, ResoAST, (cl  (op_1)), [ t57 t63 t38 t39 t33 t52 t56 t29], [])
(t65, ResoAST, (cl  ((imp  op_0 op_1))), [ t28 t64], [])
(t66, ResoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_3))))), [ t63 t38 t57 t40 t55 t39 t33], [])
(t67, ResoAST, (cl  ((op_2 = op_3)) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2))))), [ t40 t38 t55 t39], [])
(t68, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3))))), [ t35 t32 t67 t31 t30 t22 t20 t66 t65 t64], [])
(t69, ResoAST, (cl  ((not (op_2 = op_3)))), [ t50 t68], [])
(t70, LageAST, (cl  ((op_3 <= op_2)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 1])
(t71, ResoAST, (cl  (((2 * op_3) <= (2 * op_2)))), [ t70 t24 t25 t38 t22 t40 t36 t32 t64 t69], [])
(t72, ResoAST, (cl  ((op_3 <= op_2))), [ t39 t71], [])
(t73, ResoAST, (cl  ((not (op_2 <= op_3)))), [ t38 t72 t69], [])
(t74, LageAST, (cl  ((op_2 <= op_3)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t75, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t74 t73], [])
(t76, ResoAST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t24 t75 t64], [])
(t77, ResoAST, (cl  ((not op_0))), [ t25 t76], [])
(t78, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t22 t77], [])
(t79, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3))))), [ t20 t78 t64], [])
(t80, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t81, ResoAST, (cl ), [ t80 t79 t73], [])

Certif after process_fins: 
(h1, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t2, BoolsimpAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [])
(t3, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t4, NotnotAST, (cl  ((not (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(t5, ThresoAST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t4 t3], [])
(t6, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ h1 t2 t5], [])
(t7, SumsimpAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [])
(t8, SumsimpAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [])
(t9, CongAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t7 t8], [])
(t10, CongAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))), [ t7], [])
(t11, CongAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t9 t10], [])
(t12, CongAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ t8], [])
(t13, CongAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t12], [])
(t14, CongAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ t11 t13], [])
(t15, CongAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ t14], [])
(t16, Equp2AST, (cl  ((not ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t17, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t6 t15 t16], [])
(t18, AndAST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t17], [])
(t19, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(t20, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t21, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(t22, Ite1AST, (cl  (op_0) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t18], [])
(t23, Itep1AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(t24, Itep2AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not op_1)) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t25, Ite2AST, (cl  ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ t18], [])
(t26, AndAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t17], [])
(t27, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t28, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t29, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t30, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t31, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t26], [])
(t32, LageAST, (cl  (((2 * op_2) <= (2 * op_3))) (((2 * op_3) <= (2 * op_2)))), [], [ 1 1])
(t33, LageAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 1 1])
(t34, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) <= (2 * op_3)))) (((2 * op_3) <= (2 * op_2)))), [], [])
(t35, SameAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) <= (2 * op_3)))) (((2 * op_3) <= (2 * op_2)))), [ t34], [])
(t36, ResoAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t35 t19 t20 t33 t32], [])
(t37, LadeAST, (cl  ((or  (op_2 = op_3) (not (op_2 <= op_3)) (not (op_3 <= op_2))))), [], [])
(t38, OrAST, (cl  ((op_2 = op_3)) ((not (op_2 <= op_3))) ((not (op_3 <= op_2)))), [ t37], [])
(t39, LageAST, (cl  ((not ((2 * op_3) <= (2 * op_2)))) ((op_3 <= op_2))), [], [ 1 2])
(t40, LageAST, (cl  ((not ((2 * op_2) <= (2 * op_3)))) ((op_2 <= op_3))), [], [ 1 2])
(t41, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t42, EqcoAST, (cl  ((not (1 = 1))) ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t43, EqreAST, (cl  ((1 = 1))), [], [])
(t44, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ t42 t43], [])
(t45, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) = (1 + (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3))))), [ t41 t44], [])
(t46, SameAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) = (1 + (2 * op_3))))), [ t45], [])
(t47, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) (op_1) ((not (imp  op_1 op_0))) ((not (op_2 <= op_3))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t46 t23 t25 t27 t31 t38 t39 t19 t36], [])
(t48, EqcoAST, (cl  ((not (2 = 2))) ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [], [])
(t49, EqreAST, (cl  ((2 = 2))), [], [])
(t50, ThresoAST, (cl  ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [ t48 t49], [])
(t51, LageAST, (cl  ((op_3 <= op_2)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 -1])
(t52, ResoAST, (cl  ((not (op_2 <= op_3))) (op_1) (((2 * op_2) = (1 + (2 * op_3)))) ((not (imp  op_1 op_0)))), [ t51 t38 t50 t23 t25 t22 t21 t47], [])
(t53, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 1])
(t54, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2)))) (((2 * op_2) <= (2 * op_3)))), [], [])
(t55, SameAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2)))) (((2 * op_2) <= (2 * op_3)))), [ t54], [])
(t56, ResoAST, (cl  (op_1) ((op_2 <= op_3))), [ t55 t19 t22 t25 t23 t53 t32 t40], [])
(t57, LageAST, (cl  ((not (op_2 <= op_3))) ((not ((1 + (2 * op_3)) <= (2 * op_2))))), [], [ 2 1])
(t58, EqcpAST, (cl  ((not ((2 * op_3) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2))))), [], [])
(t59, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3))))), [], [])
(t60, ThresoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [ t59 t50], [])
(t61, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t58 t60], [])
(t62, EqreAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t63, ThresoAST, (cl  (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t61 t62], [])
(t64, ResoAST, (cl  (op_1)), [ t57 t63 t38 t39 t33 t52 t56 t29], [])
(t65, ResoAST, (cl  ((imp  op_0 op_1))), [ t28 t64], [])
(t66, ResoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_3))))), [ t63 t38 t57 t40 t55 t39 t33], [])
(t67, ResoAST, (cl  ((op_2 = op_3)) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2))))), [ t40 t38 t55 t39], [])
(t68, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3))))), [ t35 t32 t67 t31 t30 t22 t20 t66 t65 t64], [])
(t69, ResoAST, (cl  ((not (op_2 = op_3)))), [ t50 t68], [])
(t70, LageAST, (cl  ((op_3 <= op_2)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 1])
(t71, ResoAST, (cl  (((2 * op_3) <= (2 * op_2)))), [ t70 t24 t25 t38 t22 t40 t36 t32 t64 t69], [])
(t72, ResoAST, (cl  ((op_3 <= op_2))), [ t39 t71], [])
(t73, ResoAST, (cl  ((not (op_2 <= op_3)))), [ t38 t72 t69], [])
(t74, LageAST, (cl  ((op_2 <= op_3)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t75, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t74 t73], [])
(t76, ResoAST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t24 t75 t64], [])
(t77, ResoAST, (cl  ((not op_0))), [ t25 t76], [])
(t78, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t22 t77], [])
(t79, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3))))), [ t20 t78 t64], [])
(t80, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t81, ResoAST, (cl ), [ t80 t79 t73], [])

Certif after process_hole: 
(h1, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t2, BoolsimpAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [])
(t3, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t4, NotnotAST, (cl  ((not (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(t5, ThresoAST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t4 t3], [])
(t6, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ h1 t2 t5], [])
(t7, SumsimpAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [])
(t8, SumsimpAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [])
(t9, CongAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t7 t8], [])
(t10, CongAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))), [ t7], [])
(t11, CongAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t9 t10], [])
(t12, CongAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ t8], [])
(t13, CongAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t12], [])
(t14, CongAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ t11 t13], [])
(t15, CongAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ t14], [])
(t16, Equp2AST, (cl  ((not ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t17, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t6 t15 t16], [])
(t18, AndAST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t17], [])
(t19, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(t20, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t21, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(t22, Ite1AST, (cl  (op_0) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t18], [])
(t23, Itep1AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(t24, Itep2AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not op_1)) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t25, Ite2AST, (cl  ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ t18], [])
(t26, AndAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t17], [])
(t27, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t28, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t29, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t30, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t31, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t26], [])
(t32, LageAST, (cl  (((2 * op_2) <= (2 * op_3))) (((2 * op_3) <= (2 * op_2)))), [], [ 1 1])
(t33, LageAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 1 1])
(t34, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) <= (2 * op_3)))) (((2 * op_3) <= (2 * op_2)))), [], [])
(t35, SameAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) <= (2 * op_3)))) (((2 * op_3) <= (2 * op_2)))), [ t34], [])
(t36, ResoAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t35 t19 t20 t33 t32], [])
(t37, LadeAST, (cl  ((or  (op_2 = op_3) (not (op_2 <= op_3)) (not (op_3 <= op_2))))), [], [])
(t38, OrAST, (cl  ((op_2 = op_3)) ((not (op_2 <= op_3))) ((not (op_3 <= op_2)))), [ t37], [])
(t39, LageAST, (cl  ((not ((2 * op_3) <= (2 * op_2)))) ((op_3 <= op_2))), [], [ 1 2])
(t40, LageAST, (cl  ((not ((2 * op_2) <= (2 * op_3)))) ((op_2 <= op_3))), [], [ 1 2])
(t41, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t42, EqcoAST, (cl  ((not (1 = 1))) ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t43, EqreAST, (cl  ((1 = 1))), [], [])
(t44, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ t42 t43], [])
(t45, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) = (1 + (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3))))), [ t41 t44], [])
(t46, SameAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) = (1 + (2 * op_3))))), [ t45], [])
(t47, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) (op_1) ((not (imp  op_1 op_0))) ((not (op_2 <= op_3))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t46 t23 t25 t27 t31 t38 t39 t19 t36], [])
(t48, EqcoAST, (cl  ((not (2 = 2))) ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [], [])
(t49, EqreAST, (cl  ((2 = 2))), [], [])
(t50, ThresoAST, (cl  ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [ t48 t49], [])
(t51, LageAST, (cl  ((op_3 <= op_2)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 -1])
(t52, ResoAST, (cl  ((not (op_2 <= op_3))) (op_1) (((2 * op_2) = (1 + (2 * op_3)))) ((not (imp  op_1 op_0)))), [ t51 t38 t50 t23 t25 t22 t21 t47], [])
(t53, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 1])
(t54, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2)))) (((2 * op_2) <= (2 * op_3)))), [], [])
(t55, SameAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2)))) (((2 * op_2) <= (2 * op_3)))), [ t54], [])
(t56, ResoAST, (cl  (op_1) ((op_2 <= op_3))), [ t55 t19 t22 t25 t23 t53 t32 t40], [])
(t57, LageAST, (cl  ((not (op_2 <= op_3))) ((not ((1 + (2 * op_3)) <= (2 * op_2))))), [], [ 2 1])
(t58, EqcpAST, (cl  ((not ((2 * op_3) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2))))), [], [])
(t59, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3))))), [], [])
(t60, ThresoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [ t59 t50], [])
(t61, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t58 t60], [])
(t62, EqreAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t63, ThresoAST, (cl  (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t61 t62], [])
(t64, ResoAST, (cl  (op_1)), [ t57 t63 t38 t39 t33 t52 t56 t29], [])
(t65, ResoAST, (cl  ((imp  op_0 op_1))), [ t28 t64], [])
(t66, ResoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_3))))), [ t63 t38 t57 t40 t55 t39 t33], [])
(t67, ResoAST, (cl  ((op_2 = op_3)) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2))))), [ t40 t38 t55 t39], [])
(t68, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3))))), [ t35 t32 t67 t31 t30 t22 t20 t66 t65 t64], [])
(t69, ResoAST, (cl  ((not (op_2 = op_3)))), [ t50 t68], [])
(t70, LageAST, (cl  ((op_3 <= op_2)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 1])
(t71, ResoAST, (cl  (((2 * op_3) <= (2 * op_2)))), [ t70 t24 t25 t38 t22 t40 t36 t32 t64 t69], [])
(t72, ResoAST, (cl  ((op_3 <= op_2))), [ t39 t71], [])
(t73, ResoAST, (cl  ((not (op_2 <= op_3)))), [ t38 t72 t69], [])
(t74, LageAST, (cl  ((op_2 <= op_3)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t75, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t74 t73], [])
(t76, ResoAST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t24 t75 t64], [])
(t77, ResoAST, (cl  ((not op_0))), [ t25 t76], [])
(t78, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t22 t77], [])
(t79, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3))))), [ t20 t78 t64], [])
(t80, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t81, ResoAST, (cl ), [ t80 t79 t73], [])

Certif after process_notnot: 
(h1, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t2, BoolsimpAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [])
(t3, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t5, ThresoAST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t3], [])
(t6, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ h1 t2 t5], [])
(t7, SumsimpAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [])
(t8, SumsimpAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [])
(t9, CongAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t7 t8], [])
(t10, CongAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))), [ t7], [])
(t11, CongAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t9 t10], [])
(t12, CongAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ t8], [])
(t13, CongAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t12], [])
(t14, CongAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ t11 t13], [])
(t15, CongAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ t14], [])
(t16, Equp2AST, (cl  ((not ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t17, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t6 t15 t16], [])
(t18, AndAST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t17], [])
(t19, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(t20, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t21, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(t22, Ite1AST, (cl  (op_0) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t18], [])
(t23, Itep1AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(t24, Itep2AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not op_1)) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t25, Ite2AST, (cl  ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ t18], [])
(t26, AndAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t17], [])
(t27, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t28, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t29, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t30, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t31, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t26], [])
(t32, LageAST, (cl  (((2 * op_2) <= (2 * op_3))) (((2 * op_3) <= (2 * op_2)))), [], [ 1 1])
(t33, LageAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 1 1])
(t34, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) <= (2 * op_3)))) (((2 * op_3) <= (2 * op_2)))), [], [])
(t35, SameAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) <= (2 * op_3)))) (((2 * op_3) <= (2 * op_2)))), [ t34], [])
(t36, ResoAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t35 t19 t20 t33 t32], [])
(t37, LadeAST, (cl  ((or  (op_2 = op_3) (not (op_2 <= op_3)) (not (op_3 <= op_2))))), [], [])
(t38, OrAST, (cl  ((op_2 = op_3)) ((not (op_2 <= op_3))) ((not (op_3 <= op_2)))), [ t37], [])
(t39, LageAST, (cl  ((not ((2 * op_3) <= (2 * op_2)))) ((op_3 <= op_2))), [], [ 1 2])
(t40, LageAST, (cl  ((not ((2 * op_2) <= (2 * op_3)))) ((op_2 <= op_3))), [], [ 1 2])
(t41, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t42, EqcoAST, (cl  ((not (1 = 1))) ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t43, EqreAST, (cl  ((1 = 1))), [], [])
(t44, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ t42 t43], [])
(t45, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) = (1 + (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3))))), [ t41 t44], [])
(t46, SameAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) = (1 + (2 * op_3))))), [ t45], [])
(t47, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) (op_1) ((not (imp  op_1 op_0))) ((not (op_2 <= op_3))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t46 t23 t25 t27 t31 t38 t39 t19 t36], [])
(t48, EqcoAST, (cl  ((not (2 = 2))) ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [], [])
(t49, EqreAST, (cl  ((2 = 2))), [], [])
(t50, ThresoAST, (cl  ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [ t48 t49], [])
(t51, LageAST, (cl  ((op_3 <= op_2)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 -1])
(t52, ResoAST, (cl  ((not (op_2 <= op_3))) (op_1) (((2 * op_2) = (1 + (2 * op_3)))) ((not (imp  op_1 op_0)))), [ t51 t38 t50 t23 t25 t22 t21 t47], [])
(t53, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 1])
(t54, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2)))) (((2 * op_2) <= (2 * op_3)))), [], [])
(t55, SameAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2)))) (((2 * op_2) <= (2 * op_3)))), [ t54], [])
(t56, ResoAST, (cl  (op_1) ((op_2 <= op_3))), [ t55 t19 t22 t25 t23 t53 t32 t40], [])
(t57, LageAST, (cl  ((not (op_2 <= op_3))) ((not ((1 + (2 * op_3)) <= (2 * op_2))))), [], [ 2 1])
(t58, EqcpAST, (cl  ((not ((2 * op_3) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2))))), [], [])
(t59, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3))))), [], [])
(t60, ThresoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [ t59 t50], [])
(t61, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t58 t60], [])
(t62, EqreAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t63, ThresoAST, (cl  (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t61 t62], [])
(t64, ResoAST, (cl  (op_1)), [ t57 t63 t38 t39 t33 t52 t56 t29], [])
(t65, ResoAST, (cl  ((imp  op_0 op_1))), [ t28 t64], [])
(t66, ResoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_3))))), [ t63 t38 t57 t40 t55 t39 t33], [])
(t67, ResoAST, (cl  ((op_2 = op_3)) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2))))), [ t40 t38 t55 t39], [])
(t68, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3))))), [ t35 t32 t67 t31 t30 t22 t20 t66 t65 t64], [])
(t69, ResoAST, (cl  ((not (op_2 = op_3)))), [ t50 t68], [])
(t70, LageAST, (cl  ((op_3 <= op_2)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 1])
(t71, ResoAST, (cl  (((2 * op_3) <= (2 * op_2)))), [ t70 t24 t25 t38 t22 t40 t36 t32 t64 t69], [])
(t72, ResoAST, (cl  ((op_3 <= op_2))), [ t39 t71], [])
(t73, ResoAST, (cl  ((not (op_2 <= op_3)))), [ t38 t72 t69], [])
(t74, LageAST, (cl  ((op_2 <= op_3)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t75, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t74 t73], [])
(t76, ResoAST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t24 t75 t64], [])
(t77, ResoAST, (cl  ((not op_0))), [ t25 t76], [])
(t78, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t22 t77], [])
(t79, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3))))), [ t20 t78 t64], [])
(t80, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t81, ResoAST, (cl ), [ t80 t79 t73], [])

Certif after process_same: 
(h1, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t2, BoolsimpAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [])
(t3, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t5, ThresoAST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t3], [])
(t6, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ h1 t2 t5], [])
(t7, SumsimpAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [])
(t8, SumsimpAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [])
(t9, CongAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t7 t8], [])
(t10, CongAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))), [ t7], [])
(t11, CongAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t9 t10], [])
(t12, CongAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ t8], [])
(t13, CongAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t12], [])
(t14, CongAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ t11 t13], [])
(t15, CongAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ t14], [])
(t16, Equp2AST, (cl  ((not ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t17, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t6 t15 t16], [])
(t18, AndAST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t17], [])
(t19, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(t20, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t21, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(t22, Ite1AST, (cl  (op_0) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t18], [])
(t23, Itep1AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(t24, Itep2AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not op_1)) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t25, Ite2AST, (cl  ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ t18], [])
(t26, AndAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t17], [])
(t27, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t28, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t29, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t30, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t31, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t26], [])
(t32, LageAST, (cl  (((2 * op_2) <= (2 * op_3))) (((2 * op_3) <= (2 * op_2)))), [], [ 1 1])
(t33, LageAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 1 1])
(t34, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) <= (2 * op_3)))) (((2 * op_3) <= (2 * op_2)))), [], [])
(t36, ResoAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t34 t19 t20 t33 t32], [])
(t37, LadeAST, (cl  ((or  (op_2 = op_3) (not (op_2 <= op_3)) (not (op_3 <= op_2))))), [], [])
(t38, OrAST, (cl  ((op_2 = op_3)) ((not (op_2 <= op_3))) ((not (op_3 <= op_2)))), [ t37], [])
(t39, LageAST, (cl  ((not ((2 * op_3) <= (2 * op_2)))) ((op_3 <= op_2))), [], [ 1 2])
(t40, LageAST, (cl  ((not ((2 * op_2) <= (2 * op_3)))) ((op_2 <= op_3))), [], [ 1 2])
(t41, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t42, EqcoAST, (cl  ((not (1 = 1))) ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t43, EqreAST, (cl  ((1 = 1))), [], [])
(t44, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ t42 t43], [])
(t45, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) = (1 + (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3))))), [ t41 t44], [])
(t47, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) (op_1) ((not (imp  op_1 op_0))) ((not (op_2 <= op_3))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t45 t23 t25 t27 t31 t38 t39 t19 t36], [])
(t48, EqcoAST, (cl  ((not (2 = 2))) ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [], [])
(t49, EqreAST, (cl  ((2 = 2))), [], [])
(t50, ThresoAST, (cl  ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [ t48 t49], [])
(t51, LageAST, (cl  ((op_3 <= op_2)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 -1])
(t52, ResoAST, (cl  ((not (op_2 <= op_3))) (op_1) (((2 * op_2) = (1 + (2 * op_3)))) ((not (imp  op_1 op_0)))), [ t51 t38 t50 t23 t25 t22 t21 t47], [])
(t53, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 1])
(t54, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2)))) (((2 * op_2) <= (2 * op_3)))), [], [])
(t56, ResoAST, (cl  (op_1) ((op_2 <= op_3))), [ t54 t19 t22 t25 t23 t53 t32 t40], [])
(t57, LageAST, (cl  ((not (op_2 <= op_3))) ((not ((1 + (2 * op_3)) <= (2 * op_2))))), [], [ 2 1])
(t58, EqcpAST, (cl  ((not ((2 * op_3) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2))))), [], [])
(t59, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3))))), [], [])
(t60, ThresoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [ t59 t50], [])
(t61, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t58 t60], [])
(t62, EqreAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t63, ThresoAST, (cl  (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t61 t62], [])
(t64, ResoAST, (cl  (op_1)), [ t57 t63 t38 t39 t33 t52 t56 t29], [])
(t65, ResoAST, (cl  ((imp  op_0 op_1))), [ t28 t64], [])
(t66, ResoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_3))))), [ t63 t38 t57 t40 t54 t39 t33], [])
(t67, ResoAST, (cl  ((op_2 = op_3)) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2))))), [ t40 t38 t54 t39], [])
(t68, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3))))), [ t34 t32 t67 t31 t30 t22 t20 t66 t65 t64], [])
(t69, ResoAST, (cl  ((not (op_2 = op_3)))), [ t50 t68], [])
(t70, LageAST, (cl  ((op_3 <= op_2)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 1])
(t71, ResoAST, (cl  (((2 * op_3) <= (2 * op_2)))), [ t70 t24 t25 t38 t22 t40 t36 t32 t64 t69], [])
(t72, ResoAST, (cl  ((op_3 <= op_2))), [ t39 t71], [])
(t73, ResoAST, (cl  ((not (op_2 <= op_3)))), [ t38 t72 t69], [])
(t74, LageAST, (cl  ((op_2 <= op_3)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t75, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t74 t73], [])
(t76, ResoAST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t24 t75 t64], [])
(t77, ResoAST, (cl  ((not op_0))), [ t25 t76], [])
(t78, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t22 t77], [])
(t79, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3))))), [ t20 t78 t64], [])
(t80, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t81, ResoAST, (cl ), [ t80 t79 t73], [])

Certif after process_cong: 
(h1, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t2, BoolsimpAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [])
(t3, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t5, ThresoAST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t3], [])
(t6, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ h1 t2 t5], [])
(t7, SumsimpAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [])
(t8, SumsimpAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [])
(x1, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x2, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t8 x1], [])
(x3, Equp1AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((2 * op_2) + 1)) ((not ((2 * op_3) + 1)))), [], [])
(x4, Equn2AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((1 + (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x5, Equn2AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x6, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((1 + (2 * op_2)) = (1 + (2 * op_3)))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x2 x3 x4 x5], [])
(x7, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x8, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t8 x7], [])
(x9, Equn2AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((2 * op_2) + 1)) (((2 * op_3) + 1))), [], [])
(x10, Equp1AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x11, Equn1AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x12, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x8 x9 x10 x11], [])
(x13, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [], [])
(x14, ResoAST, (cl  (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [ t7 x13], [])
(x15, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1))), [ x6 x12 x14], [])
(x16, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [], [])
(x17, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [ t7 x16], [])
(x18, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2)))), [ x15 x17], [])
(x19, Equn1AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (1 + (2 * op_2)))) ((not (1 + (2 * op_3))))), [], [])
(x20, Equn1AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((2 * op_2) + 1))) ((not ((2 * op_3) + 1)))), [], [])
(x21, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x11 x19 x20 x8 x18 x15], [])
(x22, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x21 x2], [])
(x23, Equp2AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((2 * op_2) + 1))) (((2 * op_3) + 1))), [], [])
(x24, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [ x23 x21 x15], [])
(x25, Equp2AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_2)))) ((1 + (2 * op_3)))), [], [])
(x26, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x25 x22 x18], [])
(t9, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x5 x24 x26], [])
(x30, Equp1AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((2 * op_3)) ((not (1 + (2 * op_2))))), [], [])
(x31, ResoAST, (cl  ((2 * op_3)) ((not (1 + (2 * op_2))))), [ t7 x30], [])
(x32, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_2) + 1)) ((not (2 * op_3)))), [], [])
(x33, Equn2AST, (cl  (((2 * op_3) = (1 + (2 * op_2)))) ((2 * op_3)) ((1 + (2 * op_2)))), [], [])
(x34, Equn2AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((((2 * op_2) + 1) = (2 * op_3))) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(x35, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_3) = (1 + (2 * op_2)))) (((2 * op_2) + 1)) ((2 * op_3))), [ x31 x32 x33 x34], [])
(x36, Equp2AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not (2 * op_3))) ((1 + (2 * op_2)))), [], [])
(x37, ResoAST, (cl  ((not (2 * op_3))) ((1 + (2 * op_2)))), [ t7 x36], [])
(x38, Equn2AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) (((2 * op_2) + 1)) ((2 * op_3))), [], [])
(x39, Equp1AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((2 * op_3)) ((not (1 + (2 * op_2))))), [], [])
(x40, Equn1AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x41, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((2 * op_3))), [ x37 x38 x39 x40], [])
(x42, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_2) + 1)) ((not (2 * op_3)))), [], [])
(x43, ResoAST, (cl  (((2 * op_2) + 1)) ((not (2 * op_3)))), [ x27 x42], [])
(x44, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) + 1))), [ x35 x41 x43], [])
(x45, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_2) + 1))) ((2 * op_3))), [], [])
(x46, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((2 * op_3))), [ x27 x45], [])
(x47, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((2 * op_3))), [ x44 x46], [])
(x48, Equn1AST, (cl  (((2 * op_3) = (1 + (2 * op_2)))) ((not (2 * op_3))) ((not (1 + (2 * op_2))))), [], [])
(x49, Equn1AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_2) + 1))) ((not (2 * op_3)))), [], [])
(x50, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (2 * op_3)))), [ x40 x48 x49 x37 x47 x44], [])
(x51, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (1 + (2 * op_2))))), [ x50 x31], [])
(x52, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_2) + 1))) ((2 * op_3))), [], [])
(x53, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (((2 * op_2) + 1) = (2 * op_3))))), [ x52 x50 x44], [])
(x54, Equp2AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not (2 * op_3))) ((1 + (2 * op_2)))), [], [])
(x55, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [ x54 x51 x47], [])
(t10, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))), [ x34 x53 x55], [])
(x59, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))) ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(x60, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_3) = (1 + (2 * op_2))))), [ x59 t10], [])
(x61, Itep1AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) (op_1) ((((2 * op_2) + 1) = (2 * op_3)))), [], [])
(x62, Iten1AST, (cl  ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))) (op_1) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x63, Equn2AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x64, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))) (op_1) (op_1)), [ x60 x61 x62 x63], [])
(x65, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))) ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x66, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [ x65 t10], [])
(x67, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x68, ResoAST, (cl  (op_1) ((not op_1))), [ x67 x56], [])
(x69, Iten1AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) (op_1) ((not (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x70, Itep1AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(x71, Equn1AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [], [])
(x72, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1)), [ x66 x69 x70 x71 x64 x68], [])
(x73, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x74, ResoAST, (cl  ((not op_1)) (op_1)), [ x73 x56], [])
(x75, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1)), [ x74 x72], [])
(x76, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x77, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x76 t9], [])
(x78, Itep2AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not op_1)) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x79, Iten2AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not op_1)) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [], [])
(x80, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x77 x78 x79 x63 x75 x72], [])
(x81, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x71 x80], [])
(x82, Itep2AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not op_1)) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [], [])
(x83, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [ x82 x80 x72], [])
(x84, Iten2AST, (cl  ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))) ((not op_1)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x85, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x84 x81 x75], [])
(x86, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x87, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ x86 t9], [])
(t11, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x87 x83 x85], [])
(x91, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x92, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t8 x91], [])
(x93, Equp1AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((2 * op_2)) ((not ((2 * op_3) + 1)))), [], [])
(x94, Equn2AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((1 + (2 * op_3)))), [], [])
(x95, Equn2AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x96, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((2 * op_2))), [ x92 x93 x94 x95], [])
(x97, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x98, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t8 x97], [])
(x99, Equn2AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((2 * op_2)) (((2 * op_3) + 1))), [], [])
(x100, Equp1AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((not (1 + (2 * op_3))))), [], [])
(x101, Equn1AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x102, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((2 * op_2))), [ x98 x99 x100 x101], [])
(x103, Equp1AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((2 * op_2)) ((not (2 * op_2)))), [], [])
(x104, ResoAST, (cl  ((2 * op_2)) ((not (2 * op_2)))), [ x88 x103], [])
(x105, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x96 x102 x104], [])
(x106, Equp2AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((not (2 * op_2))) ((2 * op_2))), [], [])
(x107, ResoAST, (cl  ((not (2 * op_2))) ((2 * op_2))), [ x88 x106], [])
(x108, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x105 x107], [])
(x109, Equn1AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((not (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x110, Equn1AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (2 * op_2))) ((not ((2 * op_3) + 1)))), [], [])
(x111, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x101 x109 x110 x98 x108 x105], [])
(x112, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x111 x92], [])
(x113, Equp2AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not (2 * op_2))) (((2 * op_3) + 1))), [], [])
(x114, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [ x113 x111 x105], [])
(x115, Equp2AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x116, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x115 x112 x108], [])
(t12, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ x95 x114 x116], [])
(x123, Equp2AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = ((2 * op_2) = (2 * op_3))))) ((not ((2 * op_2) = (2 * op_3)))) (((2 * op_2) = (2 * op_3)))), [], [])
(x124, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) (((2 * op_2) = (2 * op_3)))), [ x123 x117], [])
(x125, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(x126, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x127, Equn2AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [], [])
(x128, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) (op_1)), [ x124 x125 x126 x127], [])
(x129, Equp1AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = ((2 * op_2) = (2 * op_3))))) (((2 * op_2) = (2 * op_3))) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x130, ResoAST, (cl  (((2 * op_2) = (2 * op_3))) ((not ((2 * op_2) = (2 * op_3))))), [ x129 x117], [])
(x131, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x132, ResoAST, (cl  (op_1) ((not op_1))), [ x131 x120], [])
(x133, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x134, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(x135, Equn1AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x136, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1)), [ x130 x133 x134 x135 x128 x132], [])
(x137, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x138, ResoAST, (cl  ((not op_1)) (op_1)), [ x137 x120], [])
(x139, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1)), [ x138 x136], [])
(x140, Equp1AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x141, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x140 t12], [])
(x142, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x143, Iten2AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not op_1)) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [], [])
(x144, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [ x141 x142 x143 x127 x139 x136], [])
(x145, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x135 x144], [])
(x146, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = ((2 * op_3) + 1)))), [], [])
(x147, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1)))), [ x146 x144 x136], [])
(x148, Iten2AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) ((not op_1)) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x149, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x148 x145 x139], [])
(x150, Equp2AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x151, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [ x150 t12], [])
(t13, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x151 x147 x149], [])
(x155, Equp2AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [], [])
(x156, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ x155 t13], [])
(x157, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [], [])
(x158, Iten1AST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_0) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x159, Equn2AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x160, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_0) (op_0)), [ x156 x157 x158 x159], [])
(x161, Equp1AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x162, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x161 t13], [])
(x163, Equp1AST, (cl  ((not (op_0 = op_0))) (op_0) ((not op_0))), [], [])
(x164, ResoAST, (cl  (op_0) ((not op_0))), [ x163 x152], [])
(x165, Iten1AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_0) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x166, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [], [])
(x167, Equn1AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [], [])
(x168, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) (op_0)), [ x162 x165 x166 x167 x160 x164], [])
(x169, Equp2AST, (cl  ((not (op_0 = op_0))) ((not op_0)) (op_0)), [], [])
(x170, ResoAST, (cl  ((not op_0)) (op_0)), [ x169 x152], [])
(x171, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) (op_0)), [ x170 x168], [])
(x172, Equp1AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [], [])
(x173, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x172 t11], [])
(x174, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x175, Iten2AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_0)) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))))), [], [])
(x176, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x173 x174 x175 x159 x171 x168], [])
(x177, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ x167 x176], [])
(x178, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x179, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x178 x176 x168], [])
(x180, Iten2AST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_0)) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [], [])
(x181, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x180 x177 x171], [])
(x182, Equp2AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x183, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ x182 t11], [])
(t14, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ x183 x179 x181], [])
(x185, Equn1AST, (cl  (((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x186, Equn2AST, (cl  (((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x184, ResoAST, (cl  (((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x185 x186], [])
(x187, AndnAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x192, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x188, Equp1AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [], [])
(x189, ResoAST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ x188 t14], [])
(x190, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x191, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x189 x190], [])
(x193, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x187 x192 x191], [])
(x194, Equn2AST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x195, ResoAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x193 x194], [])
(x196, AndnAST, (cl  ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x201, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x197, Equp2AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x198, ResoAST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x197 t14], [])
(x199, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x200, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x198 x199], [])
(x202, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x196 x201 x200], [])
(x203, Equn1AST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [])
(x204, ResoAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x202 x203], [])
(t15, ResoAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x195 x204], [])
(t16, Equp2AST, (cl  ((not ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t17, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t6 t15 t16], [])
(t18, AndAST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t17], [])
(t19, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(t20, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t21, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(t22, Ite1AST, (cl  (op_0) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t18], [])
(t23, Itep1AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(t24, Itep2AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not op_1)) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t25, Ite2AST, (cl  ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ t18], [])
(t26, AndAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t17], [])
(t27, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t28, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t29, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t30, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t31, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t26], [])
(t32, LageAST, (cl  (((2 * op_2) <= (2 * op_3))) (((2 * op_3) <= (2 * op_2)))), [], [ 1 1])
(t33, LageAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 1 1])
(t34, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) <= (2 * op_3)))) (((2 * op_3) <= (2 * op_2)))), [], [])
(t36, ResoAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t34 t19 t20 t33 t32], [])
(t37, LadeAST, (cl  ((or  (op_2 = op_3) (not (op_2 <= op_3)) (not (op_3 <= op_2))))), [], [])
(t38, OrAST, (cl  ((op_2 = op_3)) ((not (op_2 <= op_3))) ((not (op_3 <= op_2)))), [ t37], [])
(t39, LageAST, (cl  ((not ((2 * op_3) <= (2 * op_2)))) ((op_3 <= op_2))), [], [ 1 2])
(t40, LageAST, (cl  ((not ((2 * op_2) <= (2 * op_3)))) ((op_2 <= op_3))), [], [ 1 2])
(t41, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t42, EqcoAST, (cl  ((not (1 = 1))) ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t43, EqreAST, (cl  ((1 = 1))), [], [])
(t44, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ t42 t43], [])
(t45, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) = (1 + (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3))))), [ t41 t44], [])
(t47, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) (op_1) ((not (imp  op_1 op_0))) ((not (op_2 <= op_3))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t45 t23 t25 t27 t31 t38 t39 t19 t36], [])
(t48, EqcoAST, (cl  ((not (2 = 2))) ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [], [])
(t49, EqreAST, (cl  ((2 = 2))), [], [])
(t50, ThresoAST, (cl  ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [ t48 t49], [])
(t51, LageAST, (cl  ((op_3 <= op_2)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 -1])
(t52, ResoAST, (cl  ((not (op_2 <= op_3))) (op_1) (((2 * op_2) = (1 + (2 * op_3)))) ((not (imp  op_1 op_0)))), [ t51 t38 t50 t23 t25 t22 t21 t47], [])
(t53, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 1])
(t54, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2)))) (((2 * op_2) <= (2 * op_3)))), [], [])
(t56, ResoAST, (cl  (op_1) ((op_2 <= op_3))), [ t54 t19 t22 t25 t23 t53 t32 t40], [])
(t57, LageAST, (cl  ((not (op_2 <= op_3))) ((not ((1 + (2 * op_3)) <= (2 * op_2))))), [], [ 2 1])
(t58, EqcpAST, (cl  ((not ((2 * op_3) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2))))), [], [])
(t59, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3))))), [], [])
(t60, ThresoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [ t59 t50], [])
(t61, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t58 t60], [])
(t62, EqreAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t63, ThresoAST, (cl  (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t61 t62], [])
(t64, ResoAST, (cl  (op_1)), [ t57 t63 t38 t39 t33 t52 t56 t29], [])
(t65, ResoAST, (cl  ((imp  op_0 op_1))), [ t28 t64], [])
(t66, ResoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_3))))), [ t63 t38 t57 t40 t54 t39 t33], [])
(t67, ResoAST, (cl  ((op_2 = op_3)) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2))))), [ t40 t38 t54 t39], [])
(t68, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3))))), [ t34 t32 t67 t31 t30 t22 t20 t66 t65 t64], [])
(t69, ResoAST, (cl  ((not (op_2 = op_3)))), [ t50 t68], [])
(t70, LageAST, (cl  ((op_3 <= op_2)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 1])
(t71, ResoAST, (cl  (((2 * op_3) <= (2 * op_2)))), [ t70 t24 t25 t38 t22 t40 t36 t32 t64 t69], [])
(t72, ResoAST, (cl  ((op_3 <= op_2))), [ t39 t71], [])
(t73, ResoAST, (cl  ((not (op_2 <= op_3)))), [ t38 t72 t69], [])
(t74, LageAST, (cl  ((op_2 <= op_3)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t75, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t74 t73], [])
(t76, ResoAST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t24 t75 t64], [])
(t77, ResoAST, (cl  ((not op_0))), [ t25 t76], [])
(t78, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t22 t77], [])
(t79, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3))))), [ t20 t78 t64], [])
(t80, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t81, ResoAST, (cl ), [ t80 t79 t73], [])

Certif after process_trans: 
(h1, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t2, BoolsimpAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [])
(t3, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t5, ThresoAST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t3], [])
(t6, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ h1 t2 t5], [])
(t7, SumsimpAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [])
(t8, SumsimpAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [])
(x1, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x2, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t8 x1], [])
(x3, Equp1AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((2 * op_2) + 1)) ((not ((2 * op_3) + 1)))), [], [])
(x4, Equn2AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((1 + (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x5, Equn2AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x6, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((1 + (2 * op_2)) = (1 + (2 * op_3)))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x2 x3 x4 x5], [])
(x7, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x8, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t8 x7], [])
(x9, Equn2AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((2 * op_2) + 1)) (((2 * op_3) + 1))), [], [])
(x10, Equp1AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x11, Equn1AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x12, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x8 x9 x10 x11], [])
(x13, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [], [])
(x14, ResoAST, (cl  (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [ t7 x13], [])
(x15, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1))), [ x6 x12 x14], [])
(x16, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [], [])
(x17, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [ t7 x16], [])
(x18, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2)))), [ x15 x17], [])
(x19, Equn1AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (1 + (2 * op_2)))) ((not (1 + (2 * op_3))))), [], [])
(x20, Equn1AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((2 * op_2) + 1))) ((not ((2 * op_3) + 1)))), [], [])
(x21, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x11 x19 x20 x8 x18 x15], [])
(x22, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x21 x2], [])
(x23, Equp2AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((2 * op_2) + 1))) (((2 * op_3) + 1))), [], [])
(x24, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [ x23 x21 x15], [])
(x25, Equp2AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_2)))) ((1 + (2 * op_3)))), [], [])
(x26, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x25 x22 x18], [])
(t9, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x5 x24 x26], [])
(x30, Equp1AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((2 * op_3)) ((not (1 + (2 * op_2))))), [], [])
(x31, ResoAST, (cl  ((2 * op_3)) ((not (1 + (2 * op_2))))), [ t7 x30], [])
(x32, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_2) + 1)) ((not (2 * op_3)))), [], [])
(x33, Equn2AST, (cl  (((2 * op_3) = (1 + (2 * op_2)))) ((2 * op_3)) ((1 + (2 * op_2)))), [], [])
(x34, Equn2AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((((2 * op_2) + 1) = (2 * op_3))) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(x35, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_3) = (1 + (2 * op_2)))) (((2 * op_2) + 1)) ((2 * op_3))), [ x31 x32 x33 x34], [])
(x36, Equp2AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not (2 * op_3))) ((1 + (2 * op_2)))), [], [])
(x37, ResoAST, (cl  ((not (2 * op_3))) ((1 + (2 * op_2)))), [ t7 x36], [])
(x38, Equn2AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) (((2 * op_2) + 1)) ((2 * op_3))), [], [])
(x39, Equp1AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((2 * op_3)) ((not (1 + (2 * op_2))))), [], [])
(x40, Equn1AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x41, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((2 * op_3))), [ x37 x38 x39 x40], [])
(x42, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_2) + 1)) ((not (2 * op_3)))), [], [])
(x43, ResoAST, (cl  (((2 * op_2) + 1)) ((not (2 * op_3)))), [ x27 x42], [])
(x44, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) + 1))), [ x35 x41 x43], [])
(x45, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_2) + 1))) ((2 * op_3))), [], [])
(x46, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((2 * op_3))), [ x27 x45], [])
(x47, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((2 * op_3))), [ x44 x46], [])
(x48, Equn1AST, (cl  (((2 * op_3) = (1 + (2 * op_2)))) ((not (2 * op_3))) ((not (1 + (2 * op_2))))), [], [])
(x49, Equn1AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_2) + 1))) ((not (2 * op_3)))), [], [])
(x50, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (2 * op_3)))), [ x40 x48 x49 x37 x47 x44], [])
(x51, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (1 + (2 * op_2))))), [ x50 x31], [])
(x52, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_2) + 1))) ((2 * op_3))), [], [])
(x53, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (((2 * op_2) + 1) = (2 * op_3))))), [ x52 x50 x44], [])
(x54, Equp2AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not (2 * op_3))) ((1 + (2 * op_2)))), [], [])
(x55, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [ x54 x51 x47], [])
(t10, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))), [ x34 x53 x55], [])
(x59, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))) ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(x60, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_3) = (1 + (2 * op_2))))), [ x59 t10], [])
(x61, Itep1AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) (op_1) ((((2 * op_2) + 1) = (2 * op_3)))), [], [])
(x62, Iten1AST, (cl  ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))) (op_1) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x63, Equn2AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x64, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))) (op_1) (op_1)), [ x60 x61 x62 x63], [])
(x65, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))) ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x66, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [ x65 t10], [])
(x67, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x68, ResoAST, (cl  (op_1) ((not op_1))), [ x67 x56], [])
(x69, Iten1AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) (op_1) ((not (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x70, Itep1AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(x71, Equn1AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [], [])
(x72, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1)), [ x66 x69 x70 x71 x64 x68], [])
(x73, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x74, ResoAST, (cl  ((not op_1)) (op_1)), [ x73 x56], [])
(x75, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1)), [ x74 x72], [])
(x76, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x77, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x76 t9], [])
(x78, Itep2AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not op_1)) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x79, Iten2AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not op_1)) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [], [])
(x80, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x77 x78 x79 x63 x75 x72], [])
(x81, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x71 x80], [])
(x82, Itep2AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not op_1)) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [], [])
(x83, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [ x82 x80 x72], [])
(x84, Iten2AST, (cl  ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))) ((not op_1)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x85, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x84 x81 x75], [])
(x86, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x87, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ x86 t9], [])
(t11, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x87 x83 x85], [])
(x91, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x92, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t8 x91], [])
(x93, Equp1AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((2 * op_2)) ((not ((2 * op_3) + 1)))), [], [])
(x94, Equn2AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((1 + (2 * op_3)))), [], [])
(x95, Equn2AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x96, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((2 * op_2))), [ x92 x93 x94 x95], [])
(x97, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x98, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t8 x97], [])
(x99, Equn2AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((2 * op_2)) (((2 * op_3) + 1))), [], [])
(x100, Equp1AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((not (1 + (2 * op_3))))), [], [])
(x101, Equn1AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x102, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((2 * op_2))), [ x98 x99 x100 x101], [])
(x103, Equp1AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((2 * op_2)) ((not (2 * op_2)))), [], [])
(x104, ResoAST, (cl  ((2 * op_2)) ((not (2 * op_2)))), [ x88 x103], [])
(x105, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x96 x102 x104], [])
(x106, Equp2AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((not (2 * op_2))) ((2 * op_2))), [], [])
(x107, ResoAST, (cl  ((not (2 * op_2))) ((2 * op_2))), [ x88 x106], [])
(x108, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x105 x107], [])
(x109, Equn1AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((not (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x110, Equn1AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (2 * op_2))) ((not ((2 * op_3) + 1)))), [], [])
(x111, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x101 x109 x110 x98 x108 x105], [])
(x112, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x111 x92], [])
(x113, Equp2AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not (2 * op_2))) (((2 * op_3) + 1))), [], [])
(x114, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [ x113 x111 x105], [])
(x115, Equp2AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x116, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x115 x112 x108], [])
(t12, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ x95 x114 x116], [])
(x123, Equp2AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = ((2 * op_2) = (2 * op_3))))) ((not ((2 * op_2) = (2 * op_3)))) (((2 * op_2) = (2 * op_3)))), [], [])
(x124, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) (((2 * op_2) = (2 * op_3)))), [ x123 x117], [])
(x125, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(x126, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x127, Equn2AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [], [])
(x128, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) (op_1)), [ x124 x125 x126 x127], [])
(x129, Equp1AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = ((2 * op_2) = (2 * op_3))))) (((2 * op_2) = (2 * op_3))) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x130, ResoAST, (cl  (((2 * op_2) = (2 * op_3))) ((not ((2 * op_2) = (2 * op_3))))), [ x129 x117], [])
(x131, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x132, ResoAST, (cl  (op_1) ((not op_1))), [ x131 x120], [])
(x133, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x134, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(x135, Equn1AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x136, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1)), [ x130 x133 x134 x135 x128 x132], [])
(x137, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x138, ResoAST, (cl  ((not op_1)) (op_1)), [ x137 x120], [])
(x139, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1)), [ x138 x136], [])
(x140, Equp1AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x141, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x140 t12], [])
(x142, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x143, Iten2AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not op_1)) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [], [])
(x144, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [ x141 x142 x143 x127 x139 x136], [])
(x145, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x135 x144], [])
(x146, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = ((2 * op_3) + 1)))), [], [])
(x147, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1)))), [ x146 x144 x136], [])
(x148, Iten2AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) ((not op_1)) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x149, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x148 x145 x139], [])
(x150, Equp2AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x151, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [ x150 t12], [])
(t13, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x151 x147 x149], [])
(x155, Equp2AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [], [])
(x156, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ x155 t13], [])
(x157, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [], [])
(x158, Iten1AST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_0) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x159, Equn2AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x160, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_0) (op_0)), [ x156 x157 x158 x159], [])
(x161, Equp1AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x162, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x161 t13], [])
(x163, Equp1AST, (cl  ((not (op_0 = op_0))) (op_0) ((not op_0))), [], [])
(x164, ResoAST, (cl  (op_0) ((not op_0))), [ x163 x152], [])
(x165, Iten1AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_0) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x166, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [], [])
(x167, Equn1AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [], [])
(x168, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) (op_0)), [ x162 x165 x166 x167 x160 x164], [])
(x169, Equp2AST, (cl  ((not (op_0 = op_0))) ((not op_0)) (op_0)), [], [])
(x170, ResoAST, (cl  ((not op_0)) (op_0)), [ x169 x152], [])
(x171, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) (op_0)), [ x170 x168], [])
(x172, Equp1AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [], [])
(x173, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x172 t11], [])
(x174, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x175, Iten2AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_0)) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))))), [], [])
(x176, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x173 x174 x175 x159 x171 x168], [])
(x177, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ x167 x176], [])
(x178, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x179, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x178 x176 x168], [])
(x180, Iten2AST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_0)) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [], [])
(x181, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x180 x177 x171], [])
(x182, Equp2AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x183, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ x182 t11], [])
(t14, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ x183 x179 x181], [])
(x185, Equn1AST, (cl  (((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x186, Equn2AST, (cl  (((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x184, ResoAST, (cl  (((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x185 x186], [])
(x187, AndnAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x192, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x188, Equp1AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [], [])
(x189, ResoAST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ x188 t14], [])
(x190, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x191, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x189 x190], [])
(x193, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x187 x192 x191], [])
(x194, Equn2AST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x195, ResoAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x193 x194], [])
(x196, AndnAST, (cl  ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x201, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x197, Equp2AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x198, ResoAST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x197 t14], [])
(x199, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x200, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x198 x199], [])
(x202, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x196 x201 x200], [])
(x203, Equn1AST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [])
(x204, ResoAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x202 x203], [])
(t15, ResoAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x195 x204], [])
(t16, Equp2AST, (cl  ((not ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t17, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t6 t15 t16], [])
(t18, AndAST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t17], [])
(t19, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(t20, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t21, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(t22, Ite1AST, (cl  (op_0) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t18], [])
(t23, Itep1AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(t24, Itep2AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not op_1)) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t25, Ite2AST, (cl  ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ t18], [])
(t26, AndAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t17], [])
(t27, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t28, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t29, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t30, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t31, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t26], [])
(t32, LageAST, (cl  (((2 * op_2) <= (2 * op_3))) (((2 * op_3) <= (2 * op_2)))), [], [ 1 1])
(t33, LageAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 1 1])
(t34, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) <= (2 * op_3)))) (((2 * op_3) <= (2 * op_2)))), [], [])
(t36, ResoAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t34 t19 t20 t33 t32], [])
(t37, LadeAST, (cl  ((or  (op_2 = op_3) (not (op_2 <= op_3)) (not (op_3 <= op_2))))), [], [])
(t38, OrAST, (cl  ((op_2 = op_3)) ((not (op_2 <= op_3))) ((not (op_3 <= op_2)))), [ t37], [])
(t39, LageAST, (cl  ((not ((2 * op_3) <= (2 * op_2)))) ((op_3 <= op_2))), [], [ 1 2])
(t40, LageAST, (cl  ((not ((2 * op_2) <= (2 * op_3)))) ((op_2 <= op_3))), [], [ 1 2])
(t41, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t42, EqcoAST, (cl  ((not (1 = 1))) ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t43, EqreAST, (cl  ((1 = 1))), [], [])
(t44, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ t42 t43], [])
(t45, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) = (1 + (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3))))), [ t41 t44], [])
(t47, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) (op_1) ((not (imp  op_1 op_0))) ((not (op_2 <= op_3))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t45 t23 t25 t27 t31 t38 t39 t19 t36], [])
(t48, EqcoAST, (cl  ((not (2 = 2))) ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [], [])
(t49, EqreAST, (cl  ((2 = 2))), [], [])
(t50, ThresoAST, (cl  ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [ t48 t49], [])
(t51, LageAST, (cl  ((op_3 <= op_2)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 -1])
(t52, ResoAST, (cl  ((not (op_2 <= op_3))) (op_1) (((2 * op_2) = (1 + (2 * op_3)))) ((not (imp  op_1 op_0)))), [ t51 t38 t50 t23 t25 t22 t21 t47], [])
(t53, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 1])
(t54, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2)))) (((2 * op_2) <= (2 * op_3)))), [], [])
(t56, ResoAST, (cl  (op_1) ((op_2 <= op_3))), [ t54 t19 t22 t25 t23 t53 t32 t40], [])
(t57, LageAST, (cl  ((not (op_2 <= op_3))) ((not ((1 + (2 * op_3)) <= (2 * op_2))))), [], [ 2 1])
(t58, EqcpAST, (cl  ((not ((2 * op_3) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2))))), [], [])
(t59, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3))))), [], [])
(t60, ThresoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [ t59 t50], [])
(t61, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t58 t60], [])
(t62, EqreAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t63, ThresoAST, (cl  (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t61 t62], [])
(t64, ResoAST, (cl  (op_1)), [ t57 t63 t38 t39 t33 t52 t56 t29], [])
(t65, ResoAST, (cl  ((imp  op_0 op_1))), [ t28 t64], [])
(t66, ResoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_3))))), [ t63 t38 t57 t40 t54 t39 t33], [])
(t67, ResoAST, (cl  ((op_2 = op_3)) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2))))), [ t40 t38 t54 t39], [])
(t68, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3))))), [ t34 t32 t67 t31 t30 t22 t20 t66 t65 t64], [])
(t69, ResoAST, (cl  ((not (op_2 = op_3)))), [ t50 t68], [])
(t70, LageAST, (cl  ((op_3 <= op_2)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 1])
(t71, ResoAST, (cl  (((2 * op_3) <= (2 * op_2)))), [ t70 t24 t25 t38 t22 t40 t36 t32 t64 t69], [])
(t72, ResoAST, (cl  ((op_3 <= op_2))), [ t39 t71], [])
(t73, ResoAST, (cl  ((not (op_2 <= op_3)))), [ t38 t72 t69], [])
(t74, LageAST, (cl  ((op_2 <= op_3)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t75, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t74 t73], [])
(t76, ResoAST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t24 t75 t64], [])
(t77, ResoAST, (cl  ((not op_0))), [ t25 t76], [])
(t78, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t22 t77], [])
(t79, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3))))), [ t20 t78 t64], [])
(t80, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t81, ResoAST, (cl ), [ t80 t79 t73], [])

Certif after process_simplify: 
(h1, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x221, Equn1AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [])
(x226, SubproofAST
	(x205, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x206, Impn1AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x208, ResoAST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x206 x205], [])
(x207, Impn2AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x209, ResoAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x207 x205], [])
(x210, AndnAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x211, ResoAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x210 x208 x209], [])
(x219, DischargeAST, (cl  ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
	, (cl ), [], [])
(x223, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x219 x221], [])
(x222, Equn2AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x225, SubproofAST
	(x212, AssumeAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x213, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [ 0])
(x214, ResoAST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x213 x212], [])
(x215, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [ 1])
(x216, ResoAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x215 x212], [])
(x217, ImppAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x218, ResoAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x217 x214 x216], [])
(x220, DischargeAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
	, (cl ), [], [])
(x224, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x220 x222], [])
(t2, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x223 x224], [])
(t3, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t5, ThresoAST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t3], [])
(t6, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ h1 t2 t5], [])
(t7, SumsimpAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [])
(t8, SumsimpAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [])
(x1, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x2, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t8 x1], [])
(x3, Equp1AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((2 * op_2) + 1)) ((not ((2 * op_3) + 1)))), [], [])
(x4, Equn2AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((1 + (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x5, Equn2AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x6, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((1 + (2 * op_2)) = (1 + (2 * op_3)))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x2 x3 x4 x5], [])
(x7, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x8, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t8 x7], [])
(x9, Equn2AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((2 * op_2) + 1)) (((2 * op_3) + 1))), [], [])
(x10, Equp1AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x11, Equn1AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x12, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x8 x9 x10 x11], [])
(x13, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [], [])
(x14, ResoAST, (cl  (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [ t7 x13], [])
(x15, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1))), [ x6 x12 x14], [])
(x16, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [], [])
(x17, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [ t7 x16], [])
(x18, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2)))), [ x15 x17], [])
(x19, Equn1AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (1 + (2 * op_2)))) ((not (1 + (2 * op_3))))), [], [])
(x20, Equn1AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((2 * op_2) + 1))) ((not ((2 * op_3) + 1)))), [], [])
(x21, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x11 x19 x20 x8 x18 x15], [])
(x22, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x21 x2], [])
(x23, Equp2AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((2 * op_2) + 1))) (((2 * op_3) + 1))), [], [])
(x24, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [ x23 x21 x15], [])
(x25, Equp2AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_2)))) ((1 + (2 * op_3)))), [], [])
(x26, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x25 x22 x18], [])
(t9, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x5 x24 x26], [])
(x30, Equp1AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((2 * op_3)) ((not (1 + (2 * op_2))))), [], [])
(x31, ResoAST, (cl  ((2 * op_3)) ((not (1 + (2 * op_2))))), [ t7 x30], [])
(x32, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_2) + 1)) ((not (2 * op_3)))), [], [])
(x33, Equn2AST, (cl  (((2 * op_3) = (1 + (2 * op_2)))) ((2 * op_3)) ((1 + (2 * op_2)))), [], [])
(x34, Equn2AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((((2 * op_2) + 1) = (2 * op_3))) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(x35, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_3) = (1 + (2 * op_2)))) (((2 * op_2) + 1)) ((2 * op_3))), [ x31 x32 x33 x34], [])
(x36, Equp2AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not (2 * op_3))) ((1 + (2 * op_2)))), [], [])
(x37, ResoAST, (cl  ((not (2 * op_3))) ((1 + (2 * op_2)))), [ t7 x36], [])
(x38, Equn2AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) (((2 * op_2) + 1)) ((2 * op_3))), [], [])
(x39, Equp1AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((2 * op_3)) ((not (1 + (2 * op_2))))), [], [])
(x40, Equn1AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x41, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((2 * op_3))), [ x37 x38 x39 x40], [])
(x42, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_2) + 1)) ((not (2 * op_3)))), [], [])
(x43, ResoAST, (cl  (((2 * op_2) + 1)) ((not (2 * op_3)))), [ x27 x42], [])
(x44, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) + 1))), [ x35 x41 x43], [])
(x45, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_2) + 1))) ((2 * op_3))), [], [])
(x46, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((2 * op_3))), [ x27 x45], [])
(x47, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((2 * op_3))), [ x44 x46], [])
(x48, Equn1AST, (cl  (((2 * op_3) = (1 + (2 * op_2)))) ((not (2 * op_3))) ((not (1 + (2 * op_2))))), [], [])
(x49, Equn1AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_2) + 1))) ((not (2 * op_3)))), [], [])
(x50, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (2 * op_3)))), [ x40 x48 x49 x37 x47 x44], [])
(x51, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (1 + (2 * op_2))))), [ x50 x31], [])
(x52, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_2) + 1))) ((2 * op_3))), [], [])
(x53, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (((2 * op_2) + 1) = (2 * op_3))))), [ x52 x50 x44], [])
(x54, Equp2AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not (2 * op_3))) ((1 + (2 * op_2)))), [], [])
(x55, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [ x54 x51 x47], [])
(t10, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))), [ x34 x53 x55], [])
(x59, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))) ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(x60, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_3) = (1 + (2 * op_2))))), [ x59 t10], [])
(x61, Itep1AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) (op_1) ((((2 * op_2) + 1) = (2 * op_3)))), [], [])
(x62, Iten1AST, (cl  ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))) (op_1) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x63, Equn2AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x64, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))) (op_1) (op_1)), [ x60 x61 x62 x63], [])
(x65, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))) ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x66, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [ x65 t10], [])
(x67, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x68, ResoAST, (cl  (op_1) ((not op_1))), [ x67 x56], [])
(x69, Iten1AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) (op_1) ((not (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x70, Itep1AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(x71, Equn1AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [], [])
(x72, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1)), [ x66 x69 x70 x71 x64 x68], [])
(x73, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x74, ResoAST, (cl  ((not op_1)) (op_1)), [ x73 x56], [])
(x75, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1)), [ x74 x72], [])
(x76, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x77, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x76 t9], [])
(x78, Itep2AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not op_1)) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x79, Iten2AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not op_1)) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [], [])
(x80, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x77 x78 x79 x63 x75 x72], [])
(x81, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x71 x80], [])
(x82, Itep2AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not op_1)) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [], [])
(x83, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [ x82 x80 x72], [])
(x84, Iten2AST, (cl  ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))) ((not op_1)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x85, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x84 x81 x75], [])
(x86, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x87, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ x86 t9], [])
(t11, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x87 x83 x85], [])
(x91, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x92, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t8 x91], [])
(x93, Equp1AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((2 * op_2)) ((not ((2 * op_3) + 1)))), [], [])
(x94, Equn2AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((1 + (2 * op_3)))), [], [])
(x95, Equn2AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x96, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((2 * op_2))), [ x92 x93 x94 x95], [])
(x97, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x98, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t8 x97], [])
(x99, Equn2AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((2 * op_2)) (((2 * op_3) + 1))), [], [])
(x100, Equp1AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((not (1 + (2 * op_3))))), [], [])
(x101, Equn1AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x102, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((2 * op_2))), [ x98 x99 x100 x101], [])
(x103, Equp1AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((2 * op_2)) ((not (2 * op_2)))), [], [])
(x104, ResoAST, (cl  ((2 * op_2)) ((not (2 * op_2)))), [ x88 x103], [])
(x105, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x96 x102 x104], [])
(x106, Equp2AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((not (2 * op_2))) ((2 * op_2))), [], [])
(x107, ResoAST, (cl  ((not (2 * op_2))) ((2 * op_2))), [ x88 x106], [])
(x108, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x105 x107], [])
(x109, Equn1AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((not (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x110, Equn1AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (2 * op_2))) ((not ((2 * op_3) + 1)))), [], [])
(x111, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x101 x109 x110 x98 x108 x105], [])
(x112, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x111 x92], [])
(x113, Equp2AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not (2 * op_2))) (((2 * op_3) + 1))), [], [])
(x114, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [ x113 x111 x105], [])
(x115, Equp2AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x116, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x115 x112 x108], [])
(t12, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ x95 x114 x116], [])
(x123, Equp2AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = ((2 * op_2) = (2 * op_3))))) ((not ((2 * op_2) = (2 * op_3)))) (((2 * op_2) = (2 * op_3)))), [], [])
(x124, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) (((2 * op_2) = (2 * op_3)))), [ x123 x117], [])
(x125, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(x126, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x127, Equn2AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [], [])
(x128, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) (op_1)), [ x124 x125 x126 x127], [])
(x129, Equp1AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = ((2 * op_2) = (2 * op_3))))) (((2 * op_2) = (2 * op_3))) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x130, ResoAST, (cl  (((2 * op_2) = (2 * op_3))) ((not ((2 * op_2) = (2 * op_3))))), [ x129 x117], [])
(x131, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x132, ResoAST, (cl  (op_1) ((not op_1))), [ x131 x120], [])
(x133, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x134, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(x135, Equn1AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x136, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1)), [ x130 x133 x134 x135 x128 x132], [])
(x137, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x138, ResoAST, (cl  ((not op_1)) (op_1)), [ x137 x120], [])
(x139, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1)), [ x138 x136], [])
(x140, Equp1AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x141, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x140 t12], [])
(x142, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x143, Iten2AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not op_1)) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [], [])
(x144, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [ x141 x142 x143 x127 x139 x136], [])
(x145, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x135 x144], [])
(x146, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = ((2 * op_3) + 1)))), [], [])
(x147, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1)))), [ x146 x144 x136], [])
(x148, Iten2AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) ((not op_1)) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x149, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x148 x145 x139], [])
(x150, Equp2AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x151, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [ x150 t12], [])
(t13, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x151 x147 x149], [])
(x155, Equp2AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [], [])
(x156, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ x155 t13], [])
(x157, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [], [])
(x158, Iten1AST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_0) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x159, Equn2AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x160, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_0) (op_0)), [ x156 x157 x158 x159], [])
(x161, Equp1AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x162, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x161 t13], [])
(x163, Equp1AST, (cl  ((not (op_0 = op_0))) (op_0) ((not op_0))), [], [])
(x164, ResoAST, (cl  (op_0) ((not op_0))), [ x163 x152], [])
(x165, Iten1AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_0) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x166, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [], [])
(x167, Equn1AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [], [])
(x168, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) (op_0)), [ x162 x165 x166 x167 x160 x164], [])
(x169, Equp2AST, (cl  ((not (op_0 = op_0))) ((not op_0)) (op_0)), [], [])
(x170, ResoAST, (cl  ((not op_0)) (op_0)), [ x169 x152], [])
(x171, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) (op_0)), [ x170 x168], [])
(x172, Equp1AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [], [])
(x173, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x172 t11], [])
(x174, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x175, Iten2AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_0)) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))))), [], [])
(x176, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x173 x174 x175 x159 x171 x168], [])
(x177, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ x167 x176], [])
(x178, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x179, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x178 x176 x168], [])
(x180, Iten2AST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_0)) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [], [])
(x181, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x180 x177 x171], [])
(x182, Equp2AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x183, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ x182 t11], [])
(t14, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ x183 x179 x181], [])
(x185, Equn1AST, (cl  (((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x186, Equn2AST, (cl  (((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x184, ResoAST, (cl  (((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x185 x186], [])
(x187, AndnAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x192, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x188, Equp1AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [], [])
(x189, ResoAST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ x188 t14], [])
(x190, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x191, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x189 x190], [])
(x193, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x187 x192 x191], [])
(x194, Equn2AST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x195, ResoAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x193 x194], [])
(x196, AndnAST, (cl  ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x201, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x197, Equp2AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x198, ResoAST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x197 t14], [])
(x199, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x200, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x198 x199], [])
(x202, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x196 x201 x200], [])
(x203, Equn1AST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [])
(x204, ResoAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x202 x203], [])
(t15, ResoAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x195 x204], [])
(t16, Equp2AST, (cl  ((not ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t17, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t6 t15 t16], [])
(t18, AndAST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t17], [])
(t19, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(t20, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t21, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(t22, Ite1AST, (cl  (op_0) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t18], [])
(t23, Itep1AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(t24, Itep2AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not op_1)) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t25, Ite2AST, (cl  ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ t18], [])
(t26, AndAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t17], [])
(t27, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t28, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t29, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t30, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t31, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t26], [])
(t32, LageAST, (cl  (((2 * op_2) <= (2 * op_3))) (((2 * op_3) <= (2 * op_2)))), [], [ 1 1])
(t33, LageAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 1 1])
(t34, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) <= (2 * op_3)))) (((2 * op_3) <= (2 * op_2)))), [], [])
(t36, ResoAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t34 t19 t20 t33 t32], [])
(t37, LadeAST, (cl  ((or  (op_2 = op_3) (not (op_2 <= op_3)) (not (op_3 <= op_2))))), [], [])
(t38, OrAST, (cl  ((op_2 = op_3)) ((not (op_2 <= op_3))) ((not (op_3 <= op_2)))), [ t37], [])
(t39, LageAST, (cl  ((not ((2 * op_3) <= (2 * op_2)))) ((op_3 <= op_2))), [], [ 1 2])
(t40, LageAST, (cl  ((not ((2 * op_2) <= (2 * op_3)))) ((op_2 <= op_3))), [], [ 1 2])
(t41, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t42, EqcoAST, (cl  ((not (1 = 1))) ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t43, EqreAST, (cl  ((1 = 1))), [], [])
(t44, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ t42 t43], [])
(t45, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) = (1 + (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3))))), [ t41 t44], [])
(t47, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) (op_1) ((not (imp  op_1 op_0))) ((not (op_2 <= op_3))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t45 t23 t25 t27 t31 t38 t39 t19 t36], [])
(t48, EqcoAST, (cl  ((not (2 = 2))) ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [], [])
(t49, EqreAST, (cl  ((2 = 2))), [], [])
(t50, ThresoAST, (cl  ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [ t48 t49], [])
(t51, LageAST, (cl  ((op_3 <= op_2)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 -1])
(t52, ResoAST, (cl  ((not (op_2 <= op_3))) (op_1) (((2 * op_2) = (1 + (2 * op_3)))) ((not (imp  op_1 op_0)))), [ t51 t38 t50 t23 t25 t22 t21 t47], [])
(t53, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 1])
(t54, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2)))) (((2 * op_2) <= (2 * op_3)))), [], [])
(t56, ResoAST, (cl  (op_1) ((op_2 <= op_3))), [ t54 t19 t22 t25 t23 t53 t32 t40], [])
(t57, LageAST, (cl  ((not (op_2 <= op_3))) ((not ((1 + (2 * op_3)) <= (2 * op_2))))), [], [ 2 1])
(t58, EqcpAST, (cl  ((not ((2 * op_3) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2))))), [], [])
(t59, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3))))), [], [])
(t60, ThresoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [ t59 t50], [])
(t61, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t58 t60], [])
(t62, EqreAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t63, ThresoAST, (cl  (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t61 t62], [])
(t64, ResoAST, (cl  (op_1)), [ t57 t63 t38 t39 t33 t52 t56 t29], [])
(t65, ResoAST, (cl  ((imp  op_0 op_1))), [ t28 t64], [])
(t66, ResoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_3))))), [ t63 t38 t57 t40 t54 t39 t33], [])
(t67, ResoAST, (cl  ((op_2 = op_3)) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2))))), [ t40 t38 t54 t39], [])
(t68, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3))))), [ t34 t32 t67 t31 t30 t22 t20 t66 t65 t64], [])
(t69, ResoAST, (cl  ((not (op_2 = op_3)))), [ t50 t68], [])
(t70, LageAST, (cl  ((op_3 <= op_2)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 1])
(t71, ResoAST, (cl  (((2 * op_3) <= (2 * op_2)))), [ t70 t24 t25 t38 t22 t40 t36 t32 t64 t69], [])
(t72, ResoAST, (cl  ((op_3 <= op_2))), [ t39 t71], [])
(t73, ResoAST, (cl  ((not (op_2 <= op_3)))), [ t38 t72 t69], [])
(t74, LageAST, (cl  ((op_2 <= op_3)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t75, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t74 t73], [])
(t76, ResoAST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t24 t75 t64], [])
(t77, ResoAST, (cl  ((not op_0))), [ t25 t76], [])
(t78, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t22 t77], [])
(t79, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3))))), [ t20 t78 t64], [])
(t80, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t81, ResoAST, (cl ), [ t80 t79 t73], [])

Certif after process_proj: 
(h1, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x221, Equn1AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [])
(x226, SubproofAST
	(x205, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x206, Impn1AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x208, ResoAST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x206 x205], [])
(x207, Impn2AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x209, ResoAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x207 x205], [])
(x210, AndnAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x211, ResoAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x210 x208 x209], [])
(x219, DischargeAST, (cl  ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
	, (cl ), [], [])
(x223, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x219 x221], [])
(x222, Equn2AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x225, SubproofAST
	(x212, AssumeAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x213, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [ 0])
(x214, ResoAST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x213 x212], [])
(x215, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [ 1])
(x216, ResoAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x215 x212], [])
(x217, ImppAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x218, ResoAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x217 x214 x216], [])
(x220, DischargeAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
	, (cl ), [], [])
(x224, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x220 x222], [])
(t2, ResoAST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x223 x224], [])
(t3, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t5, ThresoAST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t3], [])
(t6, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ h1 t2 t5], [])
(t7, SumsimpAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [])
(t8, SumsimpAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [])
(x1, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x2, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t8 x1], [])
(x3, Equp1AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((2 * op_2) + 1)) ((not ((2 * op_3) + 1)))), [], [])
(x4, Equn2AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((1 + (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x5, Equn2AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x6, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((1 + (2 * op_2)) = (1 + (2 * op_3)))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x2 x3 x4 x5], [])
(x7, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x8, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t8 x7], [])
(x9, Equn2AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((2 * op_2) + 1)) (((2 * op_3) + 1))), [], [])
(x10, Equp1AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x11, Equn1AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x12, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x8 x9 x10 x11], [])
(x13, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [], [])
(x14, ResoAST, (cl  (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [ t7 x13], [])
(x15, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1))), [ x6 x12 x14], [])
(x16, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [], [])
(x17, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [ t7 x16], [])
(x18, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2)))), [ x15 x17], [])
(x19, Equn1AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (1 + (2 * op_2)))) ((not (1 + (2 * op_3))))), [], [])
(x20, Equn1AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((2 * op_2) + 1))) ((not ((2 * op_3) + 1)))), [], [])
(x21, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x11 x19 x20 x8 x18 x15], [])
(x22, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x21 x2], [])
(x23, Equp2AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((2 * op_2) + 1))) (((2 * op_3) + 1))), [], [])
(x24, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [ x23 x21 x15], [])
(x25, Equp2AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_2)))) ((1 + (2 * op_3)))), [], [])
(x26, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x25 x22 x18], [])
(t9, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x5 x24 x26], [])
(x30, Equp1AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((2 * op_3)) ((not (1 + (2 * op_2))))), [], [])
(x31, ResoAST, (cl  ((2 * op_3)) ((not (1 + (2 * op_2))))), [ t7 x30], [])
(x32, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_2) + 1)) ((not (2 * op_3)))), [], [])
(x33, Equn2AST, (cl  (((2 * op_3) = (1 + (2 * op_2)))) ((2 * op_3)) ((1 + (2 * op_2)))), [], [])
(x34, Equn2AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((((2 * op_2) + 1) = (2 * op_3))) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(x35, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_3) = (1 + (2 * op_2)))) (((2 * op_2) + 1)) ((2 * op_3))), [ x31 x32 x33 x34], [])
(x36, Equp2AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not (2 * op_3))) ((1 + (2 * op_2)))), [], [])
(x37, ResoAST, (cl  ((not (2 * op_3))) ((1 + (2 * op_2)))), [ t7 x36], [])
(x38, Equn2AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) (((2 * op_2) + 1)) ((2 * op_3))), [], [])
(x39, Equp1AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((2 * op_3)) ((not (1 + (2 * op_2))))), [], [])
(x40, Equn1AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x41, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((2 * op_3))), [ x37 x38 x39 x40], [])
(x42, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_2) + 1)) ((not (2 * op_3)))), [], [])
(x43, ResoAST, (cl  (((2 * op_2) + 1)) ((not (2 * op_3)))), [ x27 x42], [])
(x44, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) + 1))), [ x35 x41 x43], [])
(x45, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_2) + 1))) ((2 * op_3))), [], [])
(x46, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((2 * op_3))), [ x27 x45], [])
(x47, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((2 * op_3))), [ x44 x46], [])
(x48, Equn1AST, (cl  (((2 * op_3) = (1 + (2 * op_2)))) ((not (2 * op_3))) ((not (1 + (2 * op_2))))), [], [])
(x49, Equn1AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_2) + 1))) ((not (2 * op_3)))), [], [])
(x50, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (2 * op_3)))), [ x40 x48 x49 x37 x47 x44], [])
(x51, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (1 + (2 * op_2))))), [ x50 x31], [])
(x52, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_2) + 1))) ((2 * op_3))), [], [])
(x53, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (((2 * op_2) + 1) = (2 * op_3))))), [ x52 x50 x44], [])
(x54, Equp2AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not (2 * op_3))) ((1 + (2 * op_2)))), [], [])
(x55, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [ x54 x51 x47], [])
(t10, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))), [ x34 x53 x55], [])
(x59, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))) ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(x60, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_3) = (1 + (2 * op_2))))), [ x59 t10], [])
(x61, Itep1AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) (op_1) ((((2 * op_2) + 1) = (2 * op_3)))), [], [])
(x62, Iten1AST, (cl  ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))) (op_1) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x63, Equn2AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x64, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))) (op_1) (op_1)), [ x60 x61 x62 x63], [])
(x65, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))) ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x66, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [ x65 t10], [])
(x67, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x68, ResoAST, (cl  (op_1) ((not op_1))), [ x67 x56], [])
(x69, Iten1AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) (op_1) ((not (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x70, Itep1AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(x71, Equn1AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [], [])
(x72, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1)), [ x66 x69 x70 x71 x64 x68], [])
(x73, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x74, ResoAST, (cl  ((not op_1)) (op_1)), [ x73 x56], [])
(x75, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1)), [ x74 x72], [])
(x76, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x77, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x76 t9], [])
(x78, Itep2AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not op_1)) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x79, Iten2AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not op_1)) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [], [])
(x80, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x77 x78 x79 x63 x75 x72], [])
(x81, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x71 x80], [])
(x82, Itep2AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not op_1)) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [], [])
(x83, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [ x82 x80 x72], [])
(x84, Iten2AST, (cl  ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))) ((not op_1)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x85, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x84 x81 x75], [])
(x86, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x87, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ x86 t9], [])
(t11, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x87 x83 x85], [])
(x91, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x92, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t8 x91], [])
(x93, Equp1AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((2 * op_2)) ((not ((2 * op_3) + 1)))), [], [])
(x94, Equn2AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((1 + (2 * op_3)))), [], [])
(x95, Equn2AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x96, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((2 * op_2))), [ x92 x93 x94 x95], [])
(x97, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x98, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t8 x97], [])
(x99, Equn2AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((2 * op_2)) (((2 * op_3) + 1))), [], [])
(x100, Equp1AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((not (1 + (2 * op_3))))), [], [])
(x101, Equn1AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x102, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((2 * op_2))), [ x98 x99 x100 x101], [])
(x103, Equp1AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((2 * op_2)) ((not (2 * op_2)))), [], [])
(x104, ResoAST, (cl  ((2 * op_2)) ((not (2 * op_2)))), [ x88 x103], [])
(x105, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x96 x102 x104], [])
(x106, Equp2AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((not (2 * op_2))) ((2 * op_2))), [], [])
(x107, ResoAST, (cl  ((not (2 * op_2))) ((2 * op_2))), [ x88 x106], [])
(x108, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x105 x107], [])
(x109, Equn1AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((not (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x110, Equn1AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (2 * op_2))) ((not ((2 * op_3) + 1)))), [], [])
(x111, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x101 x109 x110 x98 x108 x105], [])
(x112, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x111 x92], [])
(x113, Equp2AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not (2 * op_2))) (((2 * op_3) + 1))), [], [])
(x114, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [ x113 x111 x105], [])
(x115, Equp2AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x116, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x115 x112 x108], [])
(t12, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ x95 x114 x116], [])
(x123, Equp2AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = ((2 * op_2) = (2 * op_3))))) ((not ((2 * op_2) = (2 * op_3)))) (((2 * op_2) = (2 * op_3)))), [], [])
(x124, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) (((2 * op_2) = (2 * op_3)))), [ x123 x117], [])
(x125, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(x126, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x127, Equn2AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [], [])
(x128, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) (op_1)), [ x124 x125 x126 x127], [])
(x129, Equp1AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = ((2 * op_2) = (2 * op_3))))) (((2 * op_2) = (2 * op_3))) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x130, ResoAST, (cl  (((2 * op_2) = (2 * op_3))) ((not ((2 * op_2) = (2 * op_3))))), [ x129 x117], [])
(x131, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x132, ResoAST, (cl  (op_1) ((not op_1))), [ x131 x120], [])
(x133, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x134, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(x135, Equn1AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x136, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1)), [ x130 x133 x134 x135 x128 x132], [])
(x137, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x138, ResoAST, (cl  ((not op_1)) (op_1)), [ x137 x120], [])
(x139, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1)), [ x138 x136], [])
(x140, Equp1AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x141, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x140 t12], [])
(x142, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x143, Iten2AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not op_1)) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [], [])
(x144, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [ x141 x142 x143 x127 x139 x136], [])
(x145, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x135 x144], [])
(x146, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = ((2 * op_3) + 1)))), [], [])
(x147, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1)))), [ x146 x144 x136], [])
(x148, Iten2AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) ((not op_1)) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x149, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x148 x145 x139], [])
(x150, Equp2AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x151, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [ x150 t12], [])
(t13, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x151 x147 x149], [])
(x155, Equp2AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [], [])
(x156, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ x155 t13], [])
(x157, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [], [])
(x158, Iten1AST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_0) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x159, Equn2AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x160, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_0) (op_0)), [ x156 x157 x158 x159], [])
(x161, Equp1AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x162, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x161 t13], [])
(x163, Equp1AST, (cl  ((not (op_0 = op_0))) (op_0) ((not op_0))), [], [])
(x164, ResoAST, (cl  (op_0) ((not op_0))), [ x163 x152], [])
(x165, Iten1AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_0) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x166, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [], [])
(x167, Equn1AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [], [])
(x168, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) (op_0)), [ x162 x165 x166 x167 x160 x164], [])
(x169, Equp2AST, (cl  ((not (op_0 = op_0))) ((not op_0)) (op_0)), [], [])
(x170, ResoAST, (cl  ((not op_0)) (op_0)), [ x169 x152], [])
(x171, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) (op_0)), [ x170 x168], [])
(x172, Equp1AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [], [])
(x173, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x172 t11], [])
(x174, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x175, Iten2AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_0)) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))))), [], [])
(x176, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x173 x174 x175 x159 x171 x168], [])
(x177, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ x167 x176], [])
(x178, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x179, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x178 x176 x168], [])
(x180, Iten2AST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_0)) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [], [])
(x181, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x180 x177 x171], [])
(x182, Equp2AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x183, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ x182 t11], [])
(t14, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ x183 x179 x181], [])
(x185, Equn1AST, (cl  (((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x186, Equn2AST, (cl  (((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x184, ResoAST, (cl  (((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x185 x186], [])
(x187, AndnAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x192, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [ 1])
(x188, Equp1AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [], [])
(x189, ResoAST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ x188 t14], [])
(x190, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [ 0])
(x191, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x189 x190], [])
(x193, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x187 x192 x191], [])
(x194, Equn2AST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x195, ResoAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x193 x194], [])
(x196, AndnAST, (cl  ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x201, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [ 1])
(x197, Equp2AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x198, ResoAST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x197 t14], [])
(x199, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [ 0])
(x200, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x198 x199], [])
(x202, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x196 x201 x200], [])
(x203, Equn1AST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [])
(x204, ResoAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x202 x203], [])
(t15, ResoAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x195 x204], [])
(t16, Equp2AST, (cl  ((not ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t17, ThresoAST, (cl  ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t6 t15 t16], [])
(t18, AndAST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t17], [ 0])
(t19, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(t20, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t21, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(t22, Ite1AST, (cl  (op_0) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t18], [])
(t23, Itep1AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(t24, Itep2AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not op_1)) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t25, Ite2AST, (cl  ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ t18], [])
(t26, AndAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ t17], [ 1])
(t27, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t28, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t29, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t30, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(t31, NandAST, (cl  ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ t26], [])
(t32, LageAST, (cl  (((2 * op_2) <= (2 * op_3))) (((2 * op_3) <= (2 * op_2)))), [], [ 1 1])
(t33, LageAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 1 1])
(t34, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) <= (2 * op_3)))) (((2 * op_3) <= (2 * op_2)))), [], [])
(t36, ResoAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t34 t19 t20 t33 t32], [])
(t37, LadeAST, (cl  ((or  (op_2 = op_3) (not (op_2 <= op_3)) (not (op_3 <= op_2))))), [], [])
(t38, OrAST, (cl  ((op_2 = op_3)) ((not (op_2 <= op_3))) ((not (op_3 <= op_2)))), [ t37], [])
(t39, LageAST, (cl  ((not ((2 * op_3) <= (2 * op_2)))) ((op_3 <= op_2))), [], [ 1 2])
(t40, LageAST, (cl  ((not ((2 * op_2) <= (2 * op_3)))) ((op_2 <= op_3))), [], [ 1 2])
(t41, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t42, EqcoAST, (cl  ((not (1 = 1))) ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t43, EqreAST, (cl  ((1 = 1))), [], [])
(t44, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ t42 t43], [])
(t45, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) = (1 + (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3))))), [ t41 t44], [])
(t47, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) (op_1) ((not (imp  op_1 op_0))) ((not (op_2 <= op_3))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t45 t23 t25 t27 t31 t38 t39 t19 t36], [])
(t48, EqcoAST, (cl  ((not (2 = 2))) ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [], [])
(t49, EqreAST, (cl  ((2 = 2))), [], [])
(t50, ThresoAST, (cl  ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [ t48 t49], [])
(t51, LageAST, (cl  ((op_3 <= op_2)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 -1])
(t52, ResoAST, (cl  ((not (op_2 <= op_3))) (op_1) (((2 * op_2) = (1 + (2 * op_3)))) ((not (imp  op_1 op_0)))), [ t51 t38 t50 t23 t25 t22 t21 t47], [])
(t53, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 1])
(t54, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2)))) (((2 * op_2) <= (2 * op_3)))), [], [])
(t56, ResoAST, (cl  (op_1) ((op_2 <= op_3))), [ t54 t19 t22 t25 t23 t53 t32 t40], [])
(t57, LageAST, (cl  ((not (op_2 <= op_3))) ((not ((1 + (2 * op_3)) <= (2 * op_2))))), [], [ 2 1])
(t58, EqcpAST, (cl  ((not ((2 * op_3) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2))))), [], [])
(t59, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3))))), [], [])
(t60, ThresoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [ t59 t50], [])
(t61, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t58 t60], [])
(t62, EqreAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t63, ThresoAST, (cl  (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t61 t62], [])
(t64, ResoAST, (cl  (op_1)), [ t57 t63 t38 t39 t33 t52 t56 t29], [])
(t65, ResoAST, (cl  ((imp  op_0 op_1))), [ t28 t64], [])
(t66, ResoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_3))))), [ t63 t38 t57 t40 t54 t39 t33], [])
(t67, ResoAST, (cl  ((op_2 = op_3)) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2))))), [ t40 t38 t54 t39], [])
(t68, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3))))), [ t34 t32 t67 t31 t30 t22 t20 t66 t65 t64], [])
(t69, ResoAST, (cl  ((not (op_2 = op_3)))), [ t50 t68], [])
(t70, LageAST, (cl  ((op_3 <= op_2)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 1])
(t71, ResoAST, (cl  (((2 * op_3) <= (2 * op_2)))), [ t70 t24 t25 t38 t22 t40 t36 t32 t64 t69], [])
(t72, ResoAST, (cl  ((op_3 <= op_2))), [ t39 t71], [])
(t73, ResoAST, (cl  ((not (op_2 <= op_3)))), [ t38 t72 t69], [])
(t74, LageAST, (cl  ((op_2 <= op_3)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t75, ResoAST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t74 t73], [])
(t76, ResoAST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t24 t75 t64], [])
(t77, ResoAST, (cl  ((not op_0))), [ t25 t76], [])
(t78, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t22 t77], [])
(t79, ResoAST, (cl  (((2 * op_2) = (1 + (2 * op_3))))), [ t20 t78 t64], [])
(t80, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t81, ResoAST, (cl ), [ t80 t79 t73], [])

Certif after process_subproof: 
(h1, AssumeAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x221, Equn1AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [])
(x219, AndnAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x223, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x219 x221], [])
(x222, Equn2AST, (cl  (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x220, AndnAST, (cl  ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x224, ResoAST, (cl  ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x220 x222], [])
(t2, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) (((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x223 x224], [])
(t3, Equp2AST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t5, ThresoAST, (cl  ((not ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t3], [])
(t6, ThresoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ h1 t2 t5], [])
(t7, SumsimpAST, (cl  ((((2 * op_2) + 1) = (1 + (2 * op_2))))), [], [])
(t8, SumsimpAST, (cl  ((((2 * op_3) + 1) = (1 + (2 * op_3))))), [], [])
(x1, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x2, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t8 x1], [])
(x3, Equp1AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((2 * op_2) + 1)) ((not ((2 * op_3) + 1)))), [], [])
(x4, Equn2AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((1 + (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x5, Equn2AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x6, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((1 + (2 * op_2)) = (1 + (2 * op_3)))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x2 x3 x4 x5], [])
(x7, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x8, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t8 x7], [])
(x9, Equn2AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) (((2 * op_2) + 1)) (((2 * op_3) + 1))), [], [])
(x10, Equp1AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x11, Equn1AST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x12, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1)) ((1 + (2 * op_2)))), [ x8 x9 x10 x11], [])
(x13, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [], [])
(x14, ResoAST, (cl  (((2 * op_2) + 1)) ((not (1 + (2 * op_2))))), [ t7 x13], [])
(x15, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) + 1))), [ x6 x12 x14], [])
(x16, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (1 + (2 * op_2))))) ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [], [])
(x17, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((1 + (2 * op_2)))), [ t7 x16], [])
(x18, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((1 + (2 * op_2)))), [ x15 x17], [])
(x19, Equn1AST, (cl  (((1 + (2 * op_2)) = (1 + (2 * op_3)))) ((not (1 + (2 * op_2)))) ((not (1 + (2 * op_3))))), [], [])
(x20, Equn1AST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((2 * op_2) + 1))) ((not ((2 * op_3) + 1)))), [], [])
(x21, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x11 x19 x20 x8 x18 x15], [])
(x22, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x21 x2], [])
(x23, Equp2AST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) ((not ((2 * op_2) + 1))) (((2 * op_3) + 1))), [], [])
(x24, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [ x23 x21 x15], [])
(x25, Equp2AST, (cl  ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not (1 + (2 * op_2)))) ((1 + (2 * op_3)))), [], [])
(x26, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x25 x22 x18], [])
(t9, ResoAST, (cl  (((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x5 x24 x26], [])
(x30, Equp1AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((2 * op_3)) ((not (1 + (2 * op_2))))), [], [])
(x31, ResoAST, (cl  ((2 * op_3)) ((not (1 + (2 * op_2))))), [ t7 x30], [])
(x32, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_2) + 1)) ((not (2 * op_3)))), [], [])
(x33, Equn2AST, (cl  (((2 * op_3) = (1 + (2 * op_2)))) ((2 * op_3)) ((1 + (2 * op_2)))), [], [])
(x34, Equn2AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((((2 * op_2) + 1) = (2 * op_3))) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(x35, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_3) = (1 + (2 * op_2)))) (((2 * op_2) + 1)) ((2 * op_3))), [ x31 x32 x33 x34], [])
(x36, Equp2AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not (2 * op_3))) ((1 + (2 * op_2)))), [], [])
(x37, ResoAST, (cl  ((not (2 * op_3))) ((1 + (2 * op_2)))), [ t7 x36], [])
(x38, Equn2AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) (((2 * op_2) + 1)) ((2 * op_3))), [], [])
(x39, Equp1AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((2 * op_3)) ((not (1 + (2 * op_2))))), [], [])
(x40, Equn1AST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x41, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) + 1)) ((2 * op_3))), [ x37 x38 x39 x40], [])
(x42, Equp1AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_2) + 1)) ((not (2 * op_3)))), [], [])
(x43, ResoAST, (cl  (((2 * op_2) + 1)) ((not (2 * op_3)))), [ x27 x42], [])
(x44, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) + 1))), [ x35 x41 x43], [])
(x45, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_2) + 1))) ((2 * op_3))), [], [])
(x46, ResoAST, (cl  ((not ((2 * op_2) + 1))) ((2 * op_3))), [ x27 x45], [])
(x47, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((2 * op_3))), [ x44 x46], [])
(x48, Equn1AST, (cl  (((2 * op_3) = (1 + (2 * op_2)))) ((not (2 * op_3))) ((not (1 + (2 * op_2))))), [], [])
(x49, Equn1AST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_2) + 1))) ((not (2 * op_3)))), [], [])
(x50, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (2 * op_3)))), [ x40 x48 x49 x37 x47 x44], [])
(x51, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (1 + (2 * op_2))))), [ x50 x31], [])
(x52, Equp2AST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) ((not ((2 * op_2) + 1))) ((2 * op_3))), [], [])
(x53, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not (((2 * op_2) + 1) = (2 * op_3))))), [ x52 x50 x44], [])
(x54, Equp2AST, (cl  ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not (2 * op_3))) ((1 + (2 * op_2)))), [], [])
(x55, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2))))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [ x54 x51 x47], [])
(t10, ResoAST, (cl  (((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))), [ x34 x53 x55], [])
(x59, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))) ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(x60, ResoAST, (cl  ((not (((2 * op_2) + 1) = (2 * op_3)))) (((2 * op_3) = (1 + (2 * op_2))))), [ x59 t10], [])
(x61, Itep1AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) (op_1) ((((2 * op_2) + 1) = (2 * op_3)))), [], [])
(x62, Iten1AST, (cl  ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))) (op_1) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x63, Equn2AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x64, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))) (op_1) (op_1)), [ x60 x61 x62 x63], [])
(x65, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = (2 * op_3)) = ((2 * op_3) = (1 + (2 * op_2)))))) ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x66, ResoAST, (cl  ((((2 * op_2) + 1) = (2 * op_3))) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [ x65 t10], [])
(x67, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x68, ResoAST, (cl  (op_1) ((not op_1))), [ x67 x56], [])
(x69, Iten1AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) (op_1) ((not (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x70, Itep1AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(x71, Equn1AST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [], [])
(x72, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1)), [ x66 x69 x70 x71 x64 x68], [])
(x73, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x74, ResoAST, (cl  ((not op_1)) (op_1)), [ x73 x56], [])
(x75, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1)), [ x74 x72], [])
(x76, Equp1AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x77, ResoAST, (cl  ((((2 * op_2) + 1) = ((2 * op_3) + 1))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x76 t9], [])
(x78, Itep2AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not op_1)) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x79, Iten2AST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not op_1)) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1))))), [], [])
(x80, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x77 x78 x79 x63 x75 x72], [])
(x81, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x71 x80], [])
(x82, Itep2AST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((not op_1)) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [], [])
(x83, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((((2 * op_2) + 1) = ((2 * op_3) + 1)))), [ x82 x80 x72], [])
(x84, Iten2AST, (cl  ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))) ((not op_1)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [])
(x85, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ x84 x81 x75], [])
(x86, Equp2AST, (cl  ((not ((((2 * op_2) + 1) = ((2 * op_3) + 1)) = ((1 + (2 * op_2)) = (1 + (2 * op_3)))))) ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x87, ResoAST, (cl  ((not (((2 * op_2) + 1) = ((2 * op_3) + 1)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ x86 t9], [])
(t11, ResoAST, (cl  (((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x87 x83 x85], [])
(x91, Equp1AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [], [])
(x92, ResoAST, (cl  (((2 * op_3) + 1)) ((not (1 + (2 * op_3))))), [ t8 x91], [])
(x93, Equp1AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((2 * op_2)) ((not ((2 * op_3) + 1)))), [], [])
(x94, Equn2AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((1 + (2 * op_3)))), [], [])
(x95, Equn2AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x96, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3)))) ((2 * op_2)) ((2 * op_2))), [ x92 x93 x94 x95], [])
(x97, Equp2AST, (cl  ((not (((2 * op_3) + 1) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [], [])
(x98, ResoAST, (cl  ((not ((2 * op_3) + 1))) ((1 + (2 * op_3)))), [ t8 x97], [])
(x99, Equn2AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((2 * op_2)) (((2 * op_3) + 1))), [], [])
(x100, Equp1AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((not (1 + (2 * op_3))))), [], [])
(x101, Equn1AST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x102, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2)) ((2 * op_2))), [ x98 x99 x100 x101], [])
(x103, Equp1AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((2 * op_2)) ((not (2 * op_2)))), [], [])
(x104, ResoAST, (cl  ((2 * op_2)) ((not (2 * op_2)))), [ x88 x103], [])
(x105, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x96 x102 x104], [])
(x106, Equp2AST, (cl  ((not ((2 * op_2) = (2 * op_2)))) ((not (2 * op_2))) ((2 * op_2))), [], [])
(x107, ResoAST, (cl  ((not (2 * op_2))) ((2 * op_2))), [ x88 x106], [])
(x108, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((2 * op_2))), [ x105 x107], [])
(x109, Equn1AST, (cl  (((2 * op_2) = (1 + (2 * op_3)))) ((not (2 * op_2))) ((not (1 + (2 * op_3))))), [], [])
(x110, Equn1AST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not (2 * op_2))) ((not ((2 * op_3) + 1)))), [], [])
(x111, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_3) + 1)))), [ x101 x109 x110 x98 x108 x105], [])
(x112, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not (1 + (2 * op_3))))), [ x111 x92], [])
(x113, Equp2AST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) ((not (2 * op_2))) (((2 * op_3) + 1))), [], [])
(x114, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [ x113 x111 x105], [])
(x115, Equp2AST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (2 * op_2))) ((1 + (2 * op_3)))), [], [])
(x116, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x115 x112 x108], [])
(t12, ResoAST, (cl  ((((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))), [ x95 x114 x116], [])
(x123, Equp2AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = ((2 * op_2) = (2 * op_3))))) ((not ((2 * op_2) = (2 * op_3)))) (((2 * op_2) = (2 * op_3)))), [], [])
(x124, ResoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) (((2 * op_2) = (2 * op_3)))), [ x123 x117], [])
(x125, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(x126, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x127, Equn2AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [], [])
(x128, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) (op_1)), [ x124 x125 x126 x127], [])
(x129, Equp1AST, (cl  ((not (((2 * op_2) = (2 * op_3)) = ((2 * op_2) = (2 * op_3))))) (((2 * op_2) = (2 * op_3))) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x130, ResoAST, (cl  (((2 * op_2) = (2 * op_3))) ((not ((2 * op_2) = (2 * op_3))))), [ x129 x117], [])
(x131, Equp1AST, (cl  ((not (op_1 = op_1))) (op_1) ((not op_1))), [], [])
(x132, ResoAST, (cl  (op_1) ((not op_1))), [ x131 x120], [])
(x133, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x134, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(x135, Equn1AST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x136, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1)), [ x130 x133 x134 x135 x128 x132], [])
(x137, Equp2AST, (cl  ((not (op_1 = op_1))) ((not op_1)) (op_1)), [], [])
(x138, ResoAST, (cl  ((not op_1)) (op_1)), [ x137 x120], [])
(x139, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1)), [ x138 x136], [])
(x140, Equp1AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x141, ResoAST, (cl  (((2 * op_2) = ((2 * op_3) + 1))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x140 t12], [])
(x142, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x143, Iten2AST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not op_1)) ((not ((2 * op_2) = ((2 * op_3) + 1))))), [], [])
(x144, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [ x141 x142 x143 x127 x139 x136], [])
(x145, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x135 x144], [])
(x146, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = ((2 * op_3) + 1)))), [], [])
(x147, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (((2 * op_2) = ((2 * op_3) + 1)))), [ x146 x144 x136], [])
(x148, Iten2AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) ((not op_1)) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [])
(x149, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [ x148 x145 x139], [])
(x150, Equp2AST, (cl  ((not (((2 * op_2) = ((2 * op_3) + 1)) = ((2 * op_2) = (1 + (2 * op_3)))))) ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(x151, ResoAST, (cl  ((not ((2 * op_2) = ((2 * op_3) + 1)))) (((2 * op_2) = (1 + (2 * op_3))))), [ x150 t12], [])
(t13, ResoAST, (cl  (((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x151 x147 x149], [])
(x155, Equp2AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [], [])
(x156, ResoAST, (cl  ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ x155 t13], [])
(x157, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))), [], [])
(x158, Iten1AST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_0) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x159, Equn2AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x160, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_0) (op_0)), [ x156 x157 x158 x159], [])
(x161, Equp1AST, (cl  ((not ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))) = (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x162, ResoAST, (cl  ((ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x161 t13], [])
(x163, Equp1AST, (cl  ((not (op_0 = op_0))) (op_0) ((not op_0))), [], [])
(x164, ResoAST, (cl  (op_0) ((not op_0))), [ x163 x152], [])
(x165, Iten1AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) (op_0) ((not (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x166, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [], [])
(x167, Equn1AST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [], [])
(x168, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) (op_0)), [ x162 x165 x166 x167 x160 x164], [])
(x169, Equp2AST, (cl  ((not (op_0 = op_0))) ((not op_0)) (op_0)), [], [])
(x170, ResoAST, (cl  ((not op_0)) (op_0)), [ x169 x152], [])
(x171, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) (op_0)), [ x170 x168], [])
(x172, Equp1AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [], [])
(x173, ResoAST, (cl  ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x172 t11], [])
(x174, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x175, Iten2AST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not op_0)) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3)))))), [], [])
(x176, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x173 x174 x175 x159 x171 x168], [])
(x177, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ x167 x176], [])
(x178, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [], [])
(x179, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))), [ x178 x176 x168], [])
(x180, Iten2AST, (cl  ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_0)) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [], [])
(x181, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ x180 x177 x171], [])
(x182, Equp2AST, (cl  ((not ((ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) = (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))) ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(x183, ResoAST, (cl  ((not (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))))) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ x182 t11], [])
(t14, ResoAST, (cl  (((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ x183 x179 x181], [])
(x185, Equn1AST, (cl  (((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x186, Equn2AST, (cl  (((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x184, ResoAST, (cl  (((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) = (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x185 x186], [])
(x187, AndnAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x192, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [ 1])
(x188, Equp1AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [], [])
(x189, ResoAST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))), [ x188 t14], [])
(x190, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [ 0])
(x191, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x189 x190], [])
(x193, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x187 x192 x191], [])
(x194, Equn2AST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x195, ResoAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x193 x194], [])
(x196, AndnAST, (cl  ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x201, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [ 1])
(x197, Equp2AST, (cl  ((not ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) = (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(x198, ResoAST, (cl  ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x197 t14], [])
(x199, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [ 0])
(x200, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x198 x199], [])
(x202, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x196 x201 x200], [])
(x203, Equn1AST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [])
(x204, ResoAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x202 x203], [])
(t15, ResoAST, (cl  (((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x195 x204], [])
(t16, Equp2AST, (cl  ((not ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) = (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(t17, ThresoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t6 t15 t16], [])
(x231, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [], [])
(t18, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ x231 t17], [])
(t19, Itep1AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) (op_1) (((2 * op_2) = (2 * op_3)))), [], [])
(t20, Itep2AST, (cl  ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))) ((not op_1)) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t21, Iten1AST, (cl  ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (op_1) ((not ((2 * op_2) = (2 * op_3))))), [], [])
(x232, Itep1AST, (cl  ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) (op_0) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(t22, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) (op_0) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ x232 t18], [])
(t23, Itep1AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) (op_1) (((2 * op_3) = (1 + (2 * op_2))))), [], [])
(t24, Itep2AST, (cl  ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))) ((not op_1)) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(x233, Itep2AST, (cl  ((not (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))) ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [], [])
(t25, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not op_0)) ((ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))))), [ x233 t18], [])
(x234, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2)))) (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(t26, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x234 t17], [])
(t27, Impn1AST, (cl  ((imp  op_0 op_1)) (op_0)), [], [])
(t28, Impn2AST, (cl  ((imp  op_0 op_1)) ((not op_1))), [], [])
(t29, Impn1AST, (cl  ((imp  op_1 op_0)) (op_1)), [], [])
(t30, Impn2AST, (cl  ((imp  op_1 op_0)) ((not op_0))), [], [])
(x235, AndnAST, (cl  ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))) ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [], [])
(t31, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (imp  op_0 op_1))) ((not (imp  op_1 op_0))) ((not (op_2 = op_3)))), [ x235 t26], [])
(t32, LageAST, (cl  (((2 * op_2) <= (2 * op_3))) (((2 * op_3) <= (2 * op_2)))), [], [ 1 1])
(t33, LageAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 1 1])
(t34, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) <= (2 * op_3)))) (((2 * op_3) <= (2 * op_2)))), [], [])
(t36, ResoAST, (cl  (((2 * op_3) <= (2 * op_2))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t34 t19 t20 t33 t32], [])
(t37, LadeAST, (cl  ((or  (op_2 = op_3) (not (op_2 <= op_3)) (not (op_3 <= op_2))))), [], [])
(t38, OrAST, (cl  ((op_2 = op_3)) ((not (op_2 <= op_3))) ((not (op_3 <= op_2)))), [ t37], [])
(t39, LageAST, (cl  ((not ((2 * op_3) <= (2 * op_2)))) ((op_3 <= op_2))), [], [ 1 2])
(t40, LageAST, (cl  ((not ((2 * op_2) <= (2 * op_3)))) ((op_2 <= op_3))), [], [ 1 2])
(t41, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3))))) (((2 * op_2) = (1 + (2 * op_3))))), [], [])
(t42, EqcoAST, (cl  ((not (1 = 1))) ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [], [])
(t43, EqreAST, (cl  ((1 = 1))), [], [])
(t44, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) (((1 + (2 * op_2)) = (1 + (2 * op_3))))), [ t42 t43], [])
(t45, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) = (1 + (2 * op_2))))) (((2 * op_2) = (1 + (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3))))), [ t41 t44], [])
(t47, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) (((2 * op_2) = (1 + (2 * op_3)))) (op_1) ((not (imp  op_1 op_0))) ((not (op_2 <= op_3))) ((not (ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3)))))), [ t45 t23 t25 t27 t31 t38 t39 t19 t36], [])
(t48, EqcoAST, (cl  ((not (2 = 2))) ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [], [])
(t49, EqreAST, (cl  ((2 = 2))), [], [])
(t50, ThresoAST, (cl  ((not (op_2 = op_3))) (((2 * op_2) = (2 * op_3)))), [ t48 t49], [])
(t51, LageAST, (cl  ((op_3 <= op_2)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 -1])
(t52, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (op_2 <= op_3))) (op_1) (((2 * op_2) = (1 + (2 * op_3)))) ((not (imp  op_1 op_0)))), [ t51 t38 t50 t23 t25 t22 t21 t47], [])
(t53, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_3) = (1 + (2 * op_2)))))), [], [ 2 1])
(t54, EqcpAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2)))) (((2 * op_2) <= (2 * op_3)))), [], [])
(t56, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) (op_1) ((op_2 <= op_3))), [ t54 t19 t22 t25 t23 t53 t32 t40], [])
(t57, LageAST, (cl  ((not (op_2 <= op_3))) ((not ((1 + (2 * op_3)) <= (2 * op_2))))), [], [ 2 1])
(t58, EqcpAST, (cl  ((not ((2 * op_3) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2))))), [], [])
(t59, EqtrAST, (cl  ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3))))), [], [])
(t60, ThresoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) (((2 * op_3) = (1 + (2 * op_3)))) ((not (op_2 = op_3)))), [ t59 t50], [])
(t61, ThresoAST, (cl  ((not ((2 * op_2) = (2 * op_2)))) (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t58 t60], [])
(t62, EqreAST, (cl  (((2 * op_2) = (2 * op_2)))), [], [])
(t63, ThresoAST, (cl  (((1 + (2 * op_3)) <= (2 * op_2))) ((not ((2 * op_3) <= (2 * op_2)))) ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not (op_2 = op_3)))), [ t61 t62], [])
(t64, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) (op_1)), [ t57 t63 t38 t39 t33 t52 t56 t29], [])
(t65, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((imp  op_0 op_1))), [ t28 t64], [])
(t66, ResoAST, (cl  ((not ((2 * op_2) = (1 + (2 * op_3))))) ((not ((2 * op_2) = (2 * op_3))))), [ t63 t38 t57 t40 t54 t39 t33], [])
(t67, ResoAST, (cl  ((op_2 = op_3)) ((not ((2 * op_2) = (2 * op_3)))) ((not ((2 * op_3) <= (2 * op_2))))), [ t40 t38 t54 t39], [])
(t68, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not ((2 * op_2) = (2 * op_3))))), [ t34 t32 t67 t31 t30 t22 t20 t66 t65 t64], [])
(t69, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (op_2 = op_3)))), [ t50 t68], [])
(t70, LageAST, (cl  ((op_3 <= op_2)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 1])
(t71, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) (((2 * op_3) <= (2 * op_2)))), [ t70 t24 t25 t38 t22 t40 t36 t32 t64 t69], [])
(t72, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((op_3 <= op_2))), [ t39 t71], [])
(t73, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (op_2 <= op_3)))), [ t38 t72 t69], [])
(t74, LageAST, (cl  ((op_2 <= op_3)) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t75, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not ((1 + (2 * op_2)) = (1 + (2 * op_3)))))), [ t74 t73], [])
(t76, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (ite  op_1 ((1 + (2 * op_2)) = (1 + (2 * op_3))) ((2 * op_3) = (1 + (2 * op_2))))))), [ t24 t75 t64], [])
(t77, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not op_0))), [ t25 t76], [])
(t78, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((ite  op_1 ((2 * op_2) = (1 + (2 * op_3))) ((2 * op_2) = (2 * op_3))))), [ t22 t77], [])
(t79, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) (((2 * op_2) = (1 + (2 * op_3))))), [ t20 t78 t64], [])
(t80, LageAST, (cl  ((op_2 <= op_3)) ((not ((2 * op_2) = (1 + (2 * op_3)))))), [], [ 2 -1])
(t81, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))))), [ t80 t79 t73], [])
(x228, AndpAST, (cl  ((not (and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [ 0])
(x227, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ t81 x228], [])
(x213, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [ 0])
(x214, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x213 x227], [])
(x215, AndpAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [ 1])
(x216, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x215 x227], [])
(x217, ImppAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))), [], [])
(x218, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x217 x214 x216], [])
(x229, AndpAST, (cl  ((not (and  (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [ 1])
(x230, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))) ((not (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ t81 x229], [])
(x236, ResoAST, (cl  ((and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))))), [ x218 x230], [])
(x238, AndpAST, (cl  ((not (and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))))) ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [ 0])
(x237, ResoAST, (cl  ((not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x236 x238], [])
(x206, Impn1AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [], [])
(x208, ResoAST, (cl  ((ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))), [ x206 x237], [])
(x207, Impn2AST, (cl  ((imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [], [])
(x209, ResoAST, (cl  ((not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))), [ x207 x237], [])
(x210, AndnAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))) ((not (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))))) ((not (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [], [])
(x211, ResoAST, (cl  ((and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))), [ x210 x208 x209], [])
(x239, AndpAST, (cl  ((not (and  (not (imp  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))) (not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3)))))))) ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [], [ 1])
(x240, ResoAST, (cl  ((not (and  (ite  op_0 (ite  op_1 (((2 * op_2) + 1) = ((2 * op_3) + 1)) (((2 * op_2) + 1) = (2 * op_3))) (ite  op_1 ((2 * op_2) = ((2 * op_3) + 1)) ((2 * op_2) = (2 * op_3)))) (not (and  (imp  op_0 op_1) (imp  op_1 op_0) (op_2 = op_3))))))), [ x236 x239], [])
(x241, ResoAST, (cl ), [ x211 x240], [])

