Certif before preprocessing: 
(a0, AssumeAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t3, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t4, HoleAST, (cl  (((op_1 + 1) = (1 + op_1)))), [], [ ARITH_POLY_NORM ((op_1 + 1) = (1 + op_1))])
(t5, CongAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))), [ t3 t4], [])
(t6, HoleAST, (cl  (((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))), [], [ ARITH_POLY_NORM ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0)))])
(t7, TransAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))), [ t5 t6], [])
(t8, ReflAST, (cl  (((op_2 ( op_1)) = (op_2 ( op_1))))), [], [])
(t9, HoleAST, (cl  (((op_0 - 1) = (op_0 + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((op_0 - 1) = (op_0 + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(t11, CongAST, (cl  (((op_0 + ((-1) * 1)) = (op_0 + (-1))))), [ t3 t10], [])
(t12, HoleAST, (cl  (((op_0 + (-1)) = ((-1) + op_0)))), [], [ ARITH_POLY_NORM ((op_0 + (-1)) = ((-1) + op_0))])
(t13, TransAST, (cl  (((op_0 + ((-1) * 1)) = ((-1) + op_0)))), [ t11 t12], [])
(t14, TransAST, (cl  (((op_0 - 1) = ((-1) + op_0)))), [ t9 t13], [])
(t15, CongAST, (cl  (((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))), [ t14], [])
(t16, CongAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t8 t15], [])
(t17, CongAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t7 t16], [])
(t18, CongAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))), [ t17], [])
(t19, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((op_1 = ((-1) + op_0)))), [ t19], [])
(t21, CongAST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ t20], [])
(t22, ReflAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(t23, CongAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ t21 t22], [])
(t24, CongAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ t23], [])
(t25, AllsimpAST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))), [], [ eq_simplify1 (op_2 ( ((-1) + op_0)))])
(t26, CongAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))), [ t25], [])
(t27, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t28, TransAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))), [ t26 t27], [])
(t29, TransAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))), [ t24 t28], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t31], [])
(t33, ResoAST, (cl  ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl ), [ t33 t34], [])

Certif after storing shared terms: 
(a0, AssumeAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t3, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t4, HoleAST, (cl  (((op_1 + 1) = (1 + op_1)))), [], [ ARITH_POLY_NORM ((op_1 + 1) = (1 + op_1))])
(t5, CongAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))), [ t3 t4], [])
(t6, HoleAST, (cl  (((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))), [], [ ARITH_POLY_NORM ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0)))])
(t7, TransAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))), [ t5 t6], [])
(t8, ReflAST, (cl  (((op_2 ( op_1)) = (op_2 ( op_1))))), [], [])
(t9, HoleAST, (cl  (((op_0 - 1) = (op_0 + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((op_0 - 1) = (op_0 + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(t11, CongAST, (cl  (((op_0 + ((-1) * 1)) = (op_0 + (-1))))), [ t3 t10], [])
(t12, HoleAST, (cl  (((op_0 + (-1)) = ((-1) + op_0)))), [], [ ARITH_POLY_NORM ((op_0 + (-1)) = ((-1) + op_0))])
(t13, TransAST, (cl  (((op_0 + ((-1) * 1)) = ((-1) + op_0)))), [ t11 t12], [])
(t14, TransAST, (cl  (((op_0 - 1) = ((-1) + op_0)))), [ t9 t13], [])
(t15, CongAST, (cl  (((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))), [ t14], [])
(t16, CongAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t8 t15], [])
(t17, CongAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t7 t16], [])
(t18, CongAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))), [ t17], [])
(t19, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((op_1 = ((-1) + op_0)))), [ t19], [])
(t21, CongAST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ t20], [])
(t22, ReflAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(t23, CongAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ t21 t22], [])
(t24, CongAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ t23], [])
(t25, AllsimpAST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))), [], [ eq_simplify1 (op_2 ( ((-1) + op_0)))])
(t26, CongAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))), [ t25], [])
(t27, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t28, TransAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))), [ t26 t27], [])
(t29, TransAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))), [ t24 t28], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t31], [])
(t33, ResoAST, (cl  ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl ), [ t33 t34], [])

Certif after process_fins: 
(a0, AssumeAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t3, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t4, HoleAST, (cl  (((op_1 + 1) = (1 + op_1)))), [], [ ARITH_POLY_NORM ((op_1 + 1) = (1 + op_1))])
(t5, CongAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))), [ t3 t4], [])
(t6, HoleAST, (cl  (((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))), [], [ ARITH_POLY_NORM ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0)))])
(t7, TransAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))), [ t5 t6], [])
(t8, ReflAST, (cl  (((op_2 ( op_1)) = (op_2 ( op_1))))), [], [])
(t9, HoleAST, (cl  (((op_0 - 1) = (op_0 + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((op_0 - 1) = (op_0 + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(t11, CongAST, (cl  (((op_0 + ((-1) * 1)) = (op_0 + (-1))))), [ t3 t10], [])
(t12, HoleAST, (cl  (((op_0 + (-1)) = ((-1) + op_0)))), [], [ ARITH_POLY_NORM ((op_0 + (-1)) = ((-1) + op_0))])
(t13, TransAST, (cl  (((op_0 + ((-1) * 1)) = ((-1) + op_0)))), [ t11 t12], [])
(t14, TransAST, (cl  (((op_0 - 1) = ((-1) + op_0)))), [ t9 t13], [])
(t15, CongAST, (cl  (((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))), [ t14], [])
(t16, CongAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t8 t15], [])
(t17, CongAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t7 t16], [])
(t18, CongAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))), [ t17], [])
(t19, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((op_1 = ((-1) + op_0)))), [ t19], [])
(t21, CongAST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ t20], [])
(t22, ReflAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(t23, CongAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ t21 t22], [])
(t24, CongAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ t23], [])
(t25, AllsimpAST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))), [], [ eq_simplify1 (op_2 ( ((-1) + op_0)))])
(t26, CongAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))), [ t25], [])
(t27, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t28, TransAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))), [ t26 t27], [])
(t29, TransAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))), [ t24 t28], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t31], [])
(t33, ResoAST, (cl  ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl ), [ t33 t34], [])

Certif after process_hole: 
(a0, AssumeAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t3, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t4, ArithpolynormAST, (cl  (((op_1 + 1) = (1 + op_1)))), [], [ ARITH_POLY_NORM ((op_1 + 1) = (1 + op_1))])
(t5, CongAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))), [ t3 t4], [])
(t6, ArithpolynormAST, (cl  (((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))), [], [ ARITH_POLY_NORM ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0)))])
(t7, TransAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))), [ t5 t6], [])
(t8, ReflAST, (cl  (((op_2 ( op_1)) = (op_2 ( op_1))))), [], [])
(t9, ArithpolynormAST, (cl  (((op_0 - 1) = (op_0 + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((op_0 - 1) = (op_0 + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(t11, CongAST, (cl  (((op_0 + ((-1) * 1)) = (op_0 + (-1))))), [ t3 t10], [])
(t12, ArithpolynormAST, (cl  (((op_0 + (-1)) = ((-1) + op_0)))), [], [ ARITH_POLY_NORM ((op_0 + (-1)) = ((-1) + op_0))])
(t13, TransAST, (cl  (((op_0 + ((-1) * 1)) = ((-1) + op_0)))), [ t11 t12], [])
(t14, TransAST, (cl  (((op_0 - 1) = ((-1) + op_0)))), [ t9 t13], [])
(t15, CongAST, (cl  (((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))), [ t14], [])
(t16, CongAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t8 t15], [])
(t17, CongAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t7 t16], [])
(t18, CongAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))), [ t17], [])
(t19, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((op_1 = ((-1) + op_0)))), [ t19], [])
(t21, CongAST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ t20], [])
(t22, ReflAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(t23, CongAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ t21 t22], [])
(t24, CongAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ t23], [])
(t25, AllsimpAST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))), [], [ eq_simplify1 (op_2 ( ((-1) + op_0)))])
(t26, CongAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))), [ t25], [])
(t27, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t28, TransAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))), [ t26 t27], [])
(t29, TransAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))), [ t24 t28], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t31], [])
(t33, ResoAST, (cl  ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl ), [ t33 t34], [])

Certif after process_notnot: 
(a0, AssumeAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t3, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t4, ArithpolynormAST, (cl  (((op_1 + 1) = (1 + op_1)))), [], [ ARITH_POLY_NORM ((op_1 + 1) = (1 + op_1))])
(t5, CongAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))), [ t3 t4], [])
(t6, ArithpolynormAST, (cl  (((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))), [], [ ARITH_POLY_NORM ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0)))])
(t7, TransAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))), [ t5 t6], [])
(t8, ReflAST, (cl  (((op_2 ( op_1)) = (op_2 ( op_1))))), [], [])
(t9, ArithpolynormAST, (cl  (((op_0 - 1) = (op_0 + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((op_0 - 1) = (op_0 + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(t11, CongAST, (cl  (((op_0 + ((-1) * 1)) = (op_0 + (-1))))), [ t3 t10], [])
(t12, ArithpolynormAST, (cl  (((op_0 + (-1)) = ((-1) + op_0)))), [], [ ARITH_POLY_NORM ((op_0 + (-1)) = ((-1) + op_0))])
(t13, TransAST, (cl  (((op_0 + ((-1) * 1)) = ((-1) + op_0)))), [ t11 t12], [])
(t14, TransAST, (cl  (((op_0 - 1) = ((-1) + op_0)))), [ t9 t13], [])
(t15, CongAST, (cl  (((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))), [ t14], [])
(t16, CongAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t8 t15], [])
(t17, CongAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t7 t16], [])
(t18, CongAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))), [ t17], [])
(t19, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((op_1 = ((-1) + op_0)))), [ t19], [])
(t21, CongAST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ t20], [])
(t22, ReflAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(t23, CongAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ t21 t22], [])
(t24, CongAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ t23], [])
(t25, AllsimpAST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))), [], [ eq_simplify1 (op_2 ( ((-1) + op_0)))])
(t26, CongAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))), [ t25], [])
(t27, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t28, TransAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))), [ t26 t27], [])
(t29, TransAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))), [ t24 t28], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t31], [])
(t33, ResoAST, (cl  ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl ), [ t33 t34], [])

Certif after process_same: 
(a0, AssumeAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t3, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t4, ArithpolynormAST, (cl  (((op_1 + 1) = (1 + op_1)))), [], [ ARITH_POLY_NORM ((op_1 + 1) = (1 + op_1))])
(t5, CongAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))), [ t3 t4], [])
(t6, ArithpolynormAST, (cl  (((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))), [], [ ARITH_POLY_NORM ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0)))])
(t7, TransAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))), [ t5 t6], [])
(t8, ReflAST, (cl  (((op_2 ( op_1)) = (op_2 ( op_1))))), [], [])
(t9, ArithpolynormAST, (cl  (((op_0 - 1) = (op_0 + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((op_0 - 1) = (op_0 + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(t11, CongAST, (cl  (((op_0 + ((-1) * 1)) = (op_0 + (-1))))), [ t3 t10], [])
(t12, ArithpolynormAST, (cl  (((op_0 + (-1)) = ((-1) + op_0)))), [], [ ARITH_POLY_NORM ((op_0 + (-1)) = ((-1) + op_0))])
(t13, TransAST, (cl  (((op_0 + ((-1) * 1)) = ((-1) + op_0)))), [ t11 t12], [])
(t14, TransAST, (cl  (((op_0 - 1) = ((-1) + op_0)))), [ t9 t13], [])
(t15, CongAST, (cl  (((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))), [ t14], [])
(t16, CongAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t8 t15], [])
(t17, CongAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t7 t16], [])
(t18, CongAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))), [ t17], [])
(t19, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((op_1 = ((-1) + op_0)))), [ t19], [])
(t21, CongAST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ t20], [])
(t22, ReflAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(t23, CongAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ t21 t22], [])
(t24, CongAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ t23], [])
(t25, AllsimpAST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))), [], [ eq_simplify1 (op_2 ( ((-1) + op_0)))])
(t26, CongAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))), [ t25], [])
(t27, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t28, TransAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))), [ t26 t27], [])
(t29, TransAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))), [ t24 t28], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t31], [])
(t33, ResoAST, (cl  ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl ), [ t33 t34], [])

Certif after process_cong: 
(a0, AssumeAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t3, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t4, ArithpolynormAST, (cl  (((op_1 + 1) = (1 + op_1)))), [], [ ARITH_POLY_NORM ((op_1 + 1) = (1 + op_1))])
(x1, Equp1AST, (cl  ((not ((op_1 + 1) = (1 + op_1)))) ((op_1 + 1)) ((not (1 + op_1)))), [], [])
(x2, ResoAST, (cl  ((op_1 + 1)) ((not (1 + op_1)))), [ t4 x1], [])
(x3, Equp1AST, (cl  ((not (op_0 = (op_1 + 1)))) (op_0) ((not (op_1 + 1)))), [], [])
(x4, Equn2AST, (cl  ((op_0 = (1 + op_1))) (op_0) ((1 + op_1))), [], [])
(x5, Equn2AST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((op_0 = (op_1 + 1))) ((op_0 = (1 + op_1)))), [], [])
(x6, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((op_0 = (1 + op_1))) (op_0) (op_0)), [ x2 x3 x4 x5], [])
(x7, Equp2AST, (cl  ((not ((op_1 + 1) = (1 + op_1)))) ((not (op_1 + 1))) ((1 + op_1))), [], [])
(x8, ResoAST, (cl  ((not (op_1 + 1))) ((1 + op_1))), [ t4 x7], [])
(x9, Equn2AST, (cl  ((op_0 = (op_1 + 1))) (op_0) ((op_1 + 1))), [], [])
(x10, Equp1AST, (cl  ((not (op_0 = (1 + op_1)))) (op_0) ((not (1 + op_1)))), [], [])
(x11, Equn1AST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (op_1 + 1)))) ((not (op_0 = (1 + op_1))))), [], [])
(x12, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (1 + op_1)))) (op_0) (op_0)), [ x8 x9 x10 x11], [])
(x13, Equp1AST, (cl  ((not (op_0 = op_0))) (op_0) ((not op_0))), [], [])
(x14, ResoAST, (cl  (op_0) ((not op_0))), [ t3 x13], [])
(x15, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) (op_0)), [ x6 x12 x14], [])
(x16, Equp2AST, (cl  ((not (op_0 = op_0))) ((not op_0)) (op_0)), [], [])
(x17, ResoAST, (cl  ((not op_0)) (op_0)), [ t3 x16], [])
(x18, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) (op_0)), [ x15 x17], [])
(x19, Equn1AST, (cl  ((op_0 = (1 + op_1))) ((not op_0)) ((not (1 + op_1)))), [], [])
(x20, Equn1AST, (cl  ((op_0 = (op_1 + 1))) ((not op_0)) ((not (op_1 + 1)))), [], [])
(x21, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_1 + 1)))), [ x11 x19 x20 x8 x18 x15], [])
(x22, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (1 + op_1)))), [ x21 x2], [])
(x23, Equp2AST, (cl  ((not (op_0 = (op_1 + 1)))) ((not op_0)) ((op_1 + 1))), [], [])
(x24, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (op_1 + 1))))), [ x23 x21 x15], [])
(x25, Equp2AST, (cl  ((not (op_0 = (1 + op_1)))) ((not op_0)) ((1 + op_1))), [], [])
(x26, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (1 + op_1))))), [ x25 x22 x18], [])
(t5, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))), [ x5 x24 x26], [])
(t6, ArithpolynormAST, (cl  (((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))), [], [ ARITH_POLY_NORM ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0)))])
(t7, TransAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))), [ t5 t6], [])
(t8, ReflAST, (cl  (((op_2 ( op_1)) = (op_2 ( op_1))))), [], [])
(t9, ArithpolynormAST, (cl  (((op_0 - 1) = (op_0 + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((op_0 - 1) = (op_0 + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(x27, EqcoAST, (cl  ((not (op_0 = op_0))) ((not (((-1) * 1) = (-1)))) (((op_0 + ((-1) * 1)) = (op_0 + (-1))))), [], [])
(t11, ResoAST, (cl  (((op_0 + ((-1) * 1)) = (op_0 + (-1))))), [ x27 t3 t10 t3 t10], [])
(t12, ArithpolynormAST, (cl  (((op_0 + (-1)) = ((-1) + op_0)))), [], [ ARITH_POLY_NORM ((op_0 + (-1)) = ((-1) + op_0))])
(t13, TransAST, (cl  (((op_0 + ((-1) * 1)) = ((-1) + op_0)))), [ t11 t12], [])
(t14, TransAST, (cl  (((op_0 - 1) = ((-1) + op_0)))), [ t9 t13], [])
(x28, EqcoAST, (cl  ((not ((op_0 - 1) = ((-1) + op_0)))) (((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))), [], [])
(t15, ResoAST, (cl  (((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))), [ x28 t14 t14], [])
(x29, Equp1AST, (cl  ((not ((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( (op_0 - 1)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x30, ResoAST, (cl  ((op_2 ( (op_0 - 1)))) ((not (op_2 ( ((-1) + op_0)))))), [ t15 x29], [])
(x31, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((op_2 ( op_1))) ((not (op_2 ( (op_0 - 1)))))), [], [])
(x32, Equn2AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [], [])
(x33, Equn2AST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x34, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( op_1)))), [ x30 x31 x32 x33], [])
(x35, Equp2AST, (cl  ((not ((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( (op_0 - 1))))) ((op_2 ( ((-1) + op_0))))), [], [])
(x36, ResoAST, (cl  ((not (op_2 ( (op_0 - 1))))) ((op_2 ( ((-1) + op_0))))), [ t15 x35], [])
(x37, Equn2AST, (cl  (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((op_2 ( op_1))) ((op_2 ( (op_0 - 1))))), [], [])
(x38, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x39, Equn1AST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x40, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((op_2 ( op_1)))), [ x36 x37 x38 x39], [])
(x41, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( op_1))))) ((op_2 ( op_1))) ((not (op_2 ( op_1))))), [], [])
(x42, ResoAST, (cl  ((op_2 ( op_1))) ((not (op_2 ( op_1))))), [ t8 x41], [])
(x43, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1)))), [ x34 x40 x42], [])
(x44, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( op_1))))) ((not (op_2 ( op_1)))) ((op_2 ( op_1)))), [], [])
(x45, ResoAST, (cl  ((not (op_2 ( op_1)))) ((op_2 ( op_1)))), [ t8 x44], [])
(x46, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1)))), [ x43 x45], [])
(x47, Equn1AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((not (op_2 ( op_1)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x48, Equn1AST, (cl  (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((not (op_2 ( op_1)))) ((not (op_2 ( (op_0 - 1)))))), [], [])
(x49, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( (op_0 - 1)))))), [ x39 x47 x48 x36 x46 x43], [])
(x50, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0)))))), [ x49 x30], [])
(x51, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((not (op_2 ( op_1)))) ((op_2 ( (op_0 - 1))))), [], [])
(x52, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x51 x49 x43], [])
(x53, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x54, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x53 x50 x46], [])
(t16, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x33 x52 x54], [])
(x55, ImppAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((not (op_0 = (op_1 + 1)))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))), [], [])
(x58, Equp2AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x57, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ x58 t16], [])
(x56, Equp1AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))) ((op_0 = (op_1 + 1))) ((not (op_1 = ((-1) + op_0))))), [], [])
(x59, ResoAST, (cl  ((op_0 = (op_1 + 1))) ((not (op_1 = ((-1) + op_0))))), [ x56 t7], [])
(x60, ResoAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((not (op_1 = ((-1) + op_0))))), [ x55 x57 x59], [])
(x61, Impn1AST, (cl  ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_1 = ((-1) + op_0)))), [], [])
(x62, Impn2AST, (cl  ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x63, ResoAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x60 x61 x62], [])
(x64, Equn1AST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(x65, ResoAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))), [ x63 x64], [])
(x66, ImppAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (op_1 = ((-1) + op_0)))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x69, Equp2AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))) ((not (op_0 = (op_1 + 1)))) ((op_1 = ((-1) + op_0)))), [], [])
(x68, ResoAST, (cl  ((not (op_0 = (op_1 + 1)))) ((op_1 = ((-1) + op_0)))), [ x69 t7], [])
(x67, Equp1AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x70, ResoAST, (cl  (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x67 t16], [])
(x71, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (op_0 = (op_1 + 1)))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))), [ x66 x68 x70], [])
(x72, Impn1AST, (cl  ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((op_0 = (op_1 + 1)))), [], [])
(x73, Impn2AST, (cl  ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [], [])
(x74, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x71 x72 x73], [])
(x75, Equn2AST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x76, ResoAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x74 x75], [])
(t17, ResoAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ x76 x65], [])
(x77, Equp1AST, (cl  ((not ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x78, ResoAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x77 t17], [])
(x79, Equn1AST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x80, ResoAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x78 x79], [])
(x81, Equp2AST, (cl  ((not ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [], [])
(x82, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x81 t17], [])
(x83, Equn2AST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(x84, ResoAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ x82 x83], [])
(t18, ResoAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))), [ x80 x84], [])
(t19, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((op_1 = ((-1) + op_0)))), [ t19], [])
(x85, EqcoAST, (cl  ((not (op_1 = ((-1) + op_0)))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(t21, ResoAST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ x85 t20 t20], [])
(t22, ReflAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x86, Equp1AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( ((-1) + op_0)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x87, ResoAST, (cl  ((op_2 ( ((-1) + op_0)))) ((not (op_2 ( ((-1) + op_0)))))), [ t22 x86], [])
(x88, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x89, Equn2AST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x90, Equn2AST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x91, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [ x87 x88 x89 x90], [])
(x92, Equp2AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0))))), [], [])
(x93, ResoAST, (cl  ((not (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0))))), [ t22 x92], [])
(x94, Equn2AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [], [])
(x95, Equp1AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( ((-1) + op_0)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x96, Equn1AST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [], [])
(x97, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [ x93 x94 x95 x96], [])
(x98, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x99, ResoAST, (cl  ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [ t21 x98], [])
(x100, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1)))), [ x91 x97 x99], [])
(x101, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x102, ResoAST, (cl  ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [ t21 x101], [])
(x103, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( ((-1) + op_0))))), [ x100 x102], [])
(x104, Equn1AST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((not (op_2 ( ((-1) + op_0))))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x105, Equn1AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((not (op_2 ( op_1)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x106, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0)))))), [ x96 x104 x105 x93 x103 x100], [])
(x107, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0)))))), [ x106 x87], [])
(x108, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x109, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x108 x106 x100], [])
(x110, Equp2AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0))))), [], [])
(x111, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x110 x107 x103], [])
(t23, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x90 x109 x111], [])
(x112, Equp1AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x113, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x112 t23], [])
(x114, Equn1AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x115, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x113 x114], [])
(x116, Equp2AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x117, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ x116 t23], [])
(x118, Equn2AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [], [])
(x119, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x117 x118], [])
(t24, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ x115 x119], [])
(t25, AllsimpAST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))), [], [ eq_simplify1 (op_2 ( ((-1) + op_0)))])
(x120, Equp1AST, (cl  ((not (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((true))), [], [])
(x121, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((true))), [ x120 t25], [])
(x122, Equn1AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((true))), [], [])
(x123, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) ((true))), [ x121 x122], [])
(x124, Equp2AST, (cl  ((not (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))) ((not (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x125, ResoAST, (cl  ((not (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x124 t25], [])
(x126, Equn2AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (true)))), [], [])
(x127, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) ((not (true)))), [ x125 x126], [])
(t26, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))), [ x123 x127], [])
(t27, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t28, TransAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))), [ t26 t27], [])
(t29, TransAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))), [ t24 t28], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t31], [])
(t33, ResoAST, (cl  ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl ), [ t33 t34], [])

Certif after process_trans: 
(a0, AssumeAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t3, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t4, ArithpolynormAST, (cl  (((op_1 + 1) = (1 + op_1)))), [], [ ARITH_POLY_NORM ((op_1 + 1) = (1 + op_1))])
(x1, Equp1AST, (cl  ((not ((op_1 + 1) = (1 + op_1)))) ((op_1 + 1)) ((not (1 + op_1)))), [], [])
(x2, ResoAST, (cl  ((op_1 + 1)) ((not (1 + op_1)))), [ t4 x1], [])
(x3, Equp1AST, (cl  ((not (op_0 = (op_1 + 1)))) (op_0) ((not (op_1 + 1)))), [], [])
(x4, Equn2AST, (cl  ((op_0 = (1 + op_1))) (op_0) ((1 + op_1))), [], [])
(x5, Equn2AST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((op_0 = (op_1 + 1))) ((op_0 = (1 + op_1)))), [], [])
(x6, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((op_0 = (1 + op_1))) (op_0) (op_0)), [ x2 x3 x4 x5], [])
(x7, Equp2AST, (cl  ((not ((op_1 + 1) = (1 + op_1)))) ((not (op_1 + 1))) ((1 + op_1))), [], [])
(x8, ResoAST, (cl  ((not (op_1 + 1))) ((1 + op_1))), [ t4 x7], [])
(x9, Equn2AST, (cl  ((op_0 = (op_1 + 1))) (op_0) ((op_1 + 1))), [], [])
(x10, Equp1AST, (cl  ((not (op_0 = (1 + op_1)))) (op_0) ((not (1 + op_1)))), [], [])
(x11, Equn1AST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (op_1 + 1)))) ((not (op_0 = (1 + op_1))))), [], [])
(x12, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (1 + op_1)))) (op_0) (op_0)), [ x8 x9 x10 x11], [])
(x13, Equp1AST, (cl  ((not (op_0 = op_0))) (op_0) ((not op_0))), [], [])
(x14, ResoAST, (cl  (op_0) ((not op_0))), [ t3 x13], [])
(x15, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) (op_0)), [ x6 x12 x14], [])
(x16, Equp2AST, (cl  ((not (op_0 = op_0))) ((not op_0)) (op_0)), [], [])
(x17, ResoAST, (cl  ((not op_0)) (op_0)), [ t3 x16], [])
(x18, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) (op_0)), [ x15 x17], [])
(x19, Equn1AST, (cl  ((op_0 = (1 + op_1))) ((not op_0)) ((not (1 + op_1)))), [], [])
(x20, Equn1AST, (cl  ((op_0 = (op_1 + 1))) ((not op_0)) ((not (op_1 + 1)))), [], [])
(x21, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_1 + 1)))), [ x11 x19 x20 x8 x18 x15], [])
(x22, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (1 + op_1)))), [ x21 x2], [])
(x23, Equp2AST, (cl  ((not (op_0 = (op_1 + 1)))) ((not op_0)) ((op_1 + 1))), [], [])
(x24, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (op_1 + 1))))), [ x23 x21 x15], [])
(x25, Equp2AST, (cl  ((not (op_0 = (1 + op_1)))) ((not op_0)) ((1 + op_1))), [], [])
(x26, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (1 + op_1))))), [ x25 x22 x18], [])
(t5, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))), [ x5 x24 x26], [])
(t6, ArithpolynormAST, (cl  (((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))), [], [ ARITH_POLY_NORM ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0)))])
(x131, Equp1AST, (cl  ((not ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))) ((op_0 = (1 + op_1))) ((not (op_1 = ((-1) + op_0))))), [], [])
(x130, ResoAST, (cl  ((op_0 = (1 + op_1))) ((not (op_1 = ((-1) + op_0))))), [ x131 t6], [])
(x129, Equp1AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))) ((op_0 = (op_1 + 1))) ((not (op_0 = (1 + op_1))))), [], [])
(x128, ResoAST, (cl  ((op_0 = (op_1 + 1))) ((not (op_0 = (1 + op_1))))), [ x129 t5], [])
(x132, ResoAST, (cl  ((op_0 = (op_1 + 1))) ((not (op_1 = ((-1) + op_0))))), [ x130 x128], [])
(x133, Equn2AST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0)))) ((op_0 = (op_1 + 1))) ((op_1 = ((-1) + op_0)))), [], [])
(x134, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0)))) ((op_0 = (op_1 + 1)))), [ x132 x133], [])
(x138, Equp2AST, (cl  ((not ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))) ((not (op_0 = (1 + op_1)))) ((op_1 = ((-1) + op_0)))), [], [])
(x137, ResoAST, (cl  ((not (op_0 = (1 + op_1)))) ((op_1 = ((-1) + op_0)))), [ x138 t6], [])
(x136, Equp2AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))) ((not (op_0 = (op_1 + 1)))) ((op_0 = (1 + op_1)))), [], [])
(x135, ResoAST, (cl  ((not (op_0 = (op_1 + 1)))) ((op_0 = (1 + op_1)))), [ x136 t5], [])
(x139, ResoAST, (cl  ((not (op_0 = (op_1 + 1)))) ((op_1 = ((-1) + op_0)))), [ x137 x135], [])
(x140, Equn1AST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0)))) ((not (op_0 = (op_1 + 1)))) ((not (op_1 = ((-1) + op_0))))), [], [])
(x141, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0)))) ((not (op_0 = (op_1 + 1))))), [ x139 x140], [])
(t7, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))), [ x134 x141], [])
(t8, ReflAST, (cl  (((op_2 ( op_1)) = (op_2 ( op_1))))), [], [])
(t9, ArithpolynormAST, (cl  (((op_0 - 1) = (op_0 + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((op_0 - 1) = (op_0 + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(x27, EqcoAST, (cl  ((not (op_0 = op_0))) ((not (((-1) * 1) = (-1)))) (((op_0 + ((-1) * 1)) = (op_0 + (-1))))), [], [])
(t11, ResoAST, (cl  (((op_0 + ((-1) * 1)) = (op_0 + (-1))))), [ x27 t3 t10 t3 t10], [])
(t12, ArithpolynormAST, (cl  (((op_0 + (-1)) = ((-1) + op_0)))), [], [ ARITH_POLY_NORM ((op_0 + (-1)) = ((-1) + op_0))])
(x142, EqtrAST, (cl  ((not ((op_0 + ((-1) * 1)) = (op_0 + (-1))))) ((not ((op_0 + (-1)) = ((-1) + op_0)))) (((op_0 + ((-1) * 1)) = ((-1) + op_0)))), [], [])
(t13, ResoAST, (cl  (((op_0 + ((-1) * 1)) = ((-1) + op_0)))), [ x142 t11 t12], [])
(x143, EqtrAST, (cl  ((not ((op_0 - 1) = (op_0 + ((-1) * 1))))) ((not ((op_0 + ((-1) * 1)) = ((-1) + op_0)))) (((op_0 - 1) = ((-1) + op_0)))), [], [])
(t14, ResoAST, (cl  (((op_0 - 1) = ((-1) + op_0)))), [ x143 t9 t13], [])
(x28, EqcoAST, (cl  ((not ((op_0 - 1) = ((-1) + op_0)))) (((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))), [], [])
(t15, ResoAST, (cl  (((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))), [ x28 t14 t14], [])
(x29, Equp1AST, (cl  ((not ((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( (op_0 - 1)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x30, ResoAST, (cl  ((op_2 ( (op_0 - 1)))) ((not (op_2 ( ((-1) + op_0)))))), [ t15 x29], [])
(x31, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((op_2 ( op_1))) ((not (op_2 ( (op_0 - 1)))))), [], [])
(x32, Equn2AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [], [])
(x33, Equn2AST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x34, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( op_1)))), [ x30 x31 x32 x33], [])
(x35, Equp2AST, (cl  ((not ((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( (op_0 - 1))))) ((op_2 ( ((-1) + op_0))))), [], [])
(x36, ResoAST, (cl  ((not (op_2 ( (op_0 - 1))))) ((op_2 ( ((-1) + op_0))))), [ t15 x35], [])
(x37, Equn2AST, (cl  (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((op_2 ( op_1))) ((op_2 ( (op_0 - 1))))), [], [])
(x38, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x39, Equn1AST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x40, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((op_2 ( op_1)))), [ x36 x37 x38 x39], [])
(x41, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( op_1))))) ((op_2 ( op_1))) ((not (op_2 ( op_1))))), [], [])
(x42, ResoAST, (cl  ((op_2 ( op_1))) ((not (op_2 ( op_1))))), [ t8 x41], [])
(x43, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1)))), [ x34 x40 x42], [])
(x44, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( op_1))))) ((not (op_2 ( op_1)))) ((op_2 ( op_1)))), [], [])
(x45, ResoAST, (cl  ((not (op_2 ( op_1)))) ((op_2 ( op_1)))), [ t8 x44], [])
(x46, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1)))), [ x43 x45], [])
(x47, Equn1AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((not (op_2 ( op_1)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x48, Equn1AST, (cl  (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((not (op_2 ( op_1)))) ((not (op_2 ( (op_0 - 1)))))), [], [])
(x49, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( (op_0 - 1)))))), [ x39 x47 x48 x36 x46 x43], [])
(x50, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0)))))), [ x49 x30], [])
(x51, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((not (op_2 ( op_1)))) ((op_2 ( (op_0 - 1))))), [], [])
(x52, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x51 x49 x43], [])
(x53, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x54, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x53 x50 x46], [])
(t16, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x33 x52 x54], [])
(x55, ImppAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((not (op_0 = (op_1 + 1)))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))), [], [])
(x58, Equp2AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x57, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ x58 t16], [])
(x56, Equp1AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))) ((op_0 = (op_1 + 1))) ((not (op_1 = ((-1) + op_0))))), [], [])
(x59, ResoAST, (cl  ((op_0 = (op_1 + 1))) ((not (op_1 = ((-1) + op_0))))), [ x56 t7], [])
(x60, ResoAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((not (op_1 = ((-1) + op_0))))), [ x55 x57 x59], [])
(x61, Impn1AST, (cl  ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_1 = ((-1) + op_0)))), [], [])
(x62, Impn2AST, (cl  ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x63, ResoAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x60 x61 x62], [])
(x64, Equn1AST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(x65, ResoAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))), [ x63 x64], [])
(x66, ImppAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (op_1 = ((-1) + op_0)))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x69, Equp2AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))) ((not (op_0 = (op_1 + 1)))) ((op_1 = ((-1) + op_0)))), [], [])
(x68, ResoAST, (cl  ((not (op_0 = (op_1 + 1)))) ((op_1 = ((-1) + op_0)))), [ x69 t7], [])
(x67, Equp1AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x70, ResoAST, (cl  (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x67 t16], [])
(x71, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (op_0 = (op_1 + 1)))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))), [ x66 x68 x70], [])
(x72, Impn1AST, (cl  ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((op_0 = (op_1 + 1)))), [], [])
(x73, Impn2AST, (cl  ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [], [])
(x74, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x71 x72 x73], [])
(x75, Equn2AST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x76, ResoAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x74 x75], [])
(t17, ResoAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ x76 x65], [])
(x77, Equp1AST, (cl  ((not ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x78, ResoAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x77 t17], [])
(x79, Equn1AST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x80, ResoAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x78 x79], [])
(x81, Equp2AST, (cl  ((not ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [], [])
(x82, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x81 t17], [])
(x83, Equn2AST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(x84, ResoAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ x82 x83], [])
(t18, ResoAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))), [ x80 x84], [])
(t19, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((op_1 = ((-1) + op_0)))), [ t19], [])
(x85, EqcoAST, (cl  ((not (op_1 = ((-1) + op_0)))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(t21, ResoAST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ x85 t20 t20], [])
(t22, ReflAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x86, Equp1AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( ((-1) + op_0)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x87, ResoAST, (cl  ((op_2 ( ((-1) + op_0)))) ((not (op_2 ( ((-1) + op_0)))))), [ t22 x86], [])
(x88, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x89, Equn2AST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x90, Equn2AST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x91, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [ x87 x88 x89 x90], [])
(x92, Equp2AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0))))), [], [])
(x93, ResoAST, (cl  ((not (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0))))), [ t22 x92], [])
(x94, Equn2AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [], [])
(x95, Equp1AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( ((-1) + op_0)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x96, Equn1AST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [], [])
(x97, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [ x93 x94 x95 x96], [])
(x98, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x99, ResoAST, (cl  ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [ t21 x98], [])
(x100, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1)))), [ x91 x97 x99], [])
(x101, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x102, ResoAST, (cl  ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [ t21 x101], [])
(x103, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( ((-1) + op_0))))), [ x100 x102], [])
(x104, Equn1AST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((not (op_2 ( ((-1) + op_0))))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x105, Equn1AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((not (op_2 ( op_1)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x106, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0)))))), [ x96 x104 x105 x93 x103 x100], [])
(x107, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0)))))), [ x106 x87], [])
(x108, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x109, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x108 x106 x100], [])
(x110, Equp2AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0))))), [], [])
(x111, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x110 x107 x103], [])
(t23, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x90 x109 x111], [])
(x112, Equp1AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x113, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x112 t23], [])
(x114, Equn1AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x115, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x113 x114], [])
(x116, Equp2AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x117, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ x116 t23], [])
(x118, Equn2AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [], [])
(x119, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x117 x118], [])
(t24, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ x115 x119], [])
(t25, AllsimpAST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))), [], [ eq_simplify1 (op_2 ( ((-1) + op_0)))])
(x120, Equp1AST, (cl  ((not (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((true))), [], [])
(x121, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((true))), [ x120 t25], [])
(x122, Equn1AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((true))), [], [])
(x123, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) ((true))), [ x121 x122], [])
(x124, Equp2AST, (cl  ((not (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))) ((not (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x125, ResoAST, (cl  ((not (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x124 t25], [])
(x126, Equn2AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (true)))), [], [])
(x127, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) ((not (true)))), [ x125 x126], [])
(t26, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))), [ x123 x127], [])
(t27, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(x147, Equp1AST, (cl  ((not ((not (true)) = (false)))) ((not (true))) ((not (false)))), [], [])
(x146, ResoAST, (cl  ((not (true))) ((not (false)))), [ x147 t27], [])
(x145, Equp1AST, (cl  ((not ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (not (true))))), [], [])
(x144, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (not (true))))), [ x145 t26], [])
(x148, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (false)))), [ x146 x144], [])
(x149, Equn2AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((false))), [], [])
(x150, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x148 x149], [])
(x154, Equp2AST, (cl  ((not ((not (true)) = (false)))) ((not (not (true)))) ((false))), [], [])
(x153, ResoAST, (cl  ((not (not (true)))) ((false))), [ x154 t27], [])
(x152, Equp2AST, (cl  ((not ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (true)))), [], [])
(x151, ResoAST, (cl  ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (true)))), [ x152 t26], [])
(x155, ResoAST, (cl  ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((false))), [ x153 x151], [])
(x156, Equn1AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (false)))), [], [])
(x157, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ x155 x156], [])
(t28, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))), [ x150 x157], [])
(x161, Equp1AST, (cl  ((not ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (false)))), [], [])
(x160, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (false)))), [ x161 t28], [])
(x159, Equp1AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [], [])
(x158, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ x159 t24], [])
(x162, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (false)))), [ x160 x158], [])
(x163, Equn2AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((false))), [], [])
(x164, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x162 x163], [])
(x168, Equp2AST, (cl  ((not ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((false))), [], [])
(x167, ResoAST, (cl  ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((false))), [ x168 t28], [])
(x166, Equp2AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [], [])
(x165, ResoAST, (cl  ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x166 t24], [])
(x169, ResoAST, (cl  ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((false))), [ x167 x165], [])
(x170, Equn1AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (false)))), [], [])
(x171, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ x169 x170], [])
(t29, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))), [ x164 x171], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t31], [])
(t33, ResoAST, (cl  ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl ), [ t33 t34], [])

Certif after process_simplify: 
(a0, AssumeAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t3, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t4, ArithpolynormAST, (cl  (((op_1 + 1) = (1 + op_1)))), [], [ ARITH_POLY_NORM ((op_1 + 1) = (1 + op_1))])
(x1, Equp1AST, (cl  ((not ((op_1 + 1) = (1 + op_1)))) ((op_1 + 1)) ((not (1 + op_1)))), [], [])
(x2, ResoAST, (cl  ((op_1 + 1)) ((not (1 + op_1)))), [ t4 x1], [])
(x3, Equp1AST, (cl  ((not (op_0 = (op_1 + 1)))) (op_0) ((not (op_1 + 1)))), [], [])
(x4, Equn2AST, (cl  ((op_0 = (1 + op_1))) (op_0) ((1 + op_1))), [], [])
(x5, Equn2AST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((op_0 = (op_1 + 1))) ((op_0 = (1 + op_1)))), [], [])
(x6, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((op_0 = (1 + op_1))) (op_0) (op_0)), [ x2 x3 x4 x5], [])
(x7, Equp2AST, (cl  ((not ((op_1 + 1) = (1 + op_1)))) ((not (op_1 + 1))) ((1 + op_1))), [], [])
(x8, ResoAST, (cl  ((not (op_1 + 1))) ((1 + op_1))), [ t4 x7], [])
(x9, Equn2AST, (cl  ((op_0 = (op_1 + 1))) (op_0) ((op_1 + 1))), [], [])
(x10, Equp1AST, (cl  ((not (op_0 = (1 + op_1)))) (op_0) ((not (1 + op_1)))), [], [])
(x11, Equn1AST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (op_1 + 1)))) ((not (op_0 = (1 + op_1))))), [], [])
(x12, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (1 + op_1)))) (op_0) (op_0)), [ x8 x9 x10 x11], [])
(x13, Equp1AST, (cl  ((not (op_0 = op_0))) (op_0) ((not op_0))), [], [])
(x14, ResoAST, (cl  (op_0) ((not op_0))), [ t3 x13], [])
(x15, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) (op_0)), [ x6 x12 x14], [])
(x16, Equp2AST, (cl  ((not (op_0 = op_0))) ((not op_0)) (op_0)), [], [])
(x17, ResoAST, (cl  ((not op_0)) (op_0)), [ t3 x16], [])
(x18, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) (op_0)), [ x15 x17], [])
(x19, Equn1AST, (cl  ((op_0 = (1 + op_1))) ((not op_0)) ((not (1 + op_1)))), [], [])
(x20, Equn1AST, (cl  ((op_0 = (op_1 + 1))) ((not op_0)) ((not (op_1 + 1)))), [], [])
(x21, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_1 + 1)))), [ x11 x19 x20 x8 x18 x15], [])
(x22, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (1 + op_1)))), [ x21 x2], [])
(x23, Equp2AST, (cl  ((not (op_0 = (op_1 + 1)))) ((not op_0)) ((op_1 + 1))), [], [])
(x24, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (op_1 + 1))))), [ x23 x21 x15], [])
(x25, Equp2AST, (cl  ((not (op_0 = (1 + op_1)))) ((not op_0)) ((1 + op_1))), [], [])
(x26, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (1 + op_1))))), [ x25 x22 x18], [])
(t5, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))), [ x5 x24 x26], [])
(t6, ArithpolynormAST, (cl  (((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))), [], [ ARITH_POLY_NORM ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0)))])
(x131, Equp1AST, (cl  ((not ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))) ((op_0 = (1 + op_1))) ((not (op_1 = ((-1) + op_0))))), [], [])
(x130, ResoAST, (cl  ((op_0 = (1 + op_1))) ((not (op_1 = ((-1) + op_0))))), [ x131 t6], [])
(x129, Equp1AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))) ((op_0 = (op_1 + 1))) ((not (op_0 = (1 + op_1))))), [], [])
(x128, ResoAST, (cl  ((op_0 = (op_1 + 1))) ((not (op_0 = (1 + op_1))))), [ x129 t5], [])
(x132, ResoAST, (cl  ((op_0 = (op_1 + 1))) ((not (op_1 = ((-1) + op_0))))), [ x130 x128], [])
(x133, Equn2AST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0)))) ((op_0 = (op_1 + 1))) ((op_1 = ((-1) + op_0)))), [], [])
(x134, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0)))) ((op_0 = (op_1 + 1)))), [ x132 x133], [])
(x138, Equp2AST, (cl  ((not ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))) ((not (op_0 = (1 + op_1)))) ((op_1 = ((-1) + op_0)))), [], [])
(x137, ResoAST, (cl  ((not (op_0 = (1 + op_1)))) ((op_1 = ((-1) + op_0)))), [ x138 t6], [])
(x136, Equp2AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))) ((not (op_0 = (op_1 + 1)))) ((op_0 = (1 + op_1)))), [], [])
(x135, ResoAST, (cl  ((not (op_0 = (op_1 + 1)))) ((op_0 = (1 + op_1)))), [ x136 t5], [])
(x139, ResoAST, (cl  ((not (op_0 = (op_1 + 1)))) ((op_1 = ((-1) + op_0)))), [ x137 x135], [])
(x140, Equn1AST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0)))) ((not (op_0 = (op_1 + 1)))) ((not (op_1 = ((-1) + op_0))))), [], [])
(x141, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0)))) ((not (op_0 = (op_1 + 1))))), [ x139 x140], [])
(t7, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))), [ x134 x141], [])
(t8, ReflAST, (cl  (((op_2 ( op_1)) = (op_2 ( op_1))))), [], [])
(t9, ArithpolynormAST, (cl  (((op_0 - 1) = (op_0 + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((op_0 - 1) = (op_0 + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(x27, EqcoAST, (cl  ((not (op_0 = op_0))) ((not (((-1) * 1) = (-1)))) (((op_0 + ((-1) * 1)) = (op_0 + (-1))))), [], [])
(t11, ResoAST, (cl  (((op_0 + ((-1) * 1)) = (op_0 + (-1))))), [ x27 t3 t10 t3 t10], [])
(t12, ArithpolynormAST, (cl  (((op_0 + (-1)) = ((-1) + op_0)))), [], [ ARITH_POLY_NORM ((op_0 + (-1)) = ((-1) + op_0))])
(x142, EqtrAST, (cl  ((not ((op_0 + ((-1) * 1)) = (op_0 + (-1))))) ((not ((op_0 + (-1)) = ((-1) + op_0)))) (((op_0 + ((-1) * 1)) = ((-1) + op_0)))), [], [])
(t13, ResoAST, (cl  (((op_0 + ((-1) * 1)) = ((-1) + op_0)))), [ x142 t11 t12], [])
(x143, EqtrAST, (cl  ((not ((op_0 - 1) = (op_0 + ((-1) * 1))))) ((not ((op_0 + ((-1) * 1)) = ((-1) + op_0)))) (((op_0 - 1) = ((-1) + op_0)))), [], [])
(t14, ResoAST, (cl  (((op_0 - 1) = ((-1) + op_0)))), [ x143 t9 t13], [])
(x28, EqcoAST, (cl  ((not ((op_0 - 1) = ((-1) + op_0)))) (((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))), [], [])
(t15, ResoAST, (cl  (((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))), [ x28 t14 t14], [])
(x29, Equp1AST, (cl  ((not ((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( (op_0 - 1)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x30, ResoAST, (cl  ((op_2 ( (op_0 - 1)))) ((not (op_2 ( ((-1) + op_0)))))), [ t15 x29], [])
(x31, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((op_2 ( op_1))) ((not (op_2 ( (op_0 - 1)))))), [], [])
(x32, Equn2AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [], [])
(x33, Equn2AST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x34, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( op_1)))), [ x30 x31 x32 x33], [])
(x35, Equp2AST, (cl  ((not ((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( (op_0 - 1))))) ((op_2 ( ((-1) + op_0))))), [], [])
(x36, ResoAST, (cl  ((not (op_2 ( (op_0 - 1))))) ((op_2 ( ((-1) + op_0))))), [ t15 x35], [])
(x37, Equn2AST, (cl  (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((op_2 ( op_1))) ((op_2 ( (op_0 - 1))))), [], [])
(x38, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x39, Equn1AST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x40, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((op_2 ( op_1)))), [ x36 x37 x38 x39], [])
(x41, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( op_1))))) ((op_2 ( op_1))) ((not (op_2 ( op_1))))), [], [])
(x42, ResoAST, (cl  ((op_2 ( op_1))) ((not (op_2 ( op_1))))), [ t8 x41], [])
(x43, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1)))), [ x34 x40 x42], [])
(x44, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( op_1))))) ((not (op_2 ( op_1)))) ((op_2 ( op_1)))), [], [])
(x45, ResoAST, (cl  ((not (op_2 ( op_1)))) ((op_2 ( op_1)))), [ t8 x44], [])
(x46, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1)))), [ x43 x45], [])
(x47, Equn1AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((not (op_2 ( op_1)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x48, Equn1AST, (cl  (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((not (op_2 ( op_1)))) ((not (op_2 ( (op_0 - 1)))))), [], [])
(x49, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( (op_0 - 1)))))), [ x39 x47 x48 x36 x46 x43], [])
(x50, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0)))))), [ x49 x30], [])
(x51, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((not (op_2 ( op_1)))) ((op_2 ( (op_0 - 1))))), [], [])
(x52, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x51 x49 x43], [])
(x53, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x54, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x53 x50 x46], [])
(t16, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x33 x52 x54], [])
(x55, ImppAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((not (op_0 = (op_1 + 1)))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))), [], [])
(x58, Equp2AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x57, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ x58 t16], [])
(x56, Equp1AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))) ((op_0 = (op_1 + 1))) ((not (op_1 = ((-1) + op_0))))), [], [])
(x59, ResoAST, (cl  ((op_0 = (op_1 + 1))) ((not (op_1 = ((-1) + op_0))))), [ x56 t7], [])
(x60, ResoAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((not (op_1 = ((-1) + op_0))))), [ x55 x57 x59], [])
(x61, Impn1AST, (cl  ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_1 = ((-1) + op_0)))), [], [])
(x62, Impn2AST, (cl  ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x63, ResoAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x60 x61 x62], [])
(x64, Equn1AST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(x65, ResoAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))), [ x63 x64], [])
(x66, ImppAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (op_1 = ((-1) + op_0)))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x69, Equp2AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))) ((not (op_0 = (op_1 + 1)))) ((op_1 = ((-1) + op_0)))), [], [])
(x68, ResoAST, (cl  ((not (op_0 = (op_1 + 1)))) ((op_1 = ((-1) + op_0)))), [ x69 t7], [])
(x67, Equp1AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x70, ResoAST, (cl  (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x67 t16], [])
(x71, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (op_0 = (op_1 + 1)))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))), [ x66 x68 x70], [])
(x72, Impn1AST, (cl  ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((op_0 = (op_1 + 1)))), [], [])
(x73, Impn2AST, (cl  ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [], [])
(x74, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x71 x72 x73], [])
(x75, Equn2AST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x76, ResoAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x74 x75], [])
(t17, ResoAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ x76 x65], [])
(x77, Equp1AST, (cl  ((not ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x78, ResoAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x77 t17], [])
(x79, Equn1AST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x80, ResoAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x78 x79], [])
(x81, Equp2AST, (cl  ((not ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [], [])
(x82, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x81 t17], [])
(x83, Equn2AST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(x84, ResoAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ x82 x83], [])
(t18, ResoAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))), [ x80 x84], [])
(t19, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((op_1 = ((-1) + op_0)))), [ t19], [])
(x85, EqcoAST, (cl  ((not (op_1 = ((-1) + op_0)))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(t21, ResoAST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ x85 t20 t20], [])
(t22, ReflAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x86, Equp1AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( ((-1) + op_0)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x87, ResoAST, (cl  ((op_2 ( ((-1) + op_0)))) ((not (op_2 ( ((-1) + op_0)))))), [ t22 x86], [])
(x88, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x89, Equn2AST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x90, Equn2AST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x91, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [ x87 x88 x89 x90], [])
(x92, Equp2AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0))))), [], [])
(x93, ResoAST, (cl  ((not (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0))))), [ t22 x92], [])
(x94, Equn2AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [], [])
(x95, Equp1AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( ((-1) + op_0)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x96, Equn1AST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [], [])
(x97, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [ x93 x94 x95 x96], [])
(x98, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x99, ResoAST, (cl  ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [ t21 x98], [])
(x100, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1)))), [ x91 x97 x99], [])
(x101, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x102, ResoAST, (cl  ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [ t21 x101], [])
(x103, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( ((-1) + op_0))))), [ x100 x102], [])
(x104, Equn1AST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((not (op_2 ( ((-1) + op_0))))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x105, Equn1AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((not (op_2 ( op_1)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x106, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0)))))), [ x96 x104 x105 x93 x103 x100], [])
(x107, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0)))))), [ x106 x87], [])
(x108, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x109, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x108 x106 x100], [])
(x110, Equp2AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0))))), [], [])
(x111, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x110 x107 x103], [])
(t23, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x90 x109 x111], [])
(x112, Equp1AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x113, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x112 t23], [])
(x114, Equn1AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x115, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x113 x114], [])
(x116, Equp2AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x117, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ x116 t23], [])
(x118, Equn2AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [], [])
(x119, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x117 x118], [])
(t24, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ x115 x119], [])
(x196, Equn1AST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (true)))), [], [])
(x201, SubproofAST
	(x193, AssumeAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x172, TrueAST, (cl  ((true))), [], [])
(x194, DischargeAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((true))), [], [])
	, (cl ), [], [])
(x198, ResoAST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x194 x196], [])
(x197, Equn2AST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((true))), [], [])
(x200, SubproofAST
	(x192, AssumeAST, (cl  ((true))), [], [])
(x173, EqreAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x195, DischargeAST, (cl  ((not (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
	, (cl ), [], [])
(x199, ResoAST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x195 x197], [])
(t25, ResoAST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))), [ x198 x199], [])
(x120, Equp1AST, (cl  ((not (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((true))), [], [])
(x121, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((true))), [ x120 t25], [])
(x122, Equn1AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((true))), [], [])
(x123, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) ((true))), [ x121 x122], [])
(x124, Equp2AST, (cl  ((not (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))) ((not (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x125, ResoAST, (cl  ((not (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x124 t25], [])
(x126, Equn2AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (true)))), [], [])
(x127, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) ((not (true)))), [ x125 x126], [])
(t26, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))), [ x123 x127], [])
(x186, Equn1AST, (cl  (((not (true)) = (false))) ((not (not (true)))) ((not (false)))), [], [])
(x191, SubproofAST
	(x174, AssumeAST, (cl  ((not (true)))), [], [])
(x175, Impn1AST, (cl  ((imp  (true) (false))) ((true))), [], [])
(x176, ResoAST, (cl  ((imp  (true) (false)))), [ x174 x175], [])
(x177, ImpAST, (cl  ((not (true))) ((false))), [ x176], [])
(x178, TrueAST, (cl  ((true))), [], [])
(x179, ResoAST, (cl  ((false))), [ x177 x178], [])
(x184, DischargeAST, (cl  ((not (not (true)))) ((false))), [], [])
	, (cl ), [], [])
(x188, ResoAST, (cl  (((not (true)) = (false))) ((not (not (true))))), [ x184 x186], [])
(x187, Equn2AST, (cl  (((not (true)) = (false))) ((not (true))) ((false))), [], [])
(x190, SubproofAST
	(x180, AssumeAST, (cl  ((false))), [], [])
(x181, WeakenAST, (cl  ((false)) ((not (true)))), [ x180], [])
(x182, FalsAST, (cl  ((not (false)))), [], [])
(x183, ResoAST, (cl  ((not (true)))), [ x181 x182], [])
(x185, DischargeAST, (cl  ((not (false))) ((not (true)))), [], [])
	, (cl ), [], [])
(x189, ResoAST, (cl  (((not (true)) = (false))) ((not (true)))), [ x185 x187], [])
(t27, ResoAST, (cl  (((not (true)) = (false)))), [ x188 x189], [])
(x147, Equp1AST, (cl  ((not ((not (true)) = (false)))) ((not (true))) ((not (false)))), [], [])
(x146, ResoAST, (cl  ((not (true))) ((not (false)))), [ x147 t27], [])
(x145, Equp1AST, (cl  ((not ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (not (true))))), [], [])
(x144, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (not (true))))), [ x145 t26], [])
(x148, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (false)))), [ x146 x144], [])
(x149, Equn2AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((false))), [], [])
(x150, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x148 x149], [])
(x154, Equp2AST, (cl  ((not ((not (true)) = (false)))) ((not (not (true)))) ((false))), [], [])
(x153, ResoAST, (cl  ((not (not (true)))) ((false))), [ x154 t27], [])
(x152, Equp2AST, (cl  ((not ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (true)))), [], [])
(x151, ResoAST, (cl  ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (true)))), [ x152 t26], [])
(x155, ResoAST, (cl  ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((false))), [ x153 x151], [])
(x156, Equn1AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (false)))), [], [])
(x157, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ x155 x156], [])
(t28, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))), [ x150 x157], [])
(x161, Equp1AST, (cl  ((not ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (false)))), [], [])
(x160, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (false)))), [ x161 t28], [])
(x159, Equp1AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [], [])
(x158, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ x159 t24], [])
(x162, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (false)))), [ x160 x158], [])
(x163, Equn2AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((false))), [], [])
(x164, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x162 x163], [])
(x168, Equp2AST, (cl  ((not ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((false))), [], [])
(x167, ResoAST, (cl  ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((false))), [ x168 t28], [])
(x166, Equp2AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [], [])
(x165, ResoAST, (cl  ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x166 t24], [])
(x169, ResoAST, (cl  ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((false))), [ x167 x165], [])
(x170, Equn1AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (false)))), [], [])
(x171, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ x169 x170], [])
(t29, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))), [ x164 x171], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t31], [])
(t33, ResoAST, (cl  ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl ), [ t33 t34], [])

Certif after process_proj: 
(a0, AssumeAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t3, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t4, ArithpolynormAST, (cl  (((op_1 + 1) = (1 + op_1)))), [], [ ARITH_POLY_NORM ((op_1 + 1) = (1 + op_1))])
(x1, Equp1AST, (cl  ((not ((op_1 + 1) = (1 + op_1)))) ((op_1 + 1)) ((not (1 + op_1)))), [], [])
(x2, ResoAST, (cl  ((op_1 + 1)) ((not (1 + op_1)))), [ t4 x1], [])
(x3, Equp1AST, (cl  ((not (op_0 = (op_1 + 1)))) (op_0) ((not (op_1 + 1)))), [], [])
(x4, Equn2AST, (cl  ((op_0 = (1 + op_1))) (op_0) ((1 + op_1))), [], [])
(x5, Equn2AST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((op_0 = (op_1 + 1))) ((op_0 = (1 + op_1)))), [], [])
(x6, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((op_0 = (1 + op_1))) (op_0) (op_0)), [ x2 x3 x4 x5], [])
(x7, Equp2AST, (cl  ((not ((op_1 + 1) = (1 + op_1)))) ((not (op_1 + 1))) ((1 + op_1))), [], [])
(x8, ResoAST, (cl  ((not (op_1 + 1))) ((1 + op_1))), [ t4 x7], [])
(x9, Equn2AST, (cl  ((op_0 = (op_1 + 1))) (op_0) ((op_1 + 1))), [], [])
(x10, Equp1AST, (cl  ((not (op_0 = (1 + op_1)))) (op_0) ((not (1 + op_1)))), [], [])
(x11, Equn1AST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (op_1 + 1)))) ((not (op_0 = (1 + op_1))))), [], [])
(x12, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (1 + op_1)))) (op_0) (op_0)), [ x8 x9 x10 x11], [])
(x13, Equp1AST, (cl  ((not (op_0 = op_0))) (op_0) ((not op_0))), [], [])
(x14, ResoAST, (cl  (op_0) ((not op_0))), [ t3 x13], [])
(x15, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) (op_0)), [ x6 x12 x14], [])
(x16, Equp2AST, (cl  ((not (op_0 = op_0))) ((not op_0)) (op_0)), [], [])
(x17, ResoAST, (cl  ((not op_0)) (op_0)), [ t3 x16], [])
(x18, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) (op_0)), [ x15 x17], [])
(x19, Equn1AST, (cl  ((op_0 = (1 + op_1))) ((not op_0)) ((not (1 + op_1)))), [], [])
(x20, Equn1AST, (cl  ((op_0 = (op_1 + 1))) ((not op_0)) ((not (op_1 + 1)))), [], [])
(x21, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_1 + 1)))), [ x11 x19 x20 x8 x18 x15], [])
(x22, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (1 + op_1)))), [ x21 x2], [])
(x23, Equp2AST, (cl  ((not (op_0 = (op_1 + 1)))) ((not op_0)) ((op_1 + 1))), [], [])
(x24, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (op_1 + 1))))), [ x23 x21 x15], [])
(x25, Equp2AST, (cl  ((not (op_0 = (1 + op_1)))) ((not op_0)) ((1 + op_1))), [], [])
(x26, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (1 + op_1))))), [ x25 x22 x18], [])
(t5, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))), [ x5 x24 x26], [])
(t6, ArithpolynormAST, (cl  (((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))), [], [ ARITH_POLY_NORM ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0)))])
(x131, Equp1AST, (cl  ((not ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))) ((op_0 = (1 + op_1))) ((not (op_1 = ((-1) + op_0))))), [], [])
(x130, ResoAST, (cl  ((op_0 = (1 + op_1))) ((not (op_1 = ((-1) + op_0))))), [ x131 t6], [])
(x129, Equp1AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))) ((op_0 = (op_1 + 1))) ((not (op_0 = (1 + op_1))))), [], [])
(x128, ResoAST, (cl  ((op_0 = (op_1 + 1))) ((not (op_0 = (1 + op_1))))), [ x129 t5], [])
(x132, ResoAST, (cl  ((op_0 = (op_1 + 1))) ((not (op_1 = ((-1) + op_0))))), [ x130 x128], [])
(x133, Equn2AST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0)))) ((op_0 = (op_1 + 1))) ((op_1 = ((-1) + op_0)))), [], [])
(x134, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0)))) ((op_0 = (op_1 + 1)))), [ x132 x133], [])
(x138, Equp2AST, (cl  ((not ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))) ((not (op_0 = (1 + op_1)))) ((op_1 = ((-1) + op_0)))), [], [])
(x137, ResoAST, (cl  ((not (op_0 = (1 + op_1)))) ((op_1 = ((-1) + op_0)))), [ x138 t6], [])
(x136, Equp2AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))) ((not (op_0 = (op_1 + 1)))) ((op_0 = (1 + op_1)))), [], [])
(x135, ResoAST, (cl  ((not (op_0 = (op_1 + 1)))) ((op_0 = (1 + op_1)))), [ x136 t5], [])
(x139, ResoAST, (cl  ((not (op_0 = (op_1 + 1)))) ((op_1 = ((-1) + op_0)))), [ x137 x135], [])
(x140, Equn1AST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0)))) ((not (op_0 = (op_1 + 1)))) ((not (op_1 = ((-1) + op_0))))), [], [])
(x141, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0)))) ((not (op_0 = (op_1 + 1))))), [ x139 x140], [])
(t7, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))), [ x134 x141], [])
(t8, ReflAST, (cl  (((op_2 ( op_1)) = (op_2 ( op_1))))), [], [])
(t9, ArithpolynormAST, (cl  (((op_0 - 1) = (op_0 + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((op_0 - 1) = (op_0 + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(x27, EqcoAST, (cl  ((not (op_0 = op_0))) ((not (((-1) * 1) = (-1)))) (((op_0 + ((-1) * 1)) = (op_0 + (-1))))), [], [])
(t11, ResoAST, (cl  (((op_0 + ((-1) * 1)) = (op_0 + (-1))))), [ x27 t3 t10 t3 t10], [])
(t12, ArithpolynormAST, (cl  (((op_0 + (-1)) = ((-1) + op_0)))), [], [ ARITH_POLY_NORM ((op_0 + (-1)) = ((-1) + op_0))])
(x142, EqtrAST, (cl  ((not ((op_0 + ((-1) * 1)) = (op_0 + (-1))))) ((not ((op_0 + (-1)) = ((-1) + op_0)))) (((op_0 + ((-1) * 1)) = ((-1) + op_0)))), [], [])
(t13, ResoAST, (cl  (((op_0 + ((-1) * 1)) = ((-1) + op_0)))), [ x142 t11 t12], [])
(x143, EqtrAST, (cl  ((not ((op_0 - 1) = (op_0 + ((-1) * 1))))) ((not ((op_0 + ((-1) * 1)) = ((-1) + op_0)))) (((op_0 - 1) = ((-1) + op_0)))), [], [])
(t14, ResoAST, (cl  (((op_0 - 1) = ((-1) + op_0)))), [ x143 t9 t13], [])
(x28, EqcoAST, (cl  ((not ((op_0 - 1) = ((-1) + op_0)))) (((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))), [], [])
(t15, ResoAST, (cl  (((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))), [ x28 t14 t14], [])
(x29, Equp1AST, (cl  ((not ((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( (op_0 - 1)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x30, ResoAST, (cl  ((op_2 ( (op_0 - 1)))) ((not (op_2 ( ((-1) + op_0)))))), [ t15 x29], [])
(x31, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((op_2 ( op_1))) ((not (op_2 ( (op_0 - 1)))))), [], [])
(x32, Equn2AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [], [])
(x33, Equn2AST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x34, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( op_1)))), [ x30 x31 x32 x33], [])
(x35, Equp2AST, (cl  ((not ((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( (op_0 - 1))))) ((op_2 ( ((-1) + op_0))))), [], [])
(x36, ResoAST, (cl  ((not (op_2 ( (op_0 - 1))))) ((op_2 ( ((-1) + op_0))))), [ t15 x35], [])
(x37, Equn2AST, (cl  (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((op_2 ( op_1))) ((op_2 ( (op_0 - 1))))), [], [])
(x38, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x39, Equn1AST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x40, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((op_2 ( op_1)))), [ x36 x37 x38 x39], [])
(x41, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( op_1))))) ((op_2 ( op_1))) ((not (op_2 ( op_1))))), [], [])
(x42, ResoAST, (cl  ((op_2 ( op_1))) ((not (op_2 ( op_1))))), [ t8 x41], [])
(x43, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1)))), [ x34 x40 x42], [])
(x44, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( op_1))))) ((not (op_2 ( op_1)))) ((op_2 ( op_1)))), [], [])
(x45, ResoAST, (cl  ((not (op_2 ( op_1)))) ((op_2 ( op_1)))), [ t8 x44], [])
(x46, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1)))), [ x43 x45], [])
(x47, Equn1AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((not (op_2 ( op_1)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x48, Equn1AST, (cl  (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((not (op_2 ( op_1)))) ((not (op_2 ( (op_0 - 1)))))), [], [])
(x49, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( (op_0 - 1)))))), [ x39 x47 x48 x36 x46 x43], [])
(x50, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0)))))), [ x49 x30], [])
(x51, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((not (op_2 ( op_1)))) ((op_2 ( (op_0 - 1))))), [], [])
(x52, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x51 x49 x43], [])
(x53, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x54, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x53 x50 x46], [])
(t16, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x33 x52 x54], [])
(x55, ImppAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((not (op_0 = (op_1 + 1)))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))), [], [])
(x58, Equp2AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x57, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ x58 t16], [])
(x56, Equp1AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))) ((op_0 = (op_1 + 1))) ((not (op_1 = ((-1) + op_0))))), [], [])
(x59, ResoAST, (cl  ((op_0 = (op_1 + 1))) ((not (op_1 = ((-1) + op_0))))), [ x56 t7], [])
(x60, ResoAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((not (op_1 = ((-1) + op_0))))), [ x55 x57 x59], [])
(x61, Impn1AST, (cl  ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_1 = ((-1) + op_0)))), [], [])
(x62, Impn2AST, (cl  ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x63, ResoAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x60 x61 x62], [])
(x64, Equn1AST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(x65, ResoAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))), [ x63 x64], [])
(x66, ImppAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (op_1 = ((-1) + op_0)))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x69, Equp2AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))) ((not (op_0 = (op_1 + 1)))) ((op_1 = ((-1) + op_0)))), [], [])
(x68, ResoAST, (cl  ((not (op_0 = (op_1 + 1)))) ((op_1 = ((-1) + op_0)))), [ x69 t7], [])
(x67, Equp1AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x70, ResoAST, (cl  (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x67 t16], [])
(x71, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (op_0 = (op_1 + 1)))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))), [ x66 x68 x70], [])
(x72, Impn1AST, (cl  ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((op_0 = (op_1 + 1)))), [], [])
(x73, Impn2AST, (cl  ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [], [])
(x74, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x71 x72 x73], [])
(x75, Equn2AST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x76, ResoAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x74 x75], [])
(t17, ResoAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ x76 x65], [])
(x77, Equp1AST, (cl  ((not ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x78, ResoAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x77 t17], [])
(x79, Equn1AST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x80, ResoAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x78 x79], [])
(x81, Equp2AST, (cl  ((not ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [], [])
(x82, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x81 t17], [])
(x83, Equn2AST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(x84, ResoAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ x82 x83], [])
(t18, ResoAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))), [ x80 x84], [])
(t19, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((op_1 = ((-1) + op_0)))), [ t19], [])
(x85, EqcoAST, (cl  ((not (op_1 = ((-1) + op_0)))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(t21, ResoAST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ x85 t20 t20], [])
(t22, ReflAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x86, Equp1AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( ((-1) + op_0)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x87, ResoAST, (cl  ((op_2 ( ((-1) + op_0)))) ((not (op_2 ( ((-1) + op_0)))))), [ t22 x86], [])
(x88, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x89, Equn2AST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x90, Equn2AST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x91, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [ x87 x88 x89 x90], [])
(x92, Equp2AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0))))), [], [])
(x93, ResoAST, (cl  ((not (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0))))), [ t22 x92], [])
(x94, Equn2AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [], [])
(x95, Equp1AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( ((-1) + op_0)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x96, Equn1AST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [], [])
(x97, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [ x93 x94 x95 x96], [])
(x98, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x99, ResoAST, (cl  ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [ t21 x98], [])
(x100, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1)))), [ x91 x97 x99], [])
(x101, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x102, ResoAST, (cl  ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [ t21 x101], [])
(x103, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( ((-1) + op_0))))), [ x100 x102], [])
(x104, Equn1AST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((not (op_2 ( ((-1) + op_0))))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x105, Equn1AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((not (op_2 ( op_1)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x106, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0)))))), [ x96 x104 x105 x93 x103 x100], [])
(x107, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0)))))), [ x106 x87], [])
(x108, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x109, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x108 x106 x100], [])
(x110, Equp2AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0))))), [], [])
(x111, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x110 x107 x103], [])
(t23, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x90 x109 x111], [])
(x112, Equp1AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x113, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x112 t23], [])
(x114, Equn1AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x115, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x113 x114], [])
(x116, Equp2AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x117, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ x116 t23], [])
(x118, Equn2AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [], [])
(x119, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x117 x118], [])
(t24, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ x115 x119], [])
(x196, Equn1AST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (true)))), [], [])
(x201, SubproofAST
	(x193, AssumeAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x172, TrueAST, (cl  ((true))), [], [])
(x194, DischargeAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((true))), [], [])
	, (cl ), [], [])
(x198, ResoAST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x194 x196], [])
(x197, Equn2AST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((true))), [], [])
(x200, SubproofAST
	(x192, AssumeAST, (cl  ((true))), [], [])
(x173, EqreAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x195, DischargeAST, (cl  ((not (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
	, (cl ), [], [])
(x199, ResoAST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x195 x197], [])
(t25, ResoAST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))), [ x198 x199], [])
(x120, Equp1AST, (cl  ((not (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((true))), [], [])
(x121, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((true))), [ x120 t25], [])
(x122, Equn1AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((true))), [], [])
(x123, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) ((true))), [ x121 x122], [])
(x124, Equp2AST, (cl  ((not (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))) ((not (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x125, ResoAST, (cl  ((not (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x124 t25], [])
(x126, Equn2AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (true)))), [], [])
(x127, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) ((not (true)))), [ x125 x126], [])
(t26, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))), [ x123 x127], [])
(x186, Equn1AST, (cl  (((not (true)) = (false))) ((not (not (true)))) ((not (false)))), [], [])
(x191, SubproofAST
	(x174, AssumeAST, (cl  ((not (true)))), [], [])
(x175, Impn1AST, (cl  ((imp  (true) (false))) ((true))), [], [])
(x176, ResoAST, (cl  ((imp  (true) (false)))), [ x174 x175], [])
(x177, ImpAST, (cl  ((not (true))) ((false))), [ x176], [])
(x178, TrueAST, (cl  ((true))), [], [])
(x179, ResoAST, (cl  ((false))), [ x177 x178], [])
(x184, DischargeAST, (cl  ((not (not (true)))) ((false))), [], [])
	, (cl ), [], [])
(x188, ResoAST, (cl  (((not (true)) = (false))) ((not (not (true))))), [ x184 x186], [])
(x187, Equn2AST, (cl  (((not (true)) = (false))) ((not (true))) ((false))), [], [])
(x190, SubproofAST
	(x180, AssumeAST, (cl  ((false))), [], [])
(x181, WeakenAST, (cl  ((false)) ((not (true)))), [ x180], [])
(x182, FalsAST, (cl  ((not (false)))), [], [])
(x183, ResoAST, (cl  ((not (true)))), [ x181 x182], [])
(x185, DischargeAST, (cl  ((not (false))) ((not (true)))), [], [])
	, (cl ), [], [])
(x189, ResoAST, (cl  (((not (true)) = (false))) ((not (true)))), [ x185 x187], [])
(t27, ResoAST, (cl  (((not (true)) = (false)))), [ x188 x189], [])
(x147, Equp1AST, (cl  ((not ((not (true)) = (false)))) ((not (true))) ((not (false)))), [], [])
(x146, ResoAST, (cl  ((not (true))) ((not (false)))), [ x147 t27], [])
(x145, Equp1AST, (cl  ((not ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (not (true))))), [], [])
(x144, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (not (true))))), [ x145 t26], [])
(x148, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (false)))), [ x146 x144], [])
(x149, Equn2AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((false))), [], [])
(x150, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x148 x149], [])
(x154, Equp2AST, (cl  ((not ((not (true)) = (false)))) ((not (not (true)))) ((false))), [], [])
(x153, ResoAST, (cl  ((not (not (true)))) ((false))), [ x154 t27], [])
(x152, Equp2AST, (cl  ((not ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (true)))), [], [])
(x151, ResoAST, (cl  ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (true)))), [ x152 t26], [])
(x155, ResoAST, (cl  ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((false))), [ x153 x151], [])
(x156, Equn1AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (false)))), [], [])
(x157, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ x155 x156], [])
(t28, ResoAST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))), [ x150 x157], [])
(x161, Equp1AST, (cl  ((not ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (false)))), [], [])
(x160, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (false)))), [ x161 t28], [])
(x159, Equp1AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [], [])
(x158, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ x159 t24], [])
(x162, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (false)))), [ x160 x158], [])
(x163, Equn2AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((false))), [], [])
(x164, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x162 x163], [])
(x168, Equp2AST, (cl  ((not ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((false))), [], [])
(x167, ResoAST, (cl  ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((false))), [ x168 t28], [])
(x166, Equp2AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [], [])
(x165, ResoAST, (cl  ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x166 t24], [])
(x169, ResoAST, (cl  ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((false))), [ x167 x165], [])
(x170, Equn1AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (false)))), [], [])
(x171, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ x169 x170], [])
(t29, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))), [ x164 x171], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t31], [])
(t33, ResoAST, (cl  ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl ), [ t33 t34], [])

Certif after process_subproof: 
(a0, AssumeAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t3, ReflAST, (cl  ((op_0 = op_0))), [], [])
(t4, ArithpolynormAST, (cl  (((op_1 + 1) = (1 + op_1)))), [], [ ARITH_POLY_NORM ((op_1 + 1) = (1 + op_1))])
(x1, Equp1AST, (cl  ((not ((op_1 + 1) = (1 + op_1)))) ((op_1 + 1)) ((not (1 + op_1)))), [], [])
(x2, ResoAST, (cl  ((op_1 + 1)) ((not (1 + op_1)))), [ t4 x1], [])
(x3, Equp1AST, (cl  ((not (op_0 = (op_1 + 1)))) (op_0) ((not (op_1 + 1)))), [], [])
(x4, Equn2AST, (cl  ((op_0 = (1 + op_1))) (op_0) ((1 + op_1))), [], [])
(x5, Equn2AST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((op_0 = (op_1 + 1))) ((op_0 = (1 + op_1)))), [], [])
(x6, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((op_0 = (1 + op_1))) (op_0) (op_0)), [ x2 x3 x4 x5], [])
(x7, Equp2AST, (cl  ((not ((op_1 + 1) = (1 + op_1)))) ((not (op_1 + 1))) ((1 + op_1))), [], [])
(x8, ResoAST, (cl  ((not (op_1 + 1))) ((1 + op_1))), [ t4 x7], [])
(x9, Equn2AST, (cl  ((op_0 = (op_1 + 1))) (op_0) ((op_1 + 1))), [], [])
(x10, Equp1AST, (cl  ((not (op_0 = (1 + op_1)))) (op_0) ((not (1 + op_1)))), [], [])
(x11, Equn1AST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (op_1 + 1)))) ((not (op_0 = (1 + op_1))))), [], [])
(x12, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (1 + op_1)))) (op_0) (op_0)), [ x8 x9 x10 x11], [])
(x13, Equp1AST, (cl  ((not (op_0 = op_0))) (op_0) ((not op_0))), [], [])
(x14, ResoAST, (cl  (op_0) ((not op_0))), [ t3 x13], [])
(x15, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) (op_0)), [ x6 x12 x14], [])
(x16, Equp2AST, (cl  ((not (op_0 = op_0))) ((not op_0)) (op_0)), [], [])
(x17, ResoAST, (cl  ((not op_0)) (op_0)), [ t3 x16], [])
(x18, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) (op_0)), [ x15 x17], [])
(x19, Equn1AST, (cl  ((op_0 = (1 + op_1))) ((not op_0)) ((not (1 + op_1)))), [], [])
(x20, Equn1AST, (cl  ((op_0 = (op_1 + 1))) ((not op_0)) ((not (op_1 + 1)))), [], [])
(x21, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_1 + 1)))), [ x11 x19 x20 x8 x18 x15], [])
(x22, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (1 + op_1)))), [ x21 x2], [])
(x23, Equp2AST, (cl  ((not (op_0 = (op_1 + 1)))) ((not op_0)) ((op_1 + 1))), [], [])
(x24, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (op_1 + 1))))), [ x23 x21 x15], [])
(x25, Equp2AST, (cl  ((not (op_0 = (1 + op_1)))) ((not op_0)) ((1 + op_1))), [], [])
(x26, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1)))) ((not (op_0 = (1 + op_1))))), [ x25 x22 x18], [])
(t5, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))), [ x5 x24 x26], [])
(t6, ArithpolynormAST, (cl  (((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))), [], [ ARITH_POLY_NORM ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0)))])
(x131, Equp1AST, (cl  ((not ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))) ((op_0 = (1 + op_1))) ((not (op_1 = ((-1) + op_0))))), [], [])
(x130, ResoAST, (cl  ((op_0 = (1 + op_1))) ((not (op_1 = ((-1) + op_0))))), [ x131 t6], [])
(x129, Equp1AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))) ((op_0 = (op_1 + 1))) ((not (op_0 = (1 + op_1))))), [], [])
(x128, ResoAST, (cl  ((op_0 = (op_1 + 1))) ((not (op_0 = (1 + op_1))))), [ x129 t5], [])
(x132, ResoAST, (cl  ((op_0 = (op_1 + 1))) ((not (op_1 = ((-1) + op_0))))), [ x130 x128], [])
(x133, Equn2AST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0)))) ((op_0 = (op_1 + 1))) ((op_1 = ((-1) + op_0)))), [], [])
(x134, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0)))) ((op_0 = (op_1 + 1)))), [ x132 x133], [])
(x138, Equp2AST, (cl  ((not ((op_0 = (1 + op_1)) = (op_1 = ((-1) + op_0))))) ((not (op_0 = (1 + op_1)))) ((op_1 = ((-1) + op_0)))), [], [])
(x137, ResoAST, (cl  ((not (op_0 = (1 + op_1)))) ((op_1 = ((-1) + op_0)))), [ x138 t6], [])
(x136, Equp2AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_0 = (1 + op_1))))) ((not (op_0 = (op_1 + 1)))) ((op_0 = (1 + op_1)))), [], [])
(x135, ResoAST, (cl  ((not (op_0 = (op_1 + 1)))) ((op_0 = (1 + op_1)))), [ x136 t5], [])
(x139, ResoAST, (cl  ((not (op_0 = (op_1 + 1)))) ((op_1 = ((-1) + op_0)))), [ x137 x135], [])
(x140, Equn1AST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0)))) ((not (op_0 = (op_1 + 1)))) ((not (op_1 = ((-1) + op_0))))), [], [])
(x141, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0)))) ((not (op_0 = (op_1 + 1))))), [ x139 x140], [])
(t7, ResoAST, (cl  (((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))), [ x134 x141], [])
(t8, ReflAST, (cl  (((op_2 ( op_1)) = (op_2 ( op_1))))), [], [])
(t9, ArithpolynormAST, (cl  (((op_0 - 1) = (op_0 + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((op_0 - 1) = (op_0 + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(x27, EqcoAST, (cl  ((not (op_0 = op_0))) ((not (((-1) * 1) = (-1)))) (((op_0 + ((-1) * 1)) = (op_0 + (-1))))), [], [])
(t11, ResoAST, (cl  (((op_0 + ((-1) * 1)) = (op_0 + (-1))))), [ x27 t3 t10 t3 t10], [])
(t12, ArithpolynormAST, (cl  (((op_0 + (-1)) = ((-1) + op_0)))), [], [ ARITH_POLY_NORM ((op_0 + (-1)) = ((-1) + op_0))])
(x142, EqtrAST, (cl  ((not ((op_0 + ((-1) * 1)) = (op_0 + (-1))))) ((not ((op_0 + (-1)) = ((-1) + op_0)))) (((op_0 + ((-1) * 1)) = ((-1) + op_0)))), [], [])
(t13, ResoAST, (cl  (((op_0 + ((-1) * 1)) = ((-1) + op_0)))), [ x142 t11 t12], [])
(x143, EqtrAST, (cl  ((not ((op_0 - 1) = (op_0 + ((-1) * 1))))) ((not ((op_0 + ((-1) * 1)) = ((-1) + op_0)))) (((op_0 - 1) = ((-1) + op_0)))), [], [])
(t14, ResoAST, (cl  (((op_0 - 1) = ((-1) + op_0)))), [ x143 t9 t13], [])
(x28, EqcoAST, (cl  ((not ((op_0 - 1) = ((-1) + op_0)))) (((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))), [], [])
(t15, ResoAST, (cl  (((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))), [ x28 t14 t14], [])
(x29, Equp1AST, (cl  ((not ((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( (op_0 - 1)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x30, ResoAST, (cl  ((op_2 ( (op_0 - 1)))) ((not (op_2 ( ((-1) + op_0)))))), [ t15 x29], [])
(x31, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((op_2 ( op_1))) ((not (op_2 ( (op_0 - 1)))))), [], [])
(x32, Equn2AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [], [])
(x33, Equn2AST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x34, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( op_1)))), [ x30 x31 x32 x33], [])
(x35, Equp2AST, (cl  ((not ((op_2 ( (op_0 - 1))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( (op_0 - 1))))) ((op_2 ( ((-1) + op_0))))), [], [])
(x36, ResoAST, (cl  ((not (op_2 ( (op_0 - 1))))) ((op_2 ( ((-1) + op_0))))), [ t15 x35], [])
(x37, Equn2AST, (cl  (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((op_2 ( op_1))) ((op_2 ( (op_0 - 1))))), [], [])
(x38, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x39, Equn1AST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x40, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((op_2 ( op_1)))), [ x36 x37 x38 x39], [])
(x41, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( op_1))))) ((op_2 ( op_1))) ((not (op_2 ( op_1))))), [], [])
(x42, ResoAST, (cl  ((op_2 ( op_1))) ((not (op_2 ( op_1))))), [ t8 x41], [])
(x43, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1)))), [ x34 x40 x42], [])
(x44, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( op_1))))) ((not (op_2 ( op_1)))) ((op_2 ( op_1)))), [], [])
(x45, ResoAST, (cl  ((not (op_2 ( op_1)))) ((op_2 ( op_1)))), [ t8 x44], [])
(x46, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1)))), [ x43 x45], [])
(x47, Equn1AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((not (op_2 ( op_1)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x48, Equn1AST, (cl  (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((not (op_2 ( op_1)))) ((not (op_2 ( (op_0 - 1)))))), [], [])
(x49, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( (op_0 - 1)))))), [ x39 x47 x48 x36 x46 x43], [])
(x50, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0)))))), [ x49 x30], [])
(x51, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((not (op_2 ( op_1)))) ((op_2 ( (op_0 - 1))))), [], [])
(x52, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x51 x49 x43], [])
(x53, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x54, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x53 x50 x46], [])
(t16, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x33 x52 x54], [])
(x55, ImppAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((not (op_0 = (op_1 + 1)))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))), [], [])
(x58, Equp2AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x57, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ x58 t16], [])
(x56, Equp1AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))) ((op_0 = (op_1 + 1))) ((not (op_1 = ((-1) + op_0))))), [], [])
(x59, ResoAST, (cl  ((op_0 = (op_1 + 1))) ((not (op_1 = ((-1) + op_0))))), [ x56 t7], [])
(x60, ResoAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((not (op_1 = ((-1) + op_0))))), [ x55 x57 x59], [])
(x61, Impn1AST, (cl  ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_1 = ((-1) + op_0)))), [], [])
(x62, Impn2AST, (cl  ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x63, ResoAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x60 x61 x62], [])
(x64, Equn1AST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(x65, ResoAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))), [ x63 x64], [])
(x66, ImppAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (op_1 = ((-1) + op_0)))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x69, Equp2AST, (cl  ((not ((op_0 = (op_1 + 1)) = (op_1 = ((-1) + op_0))))) ((not (op_0 = (op_1 + 1)))) ((op_1 = ((-1) + op_0)))), [], [])
(x68, ResoAST, (cl  ((not (op_0 = (op_1 + 1)))) ((op_1 = ((-1) + op_0)))), [ x69 t7], [])
(x67, Equp1AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))) = ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x70, ResoAST, (cl  (((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x67 t16], [])
(x71, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (op_0 = (op_1 + 1)))) (((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))), [ x66 x68 x70], [])
(x72, Impn1AST, (cl  ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((op_0 = (op_1 + 1)))), [], [])
(x73, Impn2AST, (cl  ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((not ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [], [])
(x74, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x71 x72 x73], [])
(x75, Equn2AST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x76, ResoAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x74 x75], [])
(t17, ResoAST, (cl  (((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ x76 x65], [])
(x77, Equp1AST, (cl  ((not ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x78, ResoAST, (cl  ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x77 t17], [])
(x79, Equn1AST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [], [])
(x80, ResoAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x78 x79], [])
(x81, Equp2AST, (cl  ((not ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))) = (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [], [])
(x82, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))), [ x81 t17], [])
(x83, Equn2AST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(x84, ResoAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ x82 x83], [])
(t18, ResoAST, (cl  (((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))), [ x80 x84], [])
(t19, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((op_1 = ((-1) + op_0)))), [ t19], [])
(x85, EqcoAST, (cl  ((not (op_1 = ((-1) + op_0)))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(t21, ResoAST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ x85 t20 t20], [])
(t22, ReflAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x86, Equp1AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( ((-1) + op_0)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x87, ResoAST, (cl  ((op_2 ( ((-1) + op_0)))) ((not (op_2 ( ((-1) + op_0)))))), [ t22 x86], [])
(x88, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x89, Equn2AST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x90, Equn2AST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x91, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [ x87 x88 x89 x90], [])
(x92, Equp2AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0))))), [], [])
(x93, ResoAST, (cl  ((not (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0))))), [ t22 x92], [])
(x94, Equn2AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [], [])
(x95, Equp1AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( ((-1) + op_0)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x96, Equn1AST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [], [])
(x97, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((op_2 ( ((-1) + op_0))))), [ x93 x94 x95 x96], [])
(x98, Equp1AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x99, ResoAST, (cl  ((op_2 ( op_1))) ((not (op_2 ( ((-1) + op_0)))))), [ t21 x98], [])
(x100, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( op_1)))), [ x91 x97 x99], [])
(x101, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x102, ResoAST, (cl  ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [ t21 x101], [])
(x103, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((op_2 ( ((-1) + op_0))))), [ x100 x102], [])
(x104, Equn1AST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((not (op_2 ( ((-1) + op_0))))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x105, Equn1AST, (cl  (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) ((not (op_2 ( op_1)))) ((not (op_2 ( ((-1) + op_0)))))), [], [])
(x106, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0)))))), [ x96 x104 x105 x93 x103 x100], [])
(x107, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0)))))), [ x106 x87], [])
(x108, Equp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( op_1)))) ((op_2 ( ((-1) + op_0))))), [], [])
(x109, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x108 x106 x100], [])
(x110, Equp2AST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (op_2 ( ((-1) + op_0))))) ((op_2 ( ((-1) + op_0))))), [], [])
(x111, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x110 x107 x103], [])
(t23, ResoAST, (cl  ((((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x90 x109 x111], [])
(x112, Equp1AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x113, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x112 t23], [])
(x114, Equn1AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x115, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x113 x114], [])
(x116, Equp2AST, (cl  ((not (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))) = ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [], [])
(x117, ResoAST, (cl  ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) (((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))), [ x116 t23], [])
(x118, Equn2AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [], [])
(x119, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x117 x118], [])
(t24, ResoAST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ x115 x119], [])
(x196, Equn1AST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (true)))), [], [])
(x194, AndnAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((true))), [], [])
(x198, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x194 x196], [])
(x197, Equn2AST, (cl  ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((true))), [], [])
(x195, AndnAST, (cl  ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x199, ResoAST, (cl  ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x195 x197], [])
(t25, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))), [ x198 x199], [])
(x120, Equp1AST, (cl  ((not (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((true))), [], [])
(x121, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((true))), [ x120 t25], [])
(x122, Equn1AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) ((true))), [], [])
(x123, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) ((true))), [ x121 x122], [])
(x124, Equp2AST, (cl  ((not (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) = (true)))) ((not (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x125, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (true))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x124 t25], [])
(x126, Equn2AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (true)))), [], [])
(x127, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true)))) ((not (true)))), [ x125 x126], [])
(t26, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))), [ x123 x127], [])
(x186, Equn1AST, (cl  (((not (true)) = (false))) ((not (not (true)))) ((not (false)))), [], [])
(x184, AndnAST, (cl  ((and  (not (true)) (not (false)))) ((not (not (true)))) ((false))), [], [])
(x188, ResoAST, (cl  ((and  (not (true)) (not (false)))) (((not (true)) = (false))) ((not (not (true))))), [ x184 x186], [])
(x187, Equn2AST, (cl  (((not (true)) = (false))) ((not (true))) ((false))), [], [])
(x185, AndnAST, (cl  ((and  (false) (not (not (true))))) ((not (false))) ((not (true)))), [], [])
(x189, ResoAST, (cl  ((and  (false) (not (not (true))))) (((not (true)) = (false))) ((not (true)))), [ x185 x187], [])
(t27, ResoAST, (cl  ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true))))) (((not (true)) = (false)))), [ x188 x189], [])
(x147, Equp1AST, (cl  ((not ((not (true)) = (false)))) ((not (true))) ((not (false)))), [], [])
(x146, ResoAST, (cl  ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true))))) ((not (true))) ((not (false)))), [ x147 t27], [])
(x145, Equp1AST, (cl  ((not ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (not (true))))), [], [])
(x144, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (not (true))))), [ x145 t26], [])
(x148, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (false)))), [ x146 x144], [])
(x149, Equn2AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((false))), [], [])
(x150, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true))))) (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x148 x149], [])
(x154, Equp2AST, (cl  ((not ((not (true)) = (false)))) ((not (not (true)))) ((false))), [], [])
(x153, ResoAST, (cl  ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true))))) ((not (not (true)))) ((false))), [ x154 t27], [])
(x152, Equp2AST, (cl  ((not ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (not (true))))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (true)))), [], [])
(x151, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (true)))), [ x152 t26], [])
(x155, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true))))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((false))), [ x153 x151], [])
(x156, Equn1AST, (cl  (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (false)))), [], [])
(x157, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true))))) (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ x155 x156], [])
(t28, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true))))) (((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))), [ x150 x157], [])
(x161, Equp1AST, (cl  ((not ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (false)))), [], [])
(x160, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))) ((not (false)))), [ x161 t28], [])
(x159, Equp1AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [], [])
(x158, ResoAST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ x159 t24], [])
(x162, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true))))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((not (false)))), [ x160 x158], [])
(x163, Equn2AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))) ((false))), [], [])
(x164, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true))))) (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false))) ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ x162 x163], [])
(x168, Equp2AST, (cl  ((not ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))) = (false)))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((false))), [], [])
(x167, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true))))) ((not (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((false))), [ x168 t28], [])
(x166, Equp2AST, (cl  ((not ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [], [])
(x165, ResoAST, (cl  ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x166 t24], [])
(x169, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true))))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((false))), [ x167 x165], [])
(x170, Equn1AST, (cl  (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))) ((not (false)))), [], [])
(x171, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true))))) (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false))) ((not (not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ x169 x170], [])
(t29, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true))))) (((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))) = (false)))), [ x164 x171], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))) = (not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))))) ((not (not (imp  (op_0 = (op_1 + 1)) ((op_2 ( op_1)) = (op_2 ( (op_0 - 1)))))))) ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (op_1 = ((-1) + op_0)) ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((op_2 ( op_1)) = (op_2 ( ((-1) + op_0))))))), [ t31], [])
(t33, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true))))) ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((and  (false) (not (not (true)))))), [ t33 t34], [])
(x203, AndpAST, (cl  ((not (and  (false) (not (not (true)))))) ((false))), [], [ 0])
(x202, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((false))), [ t35 x203], [])
(x181, WeakenAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((false)) ((not (true)))), [ x202], [])
(x182, FalsAST, (cl  ((not (false)))), [], [])
(x183, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((not (true)))), [ x181 x182], [])
(x204, AndpAST, (cl  ((not (and  (false) (not (not (true)))))) ((not (not (true))))), [], [ 1])
(x205, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false)))) ((not (not (true))))), [ t35 x204], [])
(x206, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((and  (not (true)) (not (false))))), [ x183 x205], [])
(x208, AndpAST, (cl  ((not (and  (not (true)) (not (false))))) ((not (true)))), [], [ 0])
(x207, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (true)))), [ x206 x208], [])
(x175, Impn1AST, (cl  ((imp  (true) (false))) ((true))), [], [])
(x176, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((imp  (true) (false)))), [ x207 x175], [])
(x216, ImppAST, (cl  ((not (imp  (true) (false)))) ((not (true))) ((false))), [], [])
(x177, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (true))) ((false))), [ x216 x176], [])
(x178, TrueAST, (cl  ((true))), [], [])
(x179, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((false))), [ x177 x178], [])
(x209, AndpAST, (cl  ((not (and  (not (true)) (not (false))))) ((not (false)))), [], [ 1])
(x210, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))) ((not (false)))), [ x206 x209], [])
(x211, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))), [ x179 x210], [])
(x213, AndpAST, (cl  ((not (and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))) ((true))), [], [ 0])
(x212, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((true))), [ x211 x213], [])
(x173, EqreAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [])
(x214, AndpAST, (cl  ((not (and  (true) (not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [], [ 1])
(x215, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true)))) ((not ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0))))))), [ x211 x214], [])
(x217, ResoAST, (cl  ((and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true))))), [ x173 x215], [])
(x219, AndpAST, (cl  ((not (and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true))))) (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [], [ 0])
(x218, ResoAST, (cl  (((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))))), [ x217 x219], [])
(x172, TrueAST, (cl  ((true))), [], [])
(x220, AndpAST, (cl  ((not (and  ((op_2 ( ((-1) + op_0))) = (op_2 ( ((-1) + op_0)))) (not (true))))) ((not (true)))), [], [ 1])
(x221, ResoAST, (cl  ((not (true)))), [ x217 x220], [])
(x222, ResoAST, (cl ), [ x172 x221], [])

