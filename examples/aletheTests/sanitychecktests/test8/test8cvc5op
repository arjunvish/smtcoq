Certif before preprocessing: 
(a0, AssumeAST, (cl  ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((f ( x)) = (f ( ((-1) + y))))) = (false)))) ((not (not ((f ( x)) = (f ( ((-1) + y))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))) ((not (not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))) ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [], [])
(t3, ReflAST, (cl  ((y = y))), [], [])
(t4, HoleAST, (cl  (((x + 1) = (1 + x)))), [], [ ARITH_POLY_NORM ((x + 1) = (1 + x))])
(t5, CongAST, (cl  (((y = (x + 1)) = (y = (1 + x))))), [ t3 t4], [])
(t6, HoleAST, (cl  (((y = (1 + x)) = (x = ((-1) + y))))), [], [ ARITH_POLY_NORM ((y = (1 + x)) = (x = ((-1) + y)))])
(t7, TransAST, (cl  (((y = (x + 1)) = (x = ((-1) + y))))), [ t5 t6], [])
(t8, ReflAST, (cl  (((f ( x)) = (f ( x))))), [], [])
(t9, HoleAST, (cl  (((y - 1) = (y + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((y - 1) = (y + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(t11, CongAST, (cl  (((y + ((-1) * 1)) = (y + (-1))))), [ t3 t10], [])
(t12, HoleAST, (cl  (((y + (-1)) = ((-1) + y)))), [], [ ARITH_POLY_NORM ((y + (-1)) = ((-1) + y))])
(t13, TransAST, (cl  (((y + ((-1) * 1)) = ((-1) + y)))), [ t11 t12], [])
(t14, TransAST, (cl  (((y - 1) = ((-1) + y)))), [ t9 t13], [])
(t15, CongAST, (cl  (((f ( (y - 1))) = (f ( ((-1) + y)))))), [ t14], [])
(t16, CongAST, (cl  ((((f ( x)) = (f ( (y - 1)))) = ((f ( x)) = (f ( ((-1) + y))))))), [ t8 t15], [])
(t17, CongAST, (cl  (((imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1))))) = (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t7 t16], [])
(t18, CongAST, (cl  (((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))), [ t17], [])
(t19, ResoAST, (cl  ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((x = ((-1) + y)))), [ t19], [])
(t21, CongAST, (cl  (((f ( x)) = (f ( ((-1) + y)))))), [ t20], [])
(t22, ReflAST, (cl  (((f ( ((-1) + y))) = (f ( ((-1) + y)))))), [], [])
(t23, CongAST, (cl  ((((f ( x)) = (f ( ((-1) + y)))) = ((f ( ((-1) + y))) = (f ( ((-1) + y))))))), [ t21 t22], [])
(t24, CongAST, (cl  (((not ((f ( x)) = (f ( ((-1) + y))))) = (not ((f ( ((-1) + y))) = (f ( ((-1) + y)))))))), [ t23], [])
(t25, AllsimpAST, (cl  ((((f ( ((-1) + y))) = (f ( ((-1) + y)))) = (true)))), [], [ eq_simplify1 (f ( ((-1) + y)))])
(t26, CongAST, (cl  (((not ((f ( ((-1) + y))) = (f ( ((-1) + y))))) = (not (true))))), [ t25], [])
(t27, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t28, TransAST, (cl  (((not ((f ( ((-1) + y))) = (f ( ((-1) + y))))) = (false)))), [ t26 t27], [])
(t29, TransAST, (cl  (((not ((f ( x)) = (f ( ((-1) + y))))) = (false)))), [ t24 t28], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))) ((not (not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))) ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((f ( x)) = (f ( ((-1) + y))))))), [ t31], [])
(t33, ResoAST, (cl  ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl ), [ t33 t34], [])

Certif after storing shared terms: 
(a0, AssumeAST, (cl  ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((f ( x)) = (f ( ((-1) + y))))) = (false)))) ((not (not ((f ( x)) = (f ( ((-1) + y))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))) ((not (not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))) ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [], [])
(t3, ReflAST, (cl  ((y = y))), [], [])
(t4, HoleAST, (cl  (((x + 1) = (1 + x)))), [], [ ARITH_POLY_NORM ((x + 1) = (1 + x))])
(t5, CongAST, (cl  (((y = (x + 1)) = (y = (1 + x))))), [ t3 t4], [])
(t6, HoleAST, (cl  (((y = (1 + x)) = (x = ((-1) + y))))), [], [ ARITH_POLY_NORM ((y = (1 + x)) = (x = ((-1) + y)))])
(t7, TransAST, (cl  (((y = (x + 1)) = (x = ((-1) + y))))), [ t5 t6], [])
(t8, ReflAST, (cl  (((f ( x)) = (f ( x))))), [], [])
(t9, HoleAST, (cl  (((y - 1) = (y + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((y - 1) = (y + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(t11, CongAST, (cl  (((y + ((-1) * 1)) = (y + (-1))))), [ t3 t10], [])
(t12, HoleAST, (cl  (((y + (-1)) = ((-1) + y)))), [], [ ARITH_POLY_NORM ((y + (-1)) = ((-1) + y))])
(t13, TransAST, (cl  (((y + ((-1) * 1)) = ((-1) + y)))), [ t11 t12], [])
(t14, TransAST, (cl  (((y - 1) = ((-1) + y)))), [ t9 t13], [])
(t15, CongAST, (cl  (((f ( (y - 1))) = (f ( ((-1) + y)))))), [ t14], [])
(t16, CongAST, (cl  ((((f ( x)) = (f ( (y - 1)))) = ((f ( x)) = (f ( ((-1) + y))))))), [ t8 t15], [])
(t17, CongAST, (cl  (((imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1))))) = (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t7 t16], [])
(t18, CongAST, (cl  (((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))), [ t17], [])
(t19, ResoAST, (cl  ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((x = ((-1) + y)))), [ t19], [])
(t21, CongAST, (cl  (((f ( x)) = (f ( ((-1) + y)))))), [ t20], [])
(t22, ReflAST, (cl  (((f ( ((-1) + y))) = (f ( ((-1) + y)))))), [], [])
(t23, CongAST, (cl  ((((f ( x)) = (f ( ((-1) + y)))) = ((f ( ((-1) + y))) = (f ( ((-1) + y))))))), [ t21 t22], [])
(t24, CongAST, (cl  (((not ((f ( x)) = (f ( ((-1) + y))))) = (not ((f ( ((-1) + y))) = (f ( ((-1) + y)))))))), [ t23], [])
(t25, AllsimpAST, (cl  ((((f ( ((-1) + y))) = (f ( ((-1) + y)))) = (true)))), [], [ eq_simplify1 (f ( ((-1) + y)))])
(t26, CongAST, (cl  (((not ((f ( ((-1) + y))) = (f ( ((-1) + y))))) = (not (true))))), [ t25], [])
(t27, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t28, TransAST, (cl  (((not ((f ( ((-1) + y))) = (f ( ((-1) + y))))) = (false)))), [ t26 t27], [])
(t29, TransAST, (cl  (((not ((f ( x)) = (f ( ((-1) + y))))) = (false)))), [ t24 t28], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))) ((not (not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))) ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((f ( x)) = (f ( ((-1) + y))))))), [ t31], [])
(t33, ResoAST, (cl  ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl ), [ t33 t34], [])

Certif after process_fins: 
(a0, AssumeAST, (cl  ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((f ( x)) = (f ( ((-1) + y))))) = (false)))) ((not (not ((f ( x)) = (f ( ((-1) + y))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))) ((not (not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))) ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [], [])
(t3, ReflAST, (cl  ((y = y))), [], [])
(t4, HoleAST, (cl  (((x + 1) = (1 + x)))), [], [ ARITH_POLY_NORM ((x + 1) = (1 + x))])
(t5, CongAST, (cl  (((y = (x + 1)) = (y = (1 + x))))), [ t3 t4], [])
(t6, HoleAST, (cl  (((y = (1 + x)) = (x = ((-1) + y))))), [], [ ARITH_POLY_NORM ((y = (1 + x)) = (x = ((-1) + y)))])
(t7, TransAST, (cl  (((y = (x + 1)) = (x = ((-1) + y))))), [ t5 t6], [])
(t8, ReflAST, (cl  (((f ( x)) = (f ( x))))), [], [])
(t9, HoleAST, (cl  (((y - 1) = (y + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((y - 1) = (y + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(t11, CongAST, (cl  (((y + ((-1) * 1)) = (y + (-1))))), [ t3 t10], [])
(t12, HoleAST, (cl  (((y + (-1)) = ((-1) + y)))), [], [ ARITH_POLY_NORM ((y + (-1)) = ((-1) + y))])
(t13, TransAST, (cl  (((y + ((-1) * 1)) = ((-1) + y)))), [ t11 t12], [])
(t14, TransAST, (cl  (((y - 1) = ((-1) + y)))), [ t9 t13], [])
(t15, CongAST, (cl  (((f ( (y - 1))) = (f ( ((-1) + y)))))), [ t14], [])
(t16, CongAST, (cl  ((((f ( x)) = (f ( (y - 1)))) = ((f ( x)) = (f ( ((-1) + y))))))), [ t8 t15], [])
(t17, CongAST, (cl  (((imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1))))) = (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t7 t16], [])
(t18, CongAST, (cl  (((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))), [ t17], [])
(t19, ResoAST, (cl  ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((x = ((-1) + y)))), [ t19], [])
(t21, CongAST, (cl  (((f ( x)) = (f ( ((-1) + y)))))), [ t20], [])
(t22, ReflAST, (cl  (((f ( ((-1) + y))) = (f ( ((-1) + y)))))), [], [])
(t23, CongAST, (cl  ((((f ( x)) = (f ( ((-1) + y)))) = ((f ( ((-1) + y))) = (f ( ((-1) + y))))))), [ t21 t22], [])
(t24, CongAST, (cl  (((not ((f ( x)) = (f ( ((-1) + y))))) = (not ((f ( ((-1) + y))) = (f ( ((-1) + y)))))))), [ t23], [])
(t25, AllsimpAST, (cl  ((((f ( ((-1) + y))) = (f ( ((-1) + y)))) = (true)))), [], [ eq_simplify1 (f ( ((-1) + y)))])
(t26, CongAST, (cl  (((not ((f ( ((-1) + y))) = (f ( ((-1) + y))))) = (not (true))))), [ t25], [])
(t27, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t28, TransAST, (cl  (((not ((f ( ((-1) + y))) = (f ( ((-1) + y))))) = (false)))), [ t26 t27], [])
(t29, TransAST, (cl  (((not ((f ( x)) = (f ( ((-1) + y))))) = (false)))), [ t24 t28], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))) ((not (not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))) ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((f ( x)) = (f ( ((-1) + y))))))), [ t31], [])
(t33, ResoAST, (cl  ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl ), [ t33 t34], [])

Certif after process_hole: 
(a0, AssumeAST, (cl  ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((f ( x)) = (f ( ((-1) + y))))) = (false)))) ((not (not ((f ( x)) = (f ( ((-1) + y))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))) ((not (not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))) ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [], [])
(t3, ReflAST, (cl  ((y = y))), [], [])
(t4, ArithpolynormAST, (cl  (((x + 1) = (1 + x)))), [], [ ARITH_POLY_NORM ((x + 1) = (1 + x))])
(t5, CongAST, (cl  (((y = (x + 1)) = (y = (1 + x))))), [ t3 t4], [])
(t6, ArithpolynormAST, (cl  (((y = (1 + x)) = (x = ((-1) + y))))), [], [ ARITH_POLY_NORM ((y = (1 + x)) = (x = ((-1) + y)))])
(t7, TransAST, (cl  (((y = (x + 1)) = (x = ((-1) + y))))), [ t5 t6], [])
(t8, ReflAST, (cl  (((f ( x)) = (f ( x))))), [], [])
(t9, ArithpolynormAST, (cl  (((y - 1) = (y + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((y - 1) = (y + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(t11, CongAST, (cl  (((y + ((-1) * 1)) = (y + (-1))))), [ t3 t10], [])
(t12, ArithpolynormAST, (cl  (((y + (-1)) = ((-1) + y)))), [], [ ARITH_POLY_NORM ((y + (-1)) = ((-1) + y))])
(t13, TransAST, (cl  (((y + ((-1) * 1)) = ((-1) + y)))), [ t11 t12], [])
(t14, TransAST, (cl  (((y - 1) = ((-1) + y)))), [ t9 t13], [])
(t15, CongAST, (cl  (((f ( (y - 1))) = (f ( ((-1) + y)))))), [ t14], [])
(t16, CongAST, (cl  ((((f ( x)) = (f ( (y - 1)))) = ((f ( x)) = (f ( ((-1) + y))))))), [ t8 t15], [])
(t17, CongAST, (cl  (((imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1))))) = (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t7 t16], [])
(t18, CongAST, (cl  (((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))), [ t17], [])
(t19, ResoAST, (cl  ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((x = ((-1) + y)))), [ t19], [])
(t21, CongAST, (cl  (((f ( x)) = (f ( ((-1) + y)))))), [ t20], [])
(t22, ReflAST, (cl  (((f ( ((-1) + y))) = (f ( ((-1) + y)))))), [], [])
(t23, CongAST, (cl  ((((f ( x)) = (f ( ((-1) + y)))) = ((f ( ((-1) + y))) = (f ( ((-1) + y))))))), [ t21 t22], [])
(t24, CongAST, (cl  (((not ((f ( x)) = (f ( ((-1) + y))))) = (not ((f ( ((-1) + y))) = (f ( ((-1) + y)))))))), [ t23], [])
(t25, AllsimpAST, (cl  ((((f ( ((-1) + y))) = (f ( ((-1) + y)))) = (true)))), [], [ eq_simplify1 (f ( ((-1) + y)))])
(t26, CongAST, (cl  (((not ((f ( ((-1) + y))) = (f ( ((-1) + y))))) = (not (true))))), [ t25], [])
(t27, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t28, TransAST, (cl  (((not ((f ( ((-1) + y))) = (f ( ((-1) + y))))) = (false)))), [ t26 t27], [])
(t29, TransAST, (cl  (((not ((f ( x)) = (f ( ((-1) + y))))) = (false)))), [ t24 t28], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))) ((not (not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))) ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((f ( x)) = (f ( ((-1) + y))))))), [ t31], [])
(t33, ResoAST, (cl  ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl ), [ t33 t34], [])

Certif after process_notnot: 
(a0, AssumeAST, (cl  ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((f ( x)) = (f ( ((-1) + y))))) = (false)))) ((not (not ((f ( x)) = (f ( ((-1) + y))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))) ((not (not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))) ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [], [])
(t3, ReflAST, (cl  ((y = y))), [], [])
(t4, ArithpolynormAST, (cl  (((x + 1) = (1 + x)))), [], [ ARITH_POLY_NORM ((x + 1) = (1 + x))])
(t5, CongAST, (cl  (((y = (x + 1)) = (y = (1 + x))))), [ t3 t4], [])
(t6, ArithpolynormAST, (cl  (((y = (1 + x)) = (x = ((-1) + y))))), [], [ ARITH_POLY_NORM ((y = (1 + x)) = (x = ((-1) + y)))])
(t7, TransAST, (cl  (((y = (x + 1)) = (x = ((-1) + y))))), [ t5 t6], [])
(t8, ReflAST, (cl  (((f ( x)) = (f ( x))))), [], [])
(t9, ArithpolynormAST, (cl  (((y - 1) = (y + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((y - 1) = (y + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(t11, CongAST, (cl  (((y + ((-1) * 1)) = (y + (-1))))), [ t3 t10], [])
(t12, ArithpolynormAST, (cl  (((y + (-1)) = ((-1) + y)))), [], [ ARITH_POLY_NORM ((y + (-1)) = ((-1) + y))])
(t13, TransAST, (cl  (((y + ((-1) * 1)) = ((-1) + y)))), [ t11 t12], [])
(t14, TransAST, (cl  (((y - 1) = ((-1) + y)))), [ t9 t13], [])
(t15, CongAST, (cl  (((f ( (y - 1))) = (f ( ((-1) + y)))))), [ t14], [])
(t16, CongAST, (cl  ((((f ( x)) = (f ( (y - 1)))) = ((f ( x)) = (f ( ((-1) + y))))))), [ t8 t15], [])
(t17, CongAST, (cl  (((imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1))))) = (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t7 t16], [])
(t18, CongAST, (cl  (((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))), [ t17], [])
(t19, ResoAST, (cl  ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((x = ((-1) + y)))), [ t19], [])
(t21, CongAST, (cl  (((f ( x)) = (f ( ((-1) + y)))))), [ t20], [])
(t22, ReflAST, (cl  (((f ( ((-1) + y))) = (f ( ((-1) + y)))))), [], [])
(t23, CongAST, (cl  ((((f ( x)) = (f ( ((-1) + y)))) = ((f ( ((-1) + y))) = (f ( ((-1) + y))))))), [ t21 t22], [])
(t24, CongAST, (cl  (((not ((f ( x)) = (f ( ((-1) + y))))) = (not ((f ( ((-1) + y))) = (f ( ((-1) + y)))))))), [ t23], [])
(t25, AllsimpAST, (cl  ((((f ( ((-1) + y))) = (f ( ((-1) + y)))) = (true)))), [], [ eq_simplify1 (f ( ((-1) + y)))])
(t26, CongAST, (cl  (((not ((f ( ((-1) + y))) = (f ( ((-1) + y))))) = (not (true))))), [ t25], [])
(t27, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t28, TransAST, (cl  (((not ((f ( ((-1) + y))) = (f ( ((-1) + y))))) = (false)))), [ t26 t27], [])
(t29, TransAST, (cl  (((not ((f ( x)) = (f ( ((-1) + y))))) = (false)))), [ t24 t28], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))) ((not (not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))) ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((f ( x)) = (f ( ((-1) + y))))))), [ t31], [])
(t33, ResoAST, (cl  ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl ), [ t33 t34], [])

Certif after process_same: 
(a0, AssumeAST, (cl  ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))), [], [])
(t1, Equp2AST, (cl  ((not ((not ((f ( x)) = (f ( ((-1) + y))))) = (false)))) ((not (not ((f ( x)) = (f ( ((-1) + y))))))) ((false))), [], [])
(t2, Equp2AST, (cl  ((not ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))) ((not (not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))) ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [], [])
(t3, ReflAST, (cl  ((y = y))), [], [])
(t4, ArithpolynormAST, (cl  (((x + 1) = (1 + x)))), [], [ ARITH_POLY_NORM ((x + 1) = (1 + x))])
(t5, CongAST, (cl  (((y = (x + 1)) = (y = (1 + x))))), [ t3 t4], [])
(t6, ArithpolynormAST, (cl  (((y = (1 + x)) = (x = ((-1) + y))))), [], [ ARITH_POLY_NORM ((y = (1 + x)) = (x = ((-1) + y)))])
(t7, TransAST, (cl  (((y = (x + 1)) = (x = ((-1) + y))))), [ t5 t6], [])
(t8, ReflAST, (cl  (((f ( x)) = (f ( x))))), [], [])
(t9, ArithpolynormAST, (cl  (((y - 1) = (y + ((-1) * 1))))), [], [ ARITH_POLY_NORM ((y - 1) = (y + ((-1) * 1)))])
(t10, ProdsimpAST, (cl  ((((-1) * 1) = (-1)))), [], [])
(t11, CongAST, (cl  (((y + ((-1) * 1)) = (y + (-1))))), [ t3 t10], [])
(t12, ArithpolynormAST, (cl  (((y + (-1)) = ((-1) + y)))), [], [ ARITH_POLY_NORM ((y + (-1)) = ((-1) + y))])
(t13, TransAST, (cl  (((y + ((-1) * 1)) = ((-1) + y)))), [ t11 t12], [])
(t14, TransAST, (cl  (((y - 1) = ((-1) + y)))), [ t9 t13], [])
(t15, CongAST, (cl  (((f ( (y - 1))) = (f ( ((-1) + y)))))), [ t14], [])
(t16, CongAST, (cl  ((((f ( x)) = (f ( (y - 1)))) = ((f ( x)) = (f ( ((-1) + y))))))), [ t8 t15], [])
(t17, CongAST, (cl  (((imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1))))) = (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t7 t16], [])
(t18, CongAST, (cl  (((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))), [ t17], [])
(t19, ResoAST, (cl  ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t2 t18 a0], [])
(t20, Nimp1AST, (cl  ((x = ((-1) + y)))), [ t19], [])
(t21, CongAST, (cl  (((f ( x)) = (f ( ((-1) + y)))))), [ t20], [])
(t22, ReflAST, (cl  (((f ( ((-1) + y))) = (f ( ((-1) + y)))))), [], [])
(t23, CongAST, (cl  ((((f ( x)) = (f ( ((-1) + y)))) = ((f ( ((-1) + y))) = (f ( ((-1) + y))))))), [ t21 t22], [])
(t24, CongAST, (cl  (((not ((f ( x)) = (f ( ((-1) + y))))) = (not ((f ( ((-1) + y))) = (f ( ((-1) + y)))))))), [ t23], [])
(t25, AllsimpAST, (cl  ((((f ( ((-1) + y))) = (f ( ((-1) + y)))) = (true)))), [], [ eq_simplify1 (f ( ((-1) + y)))])
(t26, CongAST, (cl  (((not ((f ( ((-1) + y))) = (f ( ((-1) + y))))) = (not (true))))), [ t25], [])
(t27, NotsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t28, TransAST, (cl  (((not ((f ( ((-1) + y))) = (f ( ((-1) + y))))) = (false)))), [ t26 t27], [])
(t29, TransAST, (cl  (((not ((f ( x)) = (f ( ((-1) + y))))) = (false)))), [ t24 t28], [])
(t30, Equp2AST, (cl  ((not ((not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))) = (not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y))))))))) ((not (not (imp  (y = (x + 1)) ((f ( x)) = (f ( (y - 1)))))))) ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [], [])
(t31, ResoAST, (cl  ((not (imp  (x = ((-1) + y)) ((f ( x)) = (f ( ((-1) + y)))))))), [ t30 t18 a0], [])
(t32, Nimp2AST, (cl  ((not ((f ( x)) = (f ( ((-1) + y))))))), [ t31], [])
(t33, ResoAST, (cl  ((false))), [ t1 t29 t32], [])
(t34, FalsAST, (cl  ((not (false)))), [], [])
(t35, ResoAST, (cl ), [ t33 t34], [])

nwt: (- op_2 (aka Smt_var_y) 1)File "./test8cvc5.v", line 23, characters 5-255:
Error:
Verit.import_trace: preprocessing certificate 

Error: Smtcoq_plugin.SmtForm.Make(Atom).NotWellTyped(_)
Position: Line 37 Position 1

