(assume a0 (and (or op_0 op_2 op_1) (or (not op_0) (not op_2) (not op_1)) (or (not op_0) op_2) (or (not op_2) op_1) (or (not op_1) op_0)))
(step t1 (cl (or op_0 op_2 op_1)) :rule and :premises (a0))
(step t2 (cl op_0 op_2 op_1) :rule or :premises (t1))
(step t3 (cl op_1 op_0 op_2) :rule reordering :premises (t2))
(step t4 (cl (or (not op_2) op_1)) :rule and :premises (a0))
(step t5 (cl (not op_2) op_1) :rule or :premises (t4))
(step t6 (cl op_1 (not op_2)) :rule reordering :premises (t5))
(step t7 (cl (or (not op_1) op_0)) :rule and :premises (a0))
(step t8 (cl (not op_1) op_0) :rule or :premises (t7))
(step t9 (cl op_0 (not op_1)) :rule reordering :premises (t8))
(step t10 (cl (or (not op_2) op_1)) :rule and :premises (a0))
(step t11 (cl (not op_2) op_1) :rule or :premises (t10))
(step t12 (cl op_1 (not op_2)) :rule reordering :premises (t11))
(step t13 (cl (or (not op_0) (not op_2) (not op_1))) :rule and :premises (a0))
(step t14 (cl (not op_0) (not op_2) (not op_1)) :rule or :premises (t13))
(step t15 (cl (not op_2) (not op_0) (not op_2)) :rule resolution :premises (t12 t14))
(step t16 (cl (not op_2) (not op_0)) :rule contraction :premises (t15))
(step t17 (cl (or (not op_0) op_2)) :rule and :premises (a0))
(step t18 (cl (not op_0) op_2) :rule or :premises (t17))
(step t19 (cl op_2 (not op_0)) :rule reordering :premises (t18))
(step t20 (cl (not op_0) (not op_0)) :rule resolution :premises (t16 t19))
(step t21 (cl (not op_0)) :rule contraction :premises (t20))
(step t22 (cl (not op_1)) :rule resolution :premises (t9 t21))
(step t23 (cl (not op_2)) :rule resolution :premises (t6 t22))
(step t24 (cl (or (not op_1) op_0)) :rule and :premises (a0))
(step t25 (cl (not op_1) op_0) :rule or :premises (t24))
(step t26 (cl op_0 (not op_1)) :rule reordering :premises (t25))
(step t27 (cl (or (not op_2) op_1)) :rule and :premises (a0))
(step t28 (cl (not op_2) op_1) :rule or :premises (t27))
(step t29 (cl op_1 (not op_2)) :rule reordering :premises (t28))
(step t30 (cl (or (not op_0) (not op_2) (not op_1))) :rule and :premises (a0))
(step t31 (cl (not op_0) (not op_2) (not op_1)) :rule or :premises (t30))
(step t32 (cl (not op_2) (not op_0) (not op_2)) :rule resolution :premises (t29 t31))
(step t33 (cl (not op_2) (not op_0)) :rule contraction :premises (t32))
(step t34 (cl (or (not op_0) op_2)) :rule and :premises (a0))
(step t35 (cl (not op_0) op_2) :rule or :premises (t34))
(step t36 (cl op_2 (not op_0)) :rule reordering :premises (t35))
(step t37 (cl (not op_0) (not op_0)) :rule resolution :premises (t33 t36))
(step t38 (cl (not op_0)) :rule contraction :premises (t37))
(step t39 (cl (not op_1)) :rule resolution :premises (t26 t38))
(step t40 (cl (or (not op_2) op_1)) :rule and :premises (a0))
(step t41 (cl (not op_2) op_1) :rule or :premises (t40))
(step t42 (cl op_1 (not op_2)) :rule reordering :premises (t41))
(step t43 (cl (or (not op_0) (not op_2) (not op_1))) :rule and :premises (a0))
(step t44 (cl (not op_0) (not op_2) (not op_1)) :rule or :premises (t43))
(step t45 (cl (not op_2) (not op_0) (not op_2)) :rule resolution :premises (t42 t44))
(step t46 (cl (not op_2) (not op_0)) :rule contraction :premises (t45))
(step t47 (cl (or (not op_0) op_2)) :rule and :premises (a0))
(step t48 (cl (not op_0) op_2) :rule or :premises (t47))
(step t49 (cl op_2 (not op_0)) :rule reordering :premises (t48))
(step t50 (cl (not op_0) (not op_0)) :rule resolution :premises (t46 t49))
(step t51 (cl (not op_0)) :rule contraction :premises (t50))
(step t52 (cl) :rule resolution :premises (t3 t23 t39 t51))
