Encoding ac_simp
l <-> r
RTL:
f(l, r)
case and xs, and ys:
  ys' := for each y in ys, 
           resolve `and ys` and `~(and ys), y` by `andp` to get `y`
  for each x in xs,
    if x in {and} then
    -- an and on LHS is flattened on RHS
      `x, ~x1', ..., ~xn'` by `andn` and recurse 

    if x in {or} then
    -- an or on LHS is either an or on RHS, or it reduces to a literal by duplicate removal
      if x reduces to literal, then 
    if x not in {and, or} then 
    -- a literal on LHS is a literal on RHS
        [i1, Asmp, [r], []]
        [i2, Andp, [~r, x] ,[]]
        [i3, Reso, [x], [i1, i2]]

    find x in ys
      if x is in top-level(ys)
        
      else recurse into each 
-------------------------------------------------------ac_simp
a ^ (b ^ c) ^ (x v (y v z)) <-> a ^ b ^ c ^ (x v y v z)

-----------------------asmp  -----------------------------andp
a ^ b ^ c ^ (x v y v c)      ~(a ^ b ^ c ^ (x v y v z)), a
----------------------------------------------------------res
                             a --(1)

-----------------------asmp  -----------------------------andp
a ^ b ^ c ^ (x v y v c)      ~(a ^ b ^ c ^ (x v y v z)), b
----------------------------------------------------------res
                             b --(2)

-----------------------asmp  -----------------------------andp
a ^ b ^ c ^ (x v y v c)      ~(a ^ b ^ c ^ (x v y v z)), c
----------------------------------------------------------res
                             c --(3)

-------------andn
b ^ c, ~b, ~c      (2)  (3)
---------------------------res
           b ^ c --(4)

-----------------------asmp  -------------------------------------andp
a ^ b ^ c ^ (x v y v c)      ~(a ^ b ^ c ^ (x v y v z)), x v y v z
------------------------------------------------------------------res  ---------------------orp
                             x v y v z                                 ~(x v y v z), x, y, z 
                             ---------------------------------------------------------------res
                                                         x, y, z --(5)

---------------orn  -------(5)  ---------orn  ---------orn  --------------------orn
x v (y v z), ~x     x, y, z     y v z, ~y     y v z, ~z     x v (y v z), ~(y v z)
---------------------------------------------------------------------------------res
                                    x v (y v z) --(6)

---------------------------------------------------------andn  --(1)  -----(4)  ----------(6)
a ^ (b ^ c) ^ (x v (y v z)), ~a, ~(b ^ c), ~(x v (y v z))      a      b ^ c     x v (y v z)
-------------------------------------------------------------------------------------------res
                             a ^ (b ^ c) ^ (x v (y v z))

LTR:
---------------------------asmp  ---------------------------------andp
a ^ (b ^ c) ^ (x v (y v z))      ~(a ^ (b ^ c) ^ (x v (y v z))), a
------------------------------------------------------------------res
                                 a --(1)

---------------------------asmp  -------------------------------------andp
a ^ (b ^ c) ^ (x v (y v z))      ~(a ^ (b ^ c) ^ (x v (y v z))), b ^ c
------------------------------------------------------------------res
                                 b ^ c --(2)

-----------andp  -----(2)
~(b ^ c), b      b ^ c
----------------------res
           b --(3)

-----------andp  -----(2)
~(b ^ c), c      b ^ c
----------------------res
           c --(4)

---------------------------asmp  -------------------------------------------andp
a ^ (b ^ c) ^ (x v (y v z))      ~(a ^ (b ^ c) ^ (x v (y v z))), x v (y v z)
----------------------------------------------------------------------------res
                                 x v (y v z) --(5)

------------------------orp  -----------(5)
~(x v (y v z)), x, y v z     x v (y v z)
----------------------------------------res  --------------orp
                x, y v z                     ~(y v z), y, z
                -------------------------------------------res  -------------orn  -------------orn  -------------orn
                                  x, y, z                       x v y v z, ~x     x v y v z, ~y     x v y v z, ~z
                                  -------------------------------------------------------------------------------res
                                                                      x v y v z --(6)

-------------------------------------------------andn  --(1)  --(3)  --(4)  ---------(6)
a ^ b ^ c ^ (x v y v z), ~a, ~b, ~c, ~(x v y v z)      a      b      c      x v y v z
-------------------------------------------------------------------------------------res
                             a ^ b ^ c ^ (x v y v z)