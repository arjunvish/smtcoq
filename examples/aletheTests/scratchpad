Convert a proof of the form:
 -----  -----
 x = a  y = b
--------------cong
 x v y = a v b
to the following derivation:
-----  --------------eqp2
y = b  ~(y = b), ~y, b
----------------------res  --------------xorp1  ------------xorn1  ---------------------------eqn2
        ~y, b              ~(x + y), x, y       a + b, a, ~b       x + y = a + b, x + y, a + b
        --------------------------------------------------------------------------------------res
                                             a + b, x, a --(1)
-----  --------------eqp1                                                                                                 -----  --------------eqp1
y = b  ~(y = b), y, ~b                                                                                                    x = a  ~(x = a), x, ~a
----------------------res  ------------xorn1  --------------xorp1  ---------------------------------eqn1  -----------(1)  ----------------------res 
        y, ~b              x + y, x, ~y       ~(a + b), a, b       x + y = a + b, ~(x + y), ~(a + b)      a + b, x, a             x, ~a
        -------------------------------------------------------------------------------------------------------------------------------res
                                                                      x --(2)
-----  --------------eqp2
x = a  ~(x = a), ~x, a
----------------------res  --(2)
        ~x, a              x
        --------------------res
                  a --(3)
                                                                             -----  --------------eqp1
                                                                             y = b  ~(y = b), y, ~b
---------------------------------eqn1  ------------xorn2  ------------xorn2  ----------------------res  --(3)  --(2)
x + y = a + b, ~(x + y), ~(a + b)      a + b, ~a, b       x + y, ~x, y               y, ~b              a      x
----------------------------------------------------------------------------------------------------------------res
                                                      y --(4)
-----  --------------eqp2
y = b  ~(y = b), ~y, b
----------------------res  --(4)
        ~y, b              y
        --------------------res
                  b --(5)
----------------xorp2  --(4)  --(2)
~(x + y), ~x, ~y       y      x
-------------------------------res
           ~(x + y) --(6)
----------------xorp2  --(5)  --(3)
~(a + b), ~a, ~b       b      a
-------------------------------res
           ~(a + b) --(7)

---------------------------eqn2  --------(6)  --------(7)
x + y = a + b, x + y, a + b      ~(x + y)     ~(a + b)
------------------------------------------------------res
                   x + y = a + b
Convert a proof of the form:
 -----  -----
 x = a  y = b
--------------cong
 x v y = a v b

to one of the form:
(1)       (2)
-------------res
x v y = a v b
where (1) and (2) are derived as:
                    -----   ---------------eqp2  -----   -----------------eqp2                                                                          
                    x = a   ~(x = a), ~x, a      y = b    ~(y = b), ~y, b                                                                               
---------------orp  ----------------------res   -------------------------res  ------------orn    ------------orn                                        
~(x v y), x, y             ~x, a                         ~y, b                (a v b), ~a         (a v b), ~b                                           
--------------------------------------------------------------------------------------------------------------res  ---------------------------------eqn2
                                            ~(x v y), (a v b)                                                       x v y = a v b, (x v y), (a v b)     
                      -----------------------------------------------------------------------------------------------------------------------------res  
                                                                x v y = a v b, (a v b) --(1)

                      -----  ---------------eqp1  -----  -----------------eqp1 
                      x = a  ~(x = a), ~a, x      y = b  ~(y = b), ~b, y       
---------------orp    -----------------------res  -----------------------res  -----------orn  -----------orn
~(a v b), a, b               ~a, x                       ~b, y                (x v y), ~x     (x v y), ~y
---------------------------------------------------------------------------------------------------------res  ---------------------------------eqn1
                                                  ~(a v b), (x v y)                                            x v y = a v b, ~(x v y), ~(a v b)
                                                  ---------------------------------------------------------------------------------------------res
                                                                                      x v y = a v b, ~(a v b) --(2)

Convert a proof of the form:
 -----  -----
 x = a  y = b
--------------cong
 x + y = a + b

-----   ---------------eqp2
x = a   ~(x = a), ~x, a    
-----------------------res 
          x, a             

-----   -----------------eqp2
y = b    ~(y = b), ~y, b      
-------------------------res
          ~y, b             

-----  ---------------eqp1
x = a  ~(x = a), ~a, x    
-----------------------res
       ~a, x              

-----  -----------------eqp1
y = b  ~(y = b), ~b, y      
-----------------------res  
       ~b, y                

---------------xorp1
~(x + y), x, y      

----------------xorp2
~(x + y), ~x, ~y

------------xorn1
x + y, x, ~y

------------xorn2
x + y, ~x, y

--------------xorp1
~(a + b), a, b

----------------xorp2
~(a + b), ~a, ~b

------------xorn1
a + b, a, ~b

------------xorn2
a + b, ~a, b

---------------------------------eqn1
x + y = a + b, ~(x + y), ~(a + b)

---------------------------eqn2
x + y = a + b, x + y, a + b


Certif after process_proj: 
(h1, AssumeAST, (cl  ((a = x))), [], [])
(h2, AssumeAST, (cl  ((b = y))), [], [])
(h3, AssumeAST, (cl  ((not ((xor  a b) = (xor  x y))))), [], [])
(x1, Equp2AST, (cl  ((not (b = y))) ((not b)) (y)), [], [])
(x2, ResoAST, (cl  ((not b)) (y)), [ x1 h2], [])
(x3, Xorp1AST, (cl  ((not (xor  a b))) (a) (b)), [], [])
(x4, Xorn1AST, (cl  ((xor  x y)) (x) ((not y))), [], [])
(x5, Equn2AST, (cl  (((xor  a b) = (xor  x y))) ((xor  a b)) ((xor  x y))), [], [])
(x6, ResoAST, (cl  ((xor  x y)) (a) (x)), [ x2 x3 x4 x5], [])
(x7, Equp1AST, (cl  ((not (b = y))) (b) ((not y))), [], [])
(x8, ResoAST, (cl  (b) ((not y))), [ x7 h2], [])
(x9, Equp1AST, (cl  ((not (a = x))) (a) ((not x))), [], [])
(x10, ResoAST, (cl  (a) ((not x))), [ x9 h1], [])
(x11, Xorn1AST, (cl  ((xor  a b)) (a) ((not b))), [], [])
(x12, Xorp1AST, (cl  ((not (xor  x y))) (x) (y)), [], [])
(x13, Equn1AST, (cl  (((xor  a b) = (xor  x y))) ((not (xor  a b))) ((not (xor  x y)))), [], [])
(x14, ResoAST, (cl  (a)), [ x8 x11 x12 x13 x6 x10], [])
(x15, Equp2AST, (cl  ((not (a = x))) ((not a)) (x)), [], [])
(x16, ResoAST, (cl  ((not a)) (x)), [ x15 h1], [])
(x17, ResoAST, (cl  (x)), [ x16 x14], [])
(x18, Xorn2AST, (cl  ((xor  x y)) ((not x)) (y)), [], [])
(x19, Xorn2AST, (cl  ((xor  a b)) ((not a)) (b)), [], [])
(x20, ResoAST, (cl  (b)), [ x13 x18 x19 x8 x17 x14], [])
(x21, ResoAST, (cl  (y)), [ x2 x20], [])
(x22, Xorp2AST, (cl  ((not (xor  a b))) ((not a)) ((not b))), [], [])
(x23, ResoAST, (cl  ((not (xor  a b)))), [ x22 x20 x14], [])
(x24, Xorp2AST, (cl  ((not (xor  x y))) ((not x)) ((not y))), [], [])
(x25, ResoAST, (cl  ((not (xor  x y)))), [ x24 x23 x17], [])
(t4, ResoAST, (cl  (((xor  a b) = (xor  x y)))), [ x5 x23 x25], [])
(t5, ResoAST, (cl ), [ h3 t4], [])
