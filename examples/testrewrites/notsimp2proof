(assume h1 (not true))
(assume h2 (not false))
(step t3 (cl (= (not true) false)) :rule not_simplify)
(step t4 (cl (not (= (not true) false)) (not (not true)) false) :rule equiv_pos2)
(step t5 (cl) :rule resolution :premises (t4 t3 h2 h1))

(h1, AssumeAST, (cl  ((not (true)))), [], [])
(h2, AssumeAST, (cl  ((not (false)))), [], [])


|----asmp   ---------impn1
|~T         T -> F, T
|--------------------res
|       T -> F
|       ------imp   ---true
|       ~T, F        T
|       --------------res
|              F
----------------------discharge     ---------------eqn1
        ~~T, F                      ~T = F, ~~T, ~F
        -------------------------------------------res
                         ~T = F, ~~T  --(1)
| ---asmp
|  F
|-----weaken  ---false
|F, ~T         ~F
|----------------res
|       ~T
---------------discharge    -------------eqn2
    ~F, ~T                  ~T = F, ~T, F
    -------------------------------------res
                  ~T = F, ~T                    (1)
                  ---------------------------------res  -------------------eqp2 ----asmp ----asmp
                                ~T = F                   ~(~T = F), ~~T, F       ~T       ~F
                                ------------------------------------------------------------res
                                                              []


---------------eqn1 ---------------andn -------------eqn2  ------------------andn
~T = F, ~~T, ~F     ~T ^ ~F, ~~T, F      ~T = F, ~T, F      F ^ ~~T, ~F, ~T
-----------------------------------res  -----------------------------------res
       ~T ^ ~F, ~T = F, ~~T                     F ^ ~~T, ~T = F, ~T
       ------------------------------------------------------------res  -------------------eqp2 ----asmp ----asmp
                         ~T ^ ~F, F ^ ~~T, ~T = F                         ~(~T = F), ~~T, F       ~T       ~F
-------------andp        ------------------------------------------------------------------------------------res
~(F ^ ~~T), F                                           ~T ^ ~F, F ^ ~~T --(1)
------------------------------------------------------------------------res
                                ~T ^ ~F, F
                                -----------weaken    ---false   ---------------andp
                                   F, ~T              ~F        ~(F ^ ~~T), ~~T         (1)
                                   ---------------------res     ---------------------------res
                                              ~T                           ~T ^ ~F, ~~T
                                              ------------------------------------------res
                                                                ~T ^ ~F --(2)
                                                                -------and  ---------impn1
                                                                   ~T       T -> F, T
                                                                  --------------------res
                                                                         T -> F
                                                                         ------imp   ---true
                                                               (2)       ~T, F        T
                                                               ---       --------------res
                                                                ~F              F
                                                                -----------------
                                                                        []            