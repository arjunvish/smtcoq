1 subgoal
  
  A : Type
  x : A
  l : list A
  ============================
  [] <> x :: l
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

(not (cons x l) = [])
(not (cons x (cons x l)) = (cons x []))
(not if (cons x l) = l then l else [] = [])
1 subgoal
  
  A : Type
  l : list A
  ============================
  {x : A & {tl0 : list A | l = x :: tl0}} + {l = []}
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  l : list A
  a : A
  r : list A
  ============================
  hd_error l = Some a /\ tl l = r <-> l = a :: r
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  l : list A
  a : A
  ============================
  hd_error l = Some a -> l <> []
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

(not [] = l)
(not ((hd_error (A:=A)) []) = ((hd_error (A:=A)) l))
(not ((hd_error (A:=A)) []) = (Some a))
1 subgoal
  
  A : Type
  l : list A
  ============================
  length l = 0 <-> l = []
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

((length (A:=A)) []) = 0 && [] = l
(not if ((length (A:=A)) []) = 0 then ((length (A:=A)) l) else 0 = 0)
(not ((length (A:=A)) l) = 0) && ((length (A:=A)) []) = 0
1 subgoal
  
  A : Type
  ============================
  hd_error [] = None
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  l : list A
  x : A
  ============================
  hd_error (x :: l) = Some x
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  x, y : list A
  a : A
  ============================
  [] <> x ++ a :: y
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  l : list A
  ============================
  [] ++ l = l
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

((app (A:=A)) [] l) = l
((app (A:=A)) [] []) = [] && [] = l
((app (A:=A)) [] if ((app (A:=A)) [] []) = [] then [] else l) = l
1 subgoal
  
  A : Type
  l : list A
  ============================
  l ++ [] = l
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

((app (A:=A)) l []) = l
((app (A:=A)) l l) = l && l = []
((app (A:=A)) l if ((app (A:=A)) l []) = l then l else []) = l
1 subgoal
  
  A : Type
  l : list A
  ============================
  l = l ++ []
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

((app (A:=A)) l []) = l
((app (A:=A)) l l) = l && l = []
((app (A:=A)) l if ((app (A:=A)) l []) = l then l else []) = l
1 subgoal
  
  A : Type
  l, m, n : list A
  ============================
  l ++ m ++ n = (l ++ m) ++ n
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  l, m, n : list A
  ============================
  (l ++ m) ++ n = l ++ m ++ n
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  x, y : list A
  a : A
  ============================
  a :: x ++ y = (a :: x) ++ y
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  l, l' : list A
  ============================
  l ++ l' = [] -> l = [] /\ l' = []
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

l' = [] && l = l'
((app (A:=A)) l l') = l && l' = []
((app (A:=A)) l l) = l && l = l'
1 subgoal
  
  A : Type
  x, y : list A
  a : A
  ============================
  x ++ y = [a] -> x = [] /\ y = [a] \/ x = [a] /\ y = []
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

((app (A:=A)) x y) = x && y = []
(cons a y) = x && y = []
((app (A:=A)) x y) = y && x = []
1 subgoal
  
  A : Type
  l1, l2 : list A
  a, b : A
  ============================
  l1 ++ a :: l2 = [b] -> a = b /\ l1 = [] /\ l2 = []
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (x y : list A) (a b : A), x ++ [a] = y ++ [b] <-> x = y /\ a = b
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (x y : list A) (a b : A), x ++ [a] = y ++ [b] -> x = y /\ a = b
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall l l' : list A, length (l ++ l') = length l + length l'
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (l : list A) (a : A), length (l ++ [a]) = S (length l)
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall l l1 l2 : list A, l ++ l1 = l ++ l2 <-> l1 = l2
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

l1 = l2
l1 = l2 && l = l1
(not ((app (A:=A)) l l1) = ((app (A:=A)) l l2))
1 subgoal
  
  A : Type
  ============================
  forall l l1 l2 : list A, l ++ l1 = l ++ l2 -> l1 = l2
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

l1 = l2
if l1 = l2 then l else l2 = l1
if l1 = l2 then ((app (A:=A)) l1 l1) else l2 = l1
1 subgoal
  
  A : Type
  ============================
  forall l l1 l2 : list A, l1 ++ l = l2 ++ l -> l1 = l2
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

l1 = l2
if l1 = l then l2 else l = l1
if l1 = l2 then ((app (A:=A)) l1 l1) else l2 = l1
1 subgoal
  
  A : Type
  ============================
  forall l l1 l2 : list A, l1 ++ l = l2 ++ l <-> l1 = l2
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

l1 = l2
l1 = l2 && l = l1
(not ((app (A:=A)) l1 l) = ((app (A:=A)) l2 l))
1 subgoal
  
  A : Type
  ============================
  forall (a : A) (l : list A), In a (a :: l)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (a b : A) (l : list A), In b l -> In b (a :: l)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  x, a : A
  l : list A
  ============================
  ~ In x (a :: l) <-> x <> a /\ ~ In x l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall a : A, ~ In a []
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (l m : list A) (a : A), In a (l ++ m) -> In a l \/ In a m
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (l m : list A) (a : A), In a l \/ In a m -> In a (l ++ m)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (l l' : list A) (a : A), In a (l ++ l') <-> In a l \/ In a l'
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (x : A) (l : list A),
  In x l -> exists l1 l2 : list A, l = l1 ++ x :: l2
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (x : A) (l1 l2 : list A), In x (l1 ++ x :: l2)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (x y : A) (l1 l2 : list A),
  In x (l1 ++ y :: l2) -> x = y \/ In x (l1 ++ l2)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (a b : A) (l : list A), In b (a :: l) -> a = b \/ In b l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  (forall x y : A, {x = y} + {x <> y}) ->
  forall (a : A) (l : list A), {In a l} + {~ In a l}
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (n : nat) (l : list A) (d : A), {In (nth n l d) l} + {nth n l d = d}
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (n : nat) (l : list A) (d a : A),
  In (nth n l d) l -> In (nth (S n) (a :: l) d) (a :: l)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (n : nat) (l : list A) (d : A), nth_default d l n = nth n l d
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

(nth_default d l n) = (nth n l d)
(nth_default d l n) = d && (nth n l d) = d
if (nth_default d l n) = d then (nth n l d) else d = (nth_default d l n)
1 subgoal
  
  A : Type
  ============================
  forall (n : nat) (l : list A) (d : A), n < length l -> In (nth n l d) l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  l : list A
  x, d : A
  ============================
  In x l -> exists n : nat, n < length l /\ nth n l d = x
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (l : list A) (n : nat) (d : A), length l <= n -> nth n l d = d
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (l : list A) (n : nat) (d d' : A),
  n < length l -> nth n l d = nth n l d'
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

d = d'
(nth n l d) = (nth n l d')
if d = d' then (nth n l d) else d' = d
1 subgoal
  
  A : Type
  ============================
  forall (l l' : list A) (d : A) (n : nat),
  n < length l -> nth n (l ++ l') d = nth n l d
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

((app (A:=A)) l l') = l
if l' = l then ((app (A:=A)) l' l') else l = l'
(nth n ((app (A:=A)) l l') d) = (nth n l d)
1 subgoal
  
  A : Type
  ============================
  forall (l l' : list A) (d : A) (n : nat),
  n >= length l -> nth n (l ++ l') d = nth (n - length l) l' d
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (l l' : list A) (d : A) (n : nat),
  nth (length l + n) (l ++ l') d = nth n l' d
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (l l' : list A) (a d : A), nth (length l) (l ++ a :: l') d = a
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  n : nat
  l : list A
  d : A
  ============================
  n < length l ->
  exists l1 l2 : list A, l = l1 ++ nth n l d :: l2 /\ length l1 = n
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (l l' : list A) (d d' : A),
  length l = length l' ->
  (forall n : nat, n < length l -> nth n l d = nth n l' d') -> l = l'
The command has indeed failed with message:
Solver error: (error Parse Error: <stdin>:14.15: Quantifier used in non-quantified logic. ).
1 subgoal
  
  A : Type
  l : list A
  n : nat
  x : A
  ============================
  nth_error l n = Some x -> In x l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  l : list A
  x : A
  ============================
  In x l -> exists n : nat, nth_error l n = Some x
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  l : list A
  n : nat
  ============================
  nth_error l n = None <-> length l <= n
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  l : list A
  n : nat
  ============================
  nth_error l n <> None <-> n < length l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  l : list A
  n : nat
  a : A
  ============================
  nth_error l n = Some a ->
  exists l1 l2 : list A, l = l1 ++ a :: l2 /\ length l1 = n
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  l, l' : list A
  n : nat
  ============================
  n < length l -> nth_error (l ++ l') n = nth_error l n
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

((app (A:=A)) l l') = l
if l' = l then ((app (A:=A)) l' l') else l = l'
(nth_error ((app (A:=A)) l l') n) = (nth_error l n)
1 subgoal
  
  A : Type
  l, l' : list A
  n : nat
  ============================
  length l <= n -> nth_error (l ++ l') n = nth_error l' (n - length l)
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (l : list A) (n : nat) (x d : A),
  nth_error l n = Some x -> nth n l d = x
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

(nth n l d) = x
if d = x then (nth n l d) else x = d
(nth n l if (nth n l x) = x then d else x) = x
1 subgoal
  
  A : Type
  ============================
  forall (l : list A) (n : nat) (d : A),
  n < length l -> nth_error l n = Some (nth n l d)
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (l : list A) (a d : A), last (l ++ [a]) d = a
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (l : list A) (d : A), l <> [] -> l = removelast l ++ [last l d]
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall l : list A, l <> [] -> {l' : list A & {a : A | l = l' ++ [a]}}
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall l l' : list A, l' <> [] -> removelast (l ++ l') = l ++ removelast l'
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (l : list A) (a : A), removelast (l ++ [a]) = l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  ============================
  forall (x : A) (l : list A), remove x (x :: l) = remove x l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  ============================
  forall (x : A) (l1 l2 : list A),
  remove x (l1 ++ l2) = remove x l1 ++ remove x l2
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  ============================
  forall (l : list A) (x : A), ~ In x (remove x l)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  ============================
  forall (l : list A) (x : A), ~ In x l -> remove x l = l
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

(remove x l) = l
(remove x (remove x l)) = l && (remove x l) = l
(remove x if (remove x l) = l then (remove x (remove x l)) else l) = l
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  ============================
  forall (l : list A) (x y : A), In x (remove y l) -> In x l /\ x <> y
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  ============================
  forall (l : list A) (x y : A), x <> y -> In x l -> In x (remove y l)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  ============================
  forall (l : list A) (x y : A),
  remove x (remove y l) = remove y (remove x l)
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

y = x
(remove y l) = l && y = x
(remove y (remove x l)) = (remove x (remove y l))
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  ============================
  forall (l : list A) (x : A), remove x (remove x l) = remove x l
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

(remove x l) = l
(remove x (remove x l)) = (remove x l)
(remove x (remove x l)) = l && (remove x l) = l
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  ============================
  forall (l : list A) (x : A), length (remove x l) <= length l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  ============================
  forall (l : list A) (x : A), In x l -> length (remove x l) < length l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  l : list A
  x : A
  ============================
  In x l <-> count_occ l x > 0
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  l : list A
  x : A
  ============================
  ~ In x l <-> count_occ l x = 0
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  x : A
  ============================
  count_occ [] x = 0
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  l : list A
  ============================
  (forall x : A, count_occ l x = 0) <-> l = []
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  l : list A
  x, y : A
  ============================
  x = y -> count_occ (x :: l) y = S (count_occ l y)
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

(S (count_occ l x)) = (count_occ (cons x l) x)
(S (count_occ l x)) = (count_occ (cons y l) x)
(S (count_occ l y)) = (count_occ (cons x l) x)
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  l : list A
  x, y : A
  ============================
  x <> y -> count_occ (x :: l) y = count_occ l y
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

(cons x l) = l
if (cons x l) = l then x else y = x
(count_occ (cons x l) y) = (count_occ l y)
1 subgoal
  
  A : Type
  ============================
  forall x y : list A, rev (x ++ y) = rev y ++ rev x
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (l : list A) (a : A), rev (l ++ [a]) = a :: rev l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall l : list A, rev (rev l) = l
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

(rev l) = l
(rev (rev l)) = l
(rev (rev l)) = l && (rev l) = l
1 subgoal
  
  A : Type
  ============================
  forall l l1 l2 : list A, rev l = l1 ++ l2 -> l = rev l2 ++ rev l1
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (l : list A) (x : A), In x l <-> In x (rev l)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall l : list A, length (rev l) = length l
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

(rev l) = l
((length (A:=A)) (rev l)) = ((length (A:=A)) l)
(rev (rev l)) = l && (rev l) = l
1 subgoal
  
  A : Type
  ============================
  forall (l : list A) (d : A) (n : nat),
  n < length l -> nth n (rev l) d = nth (length l - S n) l d
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall l l' : list A, rev_append l l' = rev l ++ l'
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall l : list A, rev l = rev_append l []
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

(rev l) = (rev_append l [])
(rev l) = l && (rev_append l []) = l
(rev l) = [] && (rev_append l []) = []
1 subgoal
  
  A : Type
  ============================
  forall P : list A -> Prop,
  P [] ->
  (forall (a : A) (l : list A), P (rev l) -> P (rev (a :: l))) ->
  forall l : list A, P (rev l)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall P : list A -> Prop,
  P [] ->
  (forall (x : A) (l : list A), P l -> P (l ++ [x])) ->
  forall l : list A, P l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  concat [] = []
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (x : list A) (l : list (list A)), concat (x :: l) = x ++ concat l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall l1 l2 : list (list A), concat (l1 ++ l2) = concat l1 ++ concat l2
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (l : list (list A)) (y : A),
  In y (concat l) <-> (exists x : list A, In x l /\ In y x)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  ============================
  forall l l' : list A, {l = l'} + {l <> l'}
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  x : A
  l : list A
  ============================
  map (x :: l) = f x :: map l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall (l : list A) (x : A), In x l -> In (f x) (map l)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall (l : list A) (y : B),
  In y (map l) <-> (exists x : A, f x = y /\ In x l)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall l : list A, length (map l) = length l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall (l : list A) (d : A) (n : nat), nth n (map l) (f d) = f (nth n l d)
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall (n : nat) (l : list A) (d : A),
  nth_error l n = Some d -> nth_error (map l) n = Some (f d)
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall l l' : list A, map (l ++ l') = map l ++ map l'
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall (l : list A) (a : A), map (l ++ [a]) = map l ++ [f a]
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall l : list A, map (rev l) = rev (map l)
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall l : list A, map l = [] -> l = []
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

[] = l
if (map l) = [] then l else [] = []
(map []) = [] && [] = l
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall (l : list A) (l' : list B) (b : B),
  map l = b :: l' ->
  exists (a : A) (tl0 : list A), l = a :: tl0 /\ f a = b /\ map tl0 = l'
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall (l : list A) (l1 l2 : list B),
  map l = l1 ++ l2 ->
  exists l1' l2' : list A, l = l1' ++ l2' /\ map l1' = l1 /\ map l2' = l2
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  decA : forall x1 x2 : A, {x1 = x2} + {x1 <> x2}
  decB : forall y1 y2 : B, {y1 = y2} + {y1 <> y2}
  Hfinjective : forall x1 x2 : A, f x1 = f x2 -> x1 = x2
  x : A
  l : list A
  ============================
  count_occ decA l x = count_occ decB (map l) (f x)
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  decA : forall x1 x2 : A, {x1 = x2} + {x1 <> x2}
  decB : forall y1 y2 : B, {y1 = y2} + {y1 <> y2}
  Hfinjective : forall x1 x2 : A, f x1 = f x2 -> x1 = x2
  ============================
  forall (f0 : A -> list B) (l1 l2 : list A),
  flat_map f0 (l1 ++ l2) = flat_map f0 l1 ++ flat_map f0 l2
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  decA : forall x1 x2 : A, {x1 = x2} + {x1 <> x2}
  decB : forall y1 y2 : B, {y1 = y2} + {y1 <> y2}
  Hfinjective : forall x1 x2 : A, f x1 = f x2 -> x1 = x2
  ============================
  forall (f0 : A -> list B) (l : list A) (y : B),
  In y (flat_map f0 l) <-> (exists x : A, In x l /\ In y (f0 x))
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  B : Type
  f : A -> B -> A
  ============================
  forall (l l' : list B) (i : A),
  fold_left (l ++ l') i = fold_left l' (fold_left l i)
1 subgoal
  
  ============================
  forall (A B : Type) (f : A -> list B) (l : list A),
  flat_map f l = concat (map f l)
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  ============================
  forall (A B : Type) (f : A -> B) (l : list (list A)),
  map f (concat l) = concat (map (map f) l)
The command has indeed failed with message:
Solver error: (error Parse Error: <stdin>:15.63: Cannot partially apply functions unless --uf-ho is set. ).
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  ============================
  forall (l : list (list A)) (x : A),
  remove eq_dec x (concat l) = flat_map (remove eq_dec x) l
The command has indeed failed with message:
Solver error: (error Parse Error: <stdin>:14.67: Cannot partially apply functions unless --uf-ho is set. ).
1 subgoal
  
  ============================
  forall (A : Type) (l : list A), map (fun x : A => x) l = l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  f : A -> bool
  ============================
  forall l : list A,
  existsb l = true <-> (exists x : A, In x l /\ f x = true)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  f : A -> bool
  ============================
  forall (l : list A) (n : nat) (d : A),
  n < length l -> existsb l = false -> f (nth n l d) = false
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

((map (A:=A) (B:=A)) (fun x : A => x) l) = l
((map (A:=A) (B:=A)) (fun x : A => x) ((map (A:=A) (B:=A)) (fun x : A => x) l)) = l && ((map (A:=A) (B:=A)) (fun x : A => x) l) = l
((map (A:=A) (B:=A)) (fun x : A => x) if ((map (A:=A) (B:=A)) (fun x : A => x) l) = l then ((map (A:=A) (B:=A)) (fun x : A => x) ((map (A:=A) (B:=A)) (fun x : A => x) l)) else l) = l
1 subgoal
  
  ============================
  forall (A B C : Type) (f : A -> B) (g : B -> C) (l : list A),
  map g (map f l) = map (fun x : A => g (f x)) l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  f : A -> bool
  ============================
  forall l1 l2 : list A, existsb (l1 ++ l2) = existsb l1 || existsb l2
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

if l1 = l2 then ((app (A:=A)) l1 l1) else l2 = l1
if ((app (A:=A)) l1 l1) = l2 then l1 else l2 = ((app (A:=A)) l1 l1)
if ((app (A:=A)) l1 l2) = l2 then l1 else l2 = ((app (A:=A)) l1 l2)
1 subgoal
  
  A : Type
  f : A -> bool
  ============================
  forall l : list A,
  forallb l = true <-> (forall x : A, In x l -> f x = true)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  f : A -> bool
  ============================
  forall l1 l2 : list A, forallb (l1 ++ l2) = forallb l1 && forallb l2
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

if l1 = l2 then ((app (A:=A)) l1 l1) else l2 = l1
if ((app (A:=A)) l1 l1) = l2 then l1 else l2 = ((app (A:=A)) l1 l1)
if ((app (A:=A)) l1 l2) = l2 then l1 else l2 = ((app (A:=A)) l1 l2)
1 subgoal
  
  A : Type
  f : A -> bool
  ============================
  forall (x : A) (l : list A), In x (filter l) <-> In x l /\ f x = true
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  f : A -> bool
  l, l' : list A
  ============================
  filter (l ++ l') = filter l ++ filter l'
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  ============================
  forall (A B : Type) (f g : A -> B) (l : list A),
  (forall a : A, In a l -> f a = g a) -> map f l = map g l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  f : A -> bool
  ============================
  forall l : list (list A), concat (map filter l) = filter (concat l)
The command has indeed failed with message:
Anomaly "Uncaught exception Invalid_argument("index out of bounds")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  f : A -> bool
  l : list A
  x : A
  ============================
  find l = Some x -> In x l /\ f x = true
The command has indeed failed with message:
Solver error: (error Parse Error: <stdin>:13.15: Quantifier used in non-quantified logic. ).
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  f : A -> bool
  l : list A
  ============================
  find l = None -> forall x : A, In x l -> f x = false
1 subgoal
  
  ============================
  forall (A B : Type) (f g : A -> B) (l : list A),
  map f l = map g l -> forall a : A, In a l -> f a = g a
The command has indeed failed with message:
Anomaly "Uncaught exception Invalid_argument("index out of bounds")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  ============================
  forall (A B : Type) (f g : A -> B) (l : list A),
  map f l = map g l <-> (forall a : A, In a l -> f a = g a)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.

