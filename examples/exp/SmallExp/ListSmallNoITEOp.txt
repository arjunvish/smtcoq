1 subgoal
  
  A : Type
  l : list A
  a : A
  ============================
  hd_error l = Some a -> l <> []
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  l : list A
  ============================
  length l = 0 <-> l = []
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

((length (A:=A)) l) = 0 && l = []
(not ((length (A:=A)) l) = 0) && ((length (A:=A)) []) = 0
(not ((length (A:=A)) l) = 0) && (not l = [])
1 subgoal
  
  A : Type
  ============================
  hd_error [] = None
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  l : list A
  x : A
  ============================
  hd_error (x :: l) = Some x
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  l : list A
  ============================
  [] ++ l = l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  l : list A
  ============================
  l ++ [] = l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  l : list A
  ============================
  l = l ++ []
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  l, m, n : list A
  ============================
  l ++ m ++ n = (l ++ m) ++ n
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  l, m, n : list A
  ============================
  (l ++ m) ++ n = l ++ m ++ n
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  x, y : list A
  a : A
  ============================
  a :: x ++ y = (a :: x) ++ y
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (x y : list A) (a b : A), x ++ [a] = y ++ [b] -> x = y /\ a = b
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall l l' : list A, length (l ++ l') = length l + length l'
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall l l1 l2 : list A, l ++ l1 = l ++ l2 -> l1 = l2
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

l2 = l1
((app (A:=A)) l l1) = l2 && ((app (A:=A)) l l2) = l1
((app (A:=A)) l l2) = l2 && ((app (A:=A)) l l1) = l1
1 subgoal
  
  A : Type
  ============================
  forall l l1 l2 : list A, l1 ++ l = l2 ++ l <-> l1 = l2
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (a : A) (l : list A), In a (a :: l)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (a b : A) (l : list A), In b l -> In b (a :: l)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  x, a : A
  l : list A
  ============================
  ~ In x (a :: l) <-> x <> a /\ ~ In x l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall a : A, ~ In a []
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (l l' : list A) (a : A), In a (l ++ l') <-> In a l \/ In a l'
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (a b : A) (l : list A), In b (a :: l) -> a = b \/ In b l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (n : nat) (l : list A) (d a : A),
  In (nth n l d) l -> In (nth (S n) (a :: l) d) (a :: l)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (n : nat) (l : list A) (d : A), nth_default d l n = nth n l d
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  ============================
  forall (x : A) (l : list A), remove x (x :: l) = remove x l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  ============================
  forall (l : list A) (x : A), remove x (remove x l) = remove x l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  l : list A
  x : A
  ============================
  ~ In x l <-> count_occ l x = 0
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  x : A
  ============================
  count_occ [] x = 0
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  l : list A
  x, y : A
  ============================
  x = y -> count_occ (x :: l) y = S (count_occ l y)
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

(count_occ (cons y l) x) = (S (count_occ l y))
(count_occ (cons x l) x) = (S (count_occ l y))
(count_occ (cons y l) y) = (S (count_occ l y))
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  l : list A
  x, y : A
  ============================
  x <> y -> count_occ (x :: l) y = count_occ l y
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

(cons x l) = l
(count_occ (cons x l) y) = (count_occ l y)
(cons x l) = l || x = y
1 subgoal
  
  A : Type
  ============================
  forall P : list A -> Prop,
  P [] ->
  (forall (a : A) (l : list A), P (rev l) -> P (rev (a :: l))) ->
  forall l : list A, P (rev l)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  concat [] = []
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (x : list A) (l : list (list A)), concat (x :: l) = x ++ concat l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  eq_dec : forall x y : A, {x = y} + {x <> y}
  ============================
  forall l l' : list A, {l = l'} + {l <> l'}
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  x : A
  l : list A
  ============================
  map (x :: l) = f x :: map l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall (l : list A) (x : A), In x l -> In (f x) (map l)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall (l : list A) (y : B),
  In y (map l) <-> (exists x : A, f x = y /\ In x l)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall l : list A, length (map l) = length l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall (l : list A) (d : A) (n : nat), nth n (map l) (f d) = f (nth n l d)
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall (n : nat) (l : list A) (d : A),
  nth_error l n = Some d -> nth_error (map l) n = Some (f d)
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  B : Type
  f : A -> B
  ============================
  forall l : list A, map l = [] -> l = []
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  f : A -> bool
  a : A
  l, l1, l2 : list A
  ============================
  partition l = (l1, l2) -> f a = true -> partition (a :: l) = (a :: l1, l2)
1 subgoal
  
  ============================
  forall (A : Type) (l : list A), map (fun x : A => x) l = l
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

(cons a l1) = l1 && l1 = l
(pair (cons a l1) l2) = (partition (cons a l))
(cons a l1) = l1 && (cons a l) = l
1 subgoal
  
  A : Type
  f : A -> bool
  a : A
  l, l1, l2 : list A
  ============================
  partition l = (l1, l2) -> f a = false -> partition (a :: l) = (l1, a :: l2)
The command has indeed failed with message:
cvc5 returned SAT. The goal is invalid, but one of the following hypotheses would allow cvc5 to prove the goal:

(cons a l) = l && l2 = l
(cons a l) = l && (cons a l2) = l2
(pair l1 (cons a l2)) = (partition (cons a l))
1 subgoal
  
  A : Type
  ============================
  forall (f g : A -> bool) (l : list A),
  (forall a : A, In a l -> f a = g a) -> filter f l = filter g l
The command has indeed failed with message:
Solver error: (error Parse Error: <stdin>:11.15: Quantifier used in non-quantified logic. ).
1 subgoal
  
  A : Type
  ============================
  forall (f g : A -> bool) (l : list A),
  filter f l = filter g l -> forall a : A, In a l -> f a = g a
The command has indeed failed with message:
Anomaly "Uncaught exception Invalid_argument("index out of bounds")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (f g : A -> bool) (l : list A),
  filter f l = filter g l <-> (forall a : A, In a l -> f a = g a)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall f g : A -> bool,
  (forall a : A, f a = g a) -> forall l : list A, filter f l = filter g l
The command has indeed failed with message:
Solver error: (error Parse Error: <stdin>:10.15: Quantifier used in non-quantified logic. ).
1 subgoal
  
  A : Type
  a, b : A
  l, m, n : list A
  ============================
  lel l l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  a, b : A
  l, m, n : list A
  ============================
  lel l m -> lel (a :: l) (b :: m)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  a, b : A
  l, m, n : list A
  ============================
  lel l m -> lel l (b :: m)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  a, b : A
  l, m, n : list A
  ============================
  lel (a :: l) (b :: m) -> lel l m
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall l : list A, incl [] l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall l : list A, incl l l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (a : A) (l m : list A), incl l m -> incl l (a :: m)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall l m n : list A, incl l m -> incl m n -> incl l n
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall l m n : list A, incl l n -> incl l (n ++ m)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall l m n : list A, incl l n -> incl l (m ++ n)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  f : A -> bool
  l : list A
  ============================
  incl (filter f l) l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  n : nat
  ============================
  firstn n [] = []
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  ============================
  forall (A B : Type) (f g : A -> B) (l : list A),
  map f l = map g l -> forall a : A, In a l -> f a = g a
The command has indeed failed with message:
Anomaly "Uncaught exception Invalid_argument("index out of bounds")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  ============================
  forall (A B : Type) (f g : A -> B) (l : list A),
  map f l = map g l <-> (forall a : A, In a l -> f a = g a)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  ============================
  forall (A B : Type) (f g : A -> B),
  (forall a : A, f a = g a) -> forall l : list A, map f l = map g l
The command has indeed failed with message:
Solver error: (error Parse Error: <stdin>:12.15: Quantifier used in non-quantified logic. ).
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  n : nat
  a : A
  l : list A
  ============================
  firstn (S n) (a :: l) = a :: firstn n l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  l : list A
  ============================
  firstn (length l) l = l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  l : list A
  ============================
  firstn 0 l = []
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (m n : nat) (l : list A),
  firstn m (skipn n l) = skipn n (firstn (n + m) l)
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (m n : nat) (l : list A),
  skipn m (firstn n l) = firstn (n - m) (skipn m l)
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall l : list A, skipn 0 l = l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall n : nat, skipn n ([] : list A) = []
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  n : nat
  a : A
  l : list A
  ============================
  skipn (S n) (a :: l) = skipn n l
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall l : list A, skipn (length l) l = []
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (n : nat) (l : list A),
  length (firstn n l) = Init.Nat.min n (length l)
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  n : nat
  ============================
  forall l1 l2 : list A,
  skipn n (l1 ++ l2) = skipn n l1 ++ skipn (n - length l1) l2
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall (x : nat) (l : list A),
  firstn x (rev l) = rev (skipn (length l - x) l)
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  a : A
  l1, l2 : list A
  ============================
  Add a (l1 ++ l2) (l1 ++ a :: l2)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  a : A
  l, l' : list A
  ============================
  Add a l l' -> forall x : A, In x l' <-> In x (a :: l)
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  a : A
  l, l' : list A
  ============================
  Add a l l' -> length l' = S (length l)
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  l, l' : list A
  a : A
  ============================
  NoDup (l ++ a :: l') -> NoDup (l ++ l') /\ ~ In a (l ++ l')
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  l, l' : list A
  a : A
  ============================
  NoDup (l ++ a :: l') -> NoDup (l ++ l')
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  l, l' : list A
  a : A
  ============================
  NoDup (l ++ a :: l') -> ~ In a (l ++ l')
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  decA : forall x y : A, {x = y} + {x <> y}
  l1, l2 : list A
  ============================
  incl l1 (nodup l2) <-> incl l1 l2
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  P : A -> Prop
  ============================
  Exists [] <-> False
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  P : A -> Prop
  x : A
  l : list A
  ============================
  Exists (x :: l) <-> P x \/ Exists l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  P : A -> Prop
  l : list A
  ============================
  Exists l <-> fold_right (fun x : A => or (P x)) False l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  P : A -> Prop
  ============================
  forall (a : A) (l : list A), Forall (a :: l) -> P a
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  P : A -> Prop
  ============================
  forall (a : A) (l : list A), Forall (a :: l) -> Forall l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  P : A -> Prop
  a : A
  l1, l2 : list A
  ============================
  Forall (l1 ++ a :: l2) -> P a
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  P : A -> Prop
  ============================
  forall Q : list A -> Type,
  Q [] ->
  (forall (b : A) (l : list A), P b -> Q (b :: l)) ->
  forall l : list A, Forall l -> Q l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  P : A -> Prop
  l : list A
  ============================
  Forall l <-> fold_right (fun x : A => and (P x)) True l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  B : Type
  ============================
  forall (f g : A -> B) (l : list A),
  Forall (fun x : A => f x = g x) l -> map f l = map g l
1 subgoal
  
  ============================
  forall len start : nat, start :: seq (S start) len = seq start (S len)
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  ============================
  forall P Q : A -> Prop,
  (forall a : A, P a -> Q a) -> forall l : list A, Forall P l -> Forall Q l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (P Q : A -> Prop) (l : list A),
  Forall P l -> Forall Q l -> Forall (fun x : A => P x /\ Q x) l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  ============================
  forall (P Q : A -> Prop) (l : list A),
  Forall (fun x : A => P x /\ Q x) l -> Forall P l /\ Forall Q l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  P : A -> Prop
  l : list A
  ============================
  Forall (fun x : A => ~ P x) l <-> ~ Exists P l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  l, l' : list A
  ============================
  incl l l' <-> Forall (fun x : A => In x l') l
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A, B : Type
  R : A -> B -> Prop
  ============================
  Forall2 [] []
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A, B : Type
  R : A -> B -> Prop
  ============================
  forall (l1 l2 : list A) (l1' l2' : list B),
  Forall2 l1 l1' -> Forall2 l2 l2' -> Forall2 (l1 ++ l2) (l1' ++ l2')
The command has indeed failed with message:
Anomaly
"Uncaught exception Failure("Verit.tactic: can only deal with equality over bool")."
Please report at http://coq.inria.fr/bugs/.
1 subgoal
  
  A : Type
  x : A
  n : nat
  ============================
  length (repeat x n) = n
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  ============================
  forall len start : nat, length (seq start len) = len
The command has indeed failed with message:
Could not reconstruct abduct
1 subgoal
  
  A : Type
  n : nat
  x, y : A
  ============================
  In y (repeat x n) -> y = x
The command has indeed failed with message:
Could not reconstruct abduct
The command has indeed failed with message:
Could not reconstruct abduct
