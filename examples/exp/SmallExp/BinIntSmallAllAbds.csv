#` Goal` Abducts 1` Abducts 2` Abducts 3` Abducts 4` Abducts 5` Abducts 6` Abducts 7` Abducts 8` Abducts 9` Abducts 10` Abducts 11` Abducts 12 
1`  pos_sub p p = 0`````(pos_sub p p) = p && (pos_sub -2 3) = p && p + p = p````(pos_sub p p) = p && (pos_sub -2 3) = p && p + p = p````
``````(pos_sub p p) = p && p + p = p````(pos_sub p p) = p && p + p = p````
``````(pos_sub (pos_sub p p) p) = -1 && (pos_sub p p) + p = -1 && (pos_sub 6 -6) + p = -1 && (pos_sub p 7) + p = -1 && (pos_sub 3 -3) = -1 && p = -1````(pos_sub (pos_sub p p) p) = -1 && (pos_sub p p) + p = -1 && (pos_sub 6 -6) + p = -1 && (pos_sub p 7) + p = -1 && (pos_sub 3 -3) = -1 && p = -1````
2`  (p < q)%positive -> pos_sub p q = neg (q - p)```p = (Pos.sub p p) && p = (pos_sub p p) && p = 0 && p = q``````````
````p = (Pos.sub q p) && p = (pos_sub p q) && q = 1 && p = 0``````````
````p = (Pos.sub q p) && p = (pos_sub p q) && p = 0 && pos_sub = Pos.sub``````````
3`  (q < p)%positive -> pos_sub p q = pos (p - q)`````````````
4`  n + 0 = n`````````````
5`  n * 0 = 0`````````````
6`  1 * n = n`````````````
7`  n + m = m + n`````````````
8`  - (n + m) = - n + - m`````````````
9`  - n = - m -> n = m`````````````
10`  n + - n = 0`````````````
11`  n * - m = - (n * m)`````````````
12`  1 = succ 0`````````````
13`  2 = succ 1`````````````
14`  0 + n = n`````````````
15`  succ n + m = succ (n + m)`m = 0 && m = n``m = 0``m + n = n``m + n = -1 && -1 = n``m + n = n``m + n = -1 && -1 = n``
``m = 0``(succ n) <= n && (succ 1) <= 1 && 1 <= (succ 1) && n <= (succ n) && m <= 1 - n && 1 <= m + n``m + n = -1 && (succ m) = -1 && (succ n) = n && n + m = m``m + n = n``m + n = -1 && (succ m) = -1 && (succ n) = n && n + m = m``m + n = n``
``1 = (succ 1) && n = (succ n) && 0 = 1 - m && 0 = 0 - n``m = 4 && (succ 0) <= n && (succ m) <= m && n <= (succ 0) && 0 = (succ 0) && m = (succ 1) && m <= (succ m)``-2 + n = m && (succ -2) = m && (succ n) = n && n + m = m``(succ m) <= (succ -2) && (succ n + -2) <= m && n <= (succ n) && m <= (succ m) && (succ n) <= n && n + n <= n && -1 <= n + n``-2 + n = m && (succ -2) = m && (succ n) = n && n + m = m``(succ m) <= (succ -2) && (succ n + -2) <= m && n <= (succ n) && m <= (succ m) && (succ n) <= n && n + n <= n && -1 <= n + n``
16`  - 0 = 0`````````````
17`  - succ n = pred (- n)`````````````
18`  succ (pred n) = n`n = (succ n) && n = -2 && pred = succ``n = (succ n) && n = 1 && succ = pred``````````
``n = (succ n) && n = -1 && pred = succ``n = (pred n) && n = 3 && succ = pred``````````
``n = (succ n) && pred = succ``n = (succ 0) && n = (pred n) && succ = pred``````````
19`  pred (succ n) = n`n = (pred n) && n = -2 && succ = pred``n = (pred n) && n = 1 && pred = succ``````````
``n = (pred n) && n = -1 && succ = pred``n = (succ n) && n = 3 && pred = succ``````````
``n = (pred n) && succ = pred``n = (pred 0) && n = (succ n) && pred = succ``````````
20`  n - 0 = n`````````````
21`  n - succ m = pred (n - m)```m = (pred m) && m = (succ m) && m = n && m = 0``````````
````m = n - m && m = (succ 1) && m = (pred 0) && m = (pred m) && m = 1``````````
````m <= n - 1 && n <= 2 && m = (pred 1) && m = (pred n) && m = (succ m) && 1 <= m``````````
22`  0 * n = 0`````````````
23`  succ n * m = n * m + m`````````````
24`  (n <? m) = true <-> n < m`````````````
25`  (n <=? m) = true <-> n <= m`````````````
26`  (m ?= n) = CompOpp (n ?= m)`````````````
27`  (n ?= m) = Lt <-> n < m`````````````
28`  (n ?= m) <> Gt <-> n <= m`````````````
29`  n <= m -> max n m = m`m = (max m m) && n <= m && 1 = n && m <= n``````(max m n) = m && (max n -2) = m && -1 = m && -1 = n````(max m n) = m && (max n -2) = m && -1 = m && -1 = n``
``m = (max m n) && m = m + n && n = m``````(max n n) = m && (max -2 n) = m && -1 <= m && m <= -1 && -1 = n````(max n n) = m && (max -2 n) = m && -1 <= m && m <= -1 && -1 = n``
``m = (max m m) && n <= m && m <= n``````(max n m) = m````(max n m) = m``
30`  n <= m -> min n m = n`m = (min m m) && 0 = n && n = m````(min n n) <= n && m <= (min -1 m) && m = n && m = -1``(min m n) = m && -1 = m && -1 = n``(min n n) <= n && m <= (min -1 m) && m = n && m = -1``(min m n) = m && -1 = m && -1 = n``
``m = (min m m) && 1 = n && m = 1````(min n m) <= n && m <= (min n m) && n <= m``(min n m) = m && (min -2 n) = m && n = m``(min n m) <= n && m <= (min n m) && n <= m``(min n m) = m && (min -2 n) = m && n = m``
``m = (min m m) && n = m````-1 <= (min n -2) && (min n m) <= -1 && n + n <= m && m <= -1 + n && n = -1``(min m m) <= m && m <= (min n n) && n <= m && m <= n``-1 <= (min n -2) && (min n m) <= -1 && n + n <= m && m <= -1 + n && n = -1``(min m m) <= m && m <= (min n n) && n <= m && m <= n``
31`  0 <= n -> abs n = n`````````````
32`  n <= 0 -> abs n = - n`n = (abs n) && 0 = n``n = (abs 1) && 0 <= (abs n) && n = (abs n) && n <= 0``(abs n) = n && n + n = n````(abs n) = n && n + n = n````
``1 = (abs n) && 0 = 1 + n``1 = (abs n) && n = -1``-2 + n = -1 && (abs -2) = -1 && (abs n) = -1````-2 + n = -1 && (abs -2) = -1 && (abs n) = -1````
``n = 0 - (abs n)``n = (abs 0) && n = 0``(abs n) + -2 = -1 && n = -1````(abs n) + -2 = -1 && n = -1````
33`  n = 0 -> sgn n = 0`n = (sgn n)`n = (sgn n)`n = (sgn n)`n = (sgn n)`(sgn n) = n`(sgn n) = n`(sgn n) = n`(sgn n) = n`(sgn n) = n`(sgn n) = n`(sgn n) = n`(sgn n) = n`
``n = (sgn 0)`n = (sgn 0)`n = (sgn 0)`n = (sgn 0)`(sgn n) + n = n && (sgn -1) = n`(sgn n + n) = n`(sgn n + n) = n`(sgn n + n) = n`(sgn n) + n = n && (sgn -1) = n`(sgn n + n) = n`(sgn n + n) = n`(sgn n + n) = n`
``0 = (sgn 0)`0 = (sgn n)`0 = (sgn n)`0 = (sgn n)`(sgn n) + n = n`(sgn n) + n = n`(sgn -3) + -2 = n && (sgn n) + n = n && (sgn n - 6) = n && (sgn -5 - n) = -1`(sgn n) + n = n`(sgn n) + n = n`(sgn n) + n = n`(sgn -3) + -2 = n && (sgn n) + n = n && (sgn n - 6) = n && (sgn -5 - n) = -1`(sgn n) + n = n`
34`  0 < n -> sgn n = 1`````n + -2 = -1 && n <= (sgn n) && (sgn n) <= n``n + n + -3 = -1 && (sgn n) = n``n + -2 = -1 && n <= (sgn n) && (sgn n) <= n``n + n + -3 = -1 && (sgn n) = n``
``````-1 <= (sgn (sgn n)) && (sgn (sgn n)) <= -1 && (sgn (sgn n)) <= n && (sgn -1) <= n + -3 && n + n <= (sgn n) && (sgn n) + -1 <= n && n + n + n <= n``(sgn -2) = n + n && (sgn -2) = (sgn -3) && (sgn 4) + n = -1 && (sgn n) + -2 = n && -1 <= (sgn n) && n + n <= -1``-1 <= (sgn (sgn n)) && (sgn (sgn n)) <= -1 && (sgn (sgn n)) <= n && (sgn -1) <= n + -3 && n + n <= (sgn n) && (sgn n) + -1 <= n && n + n + n <= n``(sgn -2) = n + n && (sgn -2) = (sgn -3) && (sgn 4) + n = -1 && (sgn n) + -2 = n && -1 <= (sgn n) && n + n <= -1``
``````(sgn -2 + n) = n && n <= (sgn n + n) && (sgn (sgn n)) <= -1 && (sgn -1) <= (sgn n) && (sgn n) + -1 <= n && n + n + -1 <= n && n <= n + n + n``(sgn (sgn -4)) = -1 && (sgn -2) = n + n && (sgn (sgn n)) = -1 && (sgn 4) + n = -1 && (sgn -3) + n = n && (sgn n) + -2 = n && (sgn -4) + -3 = -1 && -1 <= (sgn n) && n + n <= -1``(sgn -2 + n) = n && n <= (sgn n + n) && (sgn (sgn n)) <= -1 && (sgn -1) <= (sgn n) && (sgn n) + -1 <= n && n + n + -1 <= n && n <= n + n + n``(sgn (sgn -4)) = -1 && (sgn -2) = n + n && (sgn (sgn n)) = -1 && (sgn 4) + n = -1 && (sgn -3) + n = n && (sgn n) + -2 = n && (sgn -4) + -3 = -1 && -1 <= (sgn n) && n + n <= -1``
35`  n < 0 -> sgn n = -1`n = (sgn n) && n = -1``n = (sgn n) && n = -1````(sgn n) = n && n = -1````(sgn n) = n && n = -1``
``n = 0 - (sgn 1) && n = (sgn 0 - 1) && (sgn 0) = 1 && n = 0 + (sgn 0)``0 = (sgn -1) && n = 1 + (sgn 0) && n = (sgn -1)````(sgn n) <= -1 && -1 <= (sgn n) && n + n = n````(sgn n) <= -1 && -1 <= (sgn n) && n + n = n``
``n = 0 - (sgn 1) && n = (sgn (sgn 0)) && n = (sgn 0 - 1) && n = 0 - -1``0 = 1 + (sgn n)````(sgn n) = -1````(sgn n) = -1``
36`  n ^ 0 = 1```n = (pow n 0) && n = 1``````````
````1 = (pow n n) && n = 0``````````
````1 = (pow n 0)``````````
37`  m < 0 -> n ^ m = 0`m = (pow m m) && 0 = n && m = m - m``m = (pow m m) && n <= m && m = 0 && m <= n``(pow n m) <= m && n + n <= m && m + m <= m && m <= (pow n m) && m <= n + n && (not -2 = m) && -1 <= n``m + m = m && n + n = m && (pow n m) = m``(pow n m) <= m && n + n <= m && m + m <= m && m <= (pow n m) && m <= n + n && (not -2 = m) && -1 <= n``m + m = m && n + n = m && (pow n m) = m``
``m = (pow n m) && m = (pow m 0) && 1 = n && m = m - m``m = (pow n m) && m = 0``(pow n m) <= m && m + m <= m && m <= (pow n m) && m <= m + m``m + m = m && (pow m m) = m && (pow n m) = m && (pow 3 -2) = m``(pow n m) <= m && m + m <= m && m <= (pow n m) && m <= m + m``m + m = m && (pow m m) = m && (pow n m) = m && (pow 3 -2) = m``
``m = (pow n m) && 1 = n && m = m - m``0 = (pow m n) && n = (pow m 0) && n = -1 && m = -1``n <= (pow n m) && -1 <= (pow n m) && (pow n m) <= n && n + n <= n && m <= (pow -1 m) && (not n = m) && n <= m``m + m = m && n + -2 = m && (pow n m) = m``n <= (pow n m) && -1 <= (pow n m) && (pow n m) <= n && n + n <= n && m <= (pow -1 m) && (not n = m) && n <= m``m + m = m && n + -2 = m && (pow n m) = m``
38`  pow_pos n p = n ^ pos p`````````````
39`  square n = n * n`````````````
40`  n < 0 -> sqrt n = 0`````(sqrt n) = n && n + n = n````(sqrt n) = n && n + n = n````
``````(sqrt n) + n = -1 && n = -1````(sqrt n) + n = -1 && n = -1````
``````(sqrt n) + n = n````(sqrt n) + n = n````
41`  n <= 0 -> log2 n = 0`````(log2 n) = n && n + n = n````(log2 n) = n && n + n = n````
``````(log2 n) + n = -1 && n = -1````(log2 n) + n = -1 && n = -1````
``````(log2 n) + n = n````(log2 n) + n = n````
42`  double n = 2 * n`n = (double 0) && 0 = n````(double n) = n && n + n = n``n + n <= n && (double n) = n && (double -2) = n && (not n = -1) && -1 <= n``(double n) = n && n + n = n``n + n <= n && (double n) = n && (double -2) = n && (not n = -1) && -1 <= n``
``n <= 1 + (double 0) && n = 1 + (double n) && n = 0 - (double 0) && (double 0) <= 1````n + -1 = (double n) && (double -5) + -1 = n && (double -7) + -2 = -1 && (double -2) = -1 && n = -1``(double n) = n && n + n = n``n + -1 = (double n) && (double -5) + -1 = n && (double -7) + -2 = -1 && (double -2) = -1 && n = -1``(double n) = n && n + n = n``
``n = 1 - (double 1) && n = 1 + (double n) && n = (double 1 - n) && n = 0 + (double 0) && n = 1 - 1 + 1````n + -1 = (double n) && n + -1 = n + n``(double n) = n + n``n + -1 = (double n) && n + -1 = n + n``(double n) = n + n``
43`  succ_double n = 2 * n + 1`n = (succ_double 1) && n = (succ_double 0) && n = (succ_double n) && n = -1``n = (succ_double n) && n = -1``(succ_double n) = n && n = -1``(succ_double n) = n && n = -1``(succ_double n) = n && n = -1``(succ_double n) = n && n = -1``
``n = (succ_double 0) && n = (succ_double n) && n = -1``1 = (succ_double n) && 0 <= n && n <= 0``(succ_double n) + -2 = -1 && n + n <= n && n <= n + n``(succ_double 5) + -2 = -1 && (succ_double n) + -2 = -1 && (succ_double -2) = n && n + n = n``(succ_double n) + -2 = -1 && n + n <= n && n <= n + n``(succ_double 5) + -2 = -1 && (succ_double n) + -2 = -1 && (succ_double -2) = n && n + n = n``
``n = (succ_double 1) && n = (succ_double n) && n = 0 - 1``n = 1 + (succ_double n) && n = (succ_double 2) && -2 <= n && n <= -2``(succ_double n - -1) <= n && (succ_double n + -3) <= -1 && n + -1 <= (succ_double n) && (succ_double -2 - n) = n && (succ_double n) = -1 + n && (not (succ_double -3) = n) && (not n + n = -2) && (succ_double -4) + -2 = -1 && n + n + -1 <= n && n <= (succ_double -3) && (not n <= -6 && true)``(succ_double n) + -2 = -1 && n + n = n``(succ_double n - -1) <= n && (succ_double n + -3) <= -1 && n + -1 <= (succ_double n) && (succ_double -2 - n) = n && (succ_double n) = -1 + n && (not (succ_double -3) = n) && (not n + n = -2) && (succ_double -4) + -2 = -1 && n + n + -1 <= n && n <= (succ_double -3) && (not n <= -6 && true)``(succ_double n) + -2 = -1 && n + n = n``
44`  pred_double n = 2 * n - 1`n = (pred_double n) && n = 1``n = (pred_double n) && n = 1``(pred_double n) = -1 && (pred_double -2) = -1 && n + n = n``-1 <= (pred_double n) && (pred_double n) <= -1 && n + n = n``(pred_double n) = -1 && (pred_double -2) = -1 && n + n = n``-1 <= (pred_double n) && (pred_double n) <= -1 && n + n = n``
``n = 1 + (pred_double n) && n = (pred_double -2) && n = (pred_double 1 + 1) && n = 1 - n + 1``n = (pred_double n) - 1 && n = 1 + (pred_double 1) && (pred_double 1) <= 1 && 0 <= (pred_double 1)``(pred_double n) = -1 && n + n = n``(pred_double (pred_double n)) = -1 && (pred_double n) = n + -2 && (pred_double (pred_double n)) = n && (pred_double n - 5) = -1 && (pred_double 3) = -1``(pred_double n) = -1 && n + n = n``(pred_double (pred_double n)) = -1 && (pred_double n) = n + -2 && (pred_double (pred_double n)) = n && (pred_double n - 5) = -1 && (pred_double 3) = -1``
``n = 1 + (pred_double 1) && n = 1 + (pred_double n) && n = (pred_double 1 + 1) && n = 1 - n + 1``0 <= (pred_double -1) && n <= 1 - (pred_double 0) && n = 1 + (pred_double n) && n <= (pred_double n - 1) && n = (pred_double -1) && (pred_double 1) <= 0 && n <= 2``-2 + n = -1 && (pred_double n) = n``n + -1 <= (pred_double n) && (pred_double n + n) <= n && (pred_double -4) + n = n && (pred_double n) + -2 = -1 && (pred_double n + n) = -1 && (pred_double 4 - n) = n && (pred_double 5 - n) = -1 && (not (pred_double 4) = n) && (not n + n = -2)``-2 + n = -1 && (pred_double n) = n``n + -1 <= (pred_double n) && (pred_double n + n) <= n && (pred_double -4) + n = n && (pred_double n) + -2 = -1 && (pred_double n + n) = -1 && (pred_double 4 - n) = n && (pred_double 5 - n) = -1 && (not (pred_double 4) = n) && (not n + n = -2)``
45`  b <> 0 -> a = b * (a ÷ b) + rem a b`````````````
46`  b <> 0 -> rem (- a) b = - rem a b`a = (rem b b) && b = (rem 0 1) && b = (rem a b) && b = 0 - 1 && a = 1``a = (rem a b) && b = (rem 0 0) && b = 0 - a && b = (rem b b)``-2 + b <= -1 && (rem -1 b) <= a && a <= (rem a b) && (rem b b) <= b && b <= (rem b b) && -1 <= b + b && a = -1``(rem b -2) = a && (rem 3 a) = -1 && (rem -2 a) = a && (rem -3 3) = -1 && (rem b 3) = -1 && (rem 3 b) = -1 && (rem b b) = a && b + -2 = a && (rem a b) = b && (rem 3 -2) = b && (rem b a) = b && -1 = a``-2 + b <= -1 && (rem -1 b) <= a && a <= (rem a b) && (rem b b) <= b && b <= (rem b b) && -1 <= b + b && a = -1``(rem b -2) = a && (rem 3 a) = -1 && (rem -2 a) = a && (rem -3 3) = -1 && (rem b 3) = -1 && (rem 3 b) = -1 && (rem b b) = a && b + -2 = a && (rem a b) = b && (rem 3 -2) = b && (rem b a) = b && -1 = a``
``a = (rem b 1) && b = (rem 1 0) && b = (rem 0 1) && b = 0 - a && b = (rem a 1) && b = 0 + 1``a = (rem a b) && b = (rem a a) && b = (rem b b) && b = -1 && a = 1``b + -2 <= -1 && (rem b b) <= -1 && (rem -1 b) <= a && -1 <= (rem a a) && b <= (rem -1 a) && b = a && -1 <= a + a``(rem a 3) = -1 && (rem a -2) = a && (rem -3 3) = -1 && (rem 3 b) = -1 && (rem b b) = a && (rem a b) = a && a + b = b``b + -2 <= -1 && (rem b b) <= -1 && (rem -1 b) <= a && -1 <= (rem a a) && b <= (rem -1 a) && b = a && -1 <= a + a``(rem a 3) = -1 && (rem a -2) = a && (rem -3 3) = -1 && (rem 3 b) = -1 && (rem b b) = a && (rem a b) = a && a + b = b``
``a = (rem b 1) && b = 0 - a && b = (rem a 1) && b = 0 + 1``a = (rem a b) && b = 0 - a && b = (rem b b)``a + b <= -1 && a <= (rem a -1) && (rem a b) <= a && b = -1 && -1 <= a + a``a + a <= a && (rem b -2) = a && (rem a b) = a && (rem a -2) = b && -1 <= a + a``a + b <= -1 && a <= (rem a -1) && (rem a b) <= a && b = -1 && -1 <= a + a``a + a <= a && (rem b -2) = a && (rem a b) = a && (rem a -2) = b && -1 <= a + a``
47`  b <> 0 -> rem a (- b) = rem a b`b = (rem b 1) && b = (rem b b) && a = b && b = -1``b = (rem b 1) && b = (rem b b) && a <= b && b <= a && b = -1``-2 + b <= -1 && (rem -1 a) <= a && (rem -1 b) <= a && a <= (rem a b) && -1 <= (rem a a) && a = -1 && -1 <= b + b``a + -2 = b && (rem a a) = b && (rem a b) = b && -1 = b``-2 + b <= -1 && (rem -1 a) <= a && (rem -1 b) <= a && a <= (rem a b) && -1 <= (rem a a) && a = -1 && -1 <= b + b``a + -2 = b && (rem a a) = b && (rem a b) = b && -1 = b``
``b = a - 1 && b = (rem a 1) && b = (rem a b) && b = (rem b a) && b = a + b``b = (rem a a) && b = (rem a b) && a <= 1 && 1 <= a && b = -1``a + -2 <= -1 && (rem b -1) <= a && a <= (rem a a) && (rem a b) <= b && b <= (rem a -1) && b <= a + a && b = a``a + -2 = b && (rem a a) = b && (rem b a) = b && (rem a b) = b && -1 <= b && b + b <= b``a + -2 <= -1 && (rem b -1) <= a && a <= (rem a a) && (rem a b) <= b && b <= (rem a -1) && b <= a + a && b = a``a + -2 = b && (rem a a) = b && (rem b a) = b && (rem a b) = b && -1 <= b && b + b <= b``
``b = (rem a 1) && b = (rem a b) && b = a + b && b = -1``b = (rem a 1) && b = (rem a a) && b = (rem a b) && b = (rem b 1) && b = (rem b 0) && b = (rem b b) && a = 0 && b = -1``(rem a a) = a && a + -2 <= -1 && b + -2 <= -1 && a <= (rem a b) && -1 <= a + b && (rem a b) <= a && -1 <= a + -2 && (not a = b) && (not -2 = b)``b + b <= a && (rem a 3) <= -1 && (rem a a) <= b && (rem a b) <= b && a + -2 = b && (rem a -2) = b && b <= (rem a b) && b <= (rem a a) && -1 <= b + b``(rem a a) = a && a + -2 <= -1 && b + -2 <= -1 && a <= (rem a b) && -1 <= a + b && (rem a b) <= a && -1 <= a + -2 && (not a = b) && (not -2 = b)``b + b <= a && (rem a 3) <= -1 && (rem a a) <= b && (rem a b) <= b && a + -2 = b && (rem a -2) = b && b <= (rem a b) && b <= (rem a a) && -1 <= b + b``
48`  (n | pos p) <-> (n | neg p)`````````````
49`  (pos p | n) <-> (neg p | n)`````````````
50`  0 <= gcd a b`````````````
51`  testbit (of_N a) (of_N n) = N.testbit a n`````````````
52`  0 <= n -> testbit (pos a) n = N.testbit (N.pos a) (to_N n)`````````````
53`  div2 a = shiftr a 1`a = (shiftr a a) && a = (div2 1) && a = 1``a = (shiftr a a) && a = (div2 1) && a = 1``-1 <= (shiftr a a) && -1 <= (div2 a) && (shiftr a a) <= -1 && a + -2 <= -1 && (div2 a) <= -1 && -1 <= -2 + a``a + -2 = (div2 a) && a - -2 = (shiftr -3 4) && (div2 a) <= -1 && -1 <= (div2 a) && (shiftr a a) = -1``-1 <= (shiftr a a) && -1 <= (div2 a) && (shiftr a a) <= -1 && a + -2 <= -1 && (div2 a) <= -1 && -1 <= -2 + a``a + -2 = (div2 a) && a - -2 = (shiftr -3 4) && (div2 a) <= -1 && -1 <= (div2 a) && (shiftr a a) = -1``
``a = (shiftr a 1) && a = (div2 0) && a = (div2 a)``a = (shiftr a 1) && a = (div2 0) && a = (div2 a)``-2 + a <= -1 && (shiftr a a) = a && -1 <= -2 + a && (shiftr -1 -2) = a && (div2 a) = a``(shiftr a -2) = a + -3 && a + -2 = (div2 a) && (div2 a) <= -1 && -1 <= (div2 a) && (shiftr a a) = -1 && (div2 -2) = a``-2 + a <= -1 && (shiftr a a) = a && -1 <= -2 + a && (shiftr -1 -2) = a && (div2 a) = a``(shiftr a -2) = a + -3 && a + -2 = (div2 a) && (div2 a) <= -1 && -1 <= (div2 a) && (shiftr a a) = -1 && (div2 -2) = a``
``a = (shiftr a 1) && a = (div2 a) && a = 2``a = (shiftr a 1) && a = (div2 a) && a = 3``a <= (div2 a) && a <= (shiftr a a) && -2 + a <= -1 && (shiftr a a) <= a && -1 <= -2 + a && (div2 a) <= a && (div2 -1) = a``(div2 a) = (shiftr a a) && -1 = (shiftr a 4) && a + -2 = (div2 a) && a - -2 = (div2 -3) && (shiftr a a) = -1``a <= (div2 a) && a <= (shiftr a a) && -2 + a <= -1 && (shiftr a a) <= a && -1 <= -2 + a && (div2 a) <= a && (div2 -1) = a``(div2 a) = (shiftr a a) && -1 = (shiftr a 4) && a + -2 = (div2 a) && a - -2 = (div2 -3) && (shiftr a a) = -1``
54`  testbit 0 n = false`````````````
55`  n < 0 -> testbit a n = false`````````````
56`  testbit (2 * a + 1) 0 = true`````````````
57`  testbit (2 * a) 0 = false`````````````
58`  n > m <-> m < n`````````````
59`  n > m -> m < n`````````````
60`  n < m -> m > n`````````````
61`  n >= m <-> m <= n`````````````
62`  n >= m -> m <= n`````````````
63`  n <= m -> m >= n`````````````
64`  (n >? m) = (m <? n)`````````````
65`  (n >=? m) = (m <=? n)`````````````
66`  (n >? m) = true <-> m < n`````````````
67`  (n >=? m) = true <-> m <= n`````````````
68`  BoolSpec (m < n) (n <= m) (n >? m)`````````````
69`  BoolSpec (m <= n) (n < m) (n >=? m)`````````````
70`  n + m = n + p -> m = p`````````````
71`  p <> 0 -> p * n = p * m -> n = m`````````````
72`  p <> 0 -> n * p = m * p -> n = m`````````````
73`  - n = n * -1`````````````
74`  n + n = 2 * n`````````````
75`  (- n ?= - m) = (m ?= n)`````````````
76`  Z.to_pos (Zpos p) = p`````````````
77`  Zpos p = Zpos q -> p = q`````````````
78`  Zpos p = Zpos q <-> p = q`````````````
79`  0 < Zpos p`````````````
80`  0 <= Zpos p`````````````
81`  1 = 1`````````````
82`  Zpos (Pos.succ p) = Z.succ (Zpos p)`````````````
83`  Zpos (p + q) = Zpos p + Zpos q`q = (Pos.add q q) && q = q - q && 0 = p``q = (Pos.add q q) && p <= q && q = 0 && q <= p``(Pos.add q q) <= q && q + p <= q && q <= (Pos.add q q) && q = p && q <= q + p``q + q = q && p + p = q && (Pos.add p q) = q && (Pos.add 3 -2) = q``(Pos.add q q) <= q && q + p <= q && q <= (Pos.add q q) && q = p && q <= q + p``q + q = q && p + p = q && (Pos.add p q) = q && (Pos.add 3 -2) = q``
``q = (Pos.add p q) && q = 2 && q = p + q``q = (Pos.add 0 q) && q = -2 && p = 0``(Pos.add p q) <= q && q + p <= q && q <= (Pos.add p q) && q = -1 && q <= q + p``p + p = q && p + q = q && (Pos.add -2 p) = q && (Pos.add p p) = q``(Pos.add p q) <= q && q + p <= q && q <= (Pos.add p q) && q = -1 && q <= q + p``p + p = q && p + q = q && (Pos.add -2 p) = q && (Pos.add p p) = q``
``q = (Pos.add p 0) && q = (Pos.add p q) && q = p + q``q = p + 1 && q = (Pos.add p p) && q = (Pos.add 0 q) && p = 0``-1 <= (Pos.add p q) && (Pos.add p q) <= -1 && q + p <= p && -1 <= q + q && p = -1``p + p = q && (Pos.add p q) = q && p = q``-1 <= (Pos.add p q) && (Pos.add p q) <= -1 && q + p <= p && -1 <= q + q && p = -1``p + p = q && (Pos.add p q) = q && p = q``
84`  (p < q)%positive -> Zpos (q - p) = Zpos q - Zpos p`p = (Pos.sub p p) && p = p - p && 0 = q``p = (Pos.sub p p) && q <= p && p = 0 && p <= q``(Pos.sub q q) <= p && q + q <= p && p + q <= p && p <= (Pos.sub p q) && p <= q + q && p <= p + q``q + q = p && (Pos.sub p p) = p && q = p``(Pos.sub q q) <= p && q + q <= p && p + q <= p && p <= (Pos.sub p q) && p <= q + q && p <= p + q``q + q = p && (Pos.sub p p) = p && q = p``
``p = q - 1 && p = (Pos.sub q 1) && p = 1``p = q - p && p = (Pos.sub q p)``(Pos.sub -1 p) <= q && q <= (Pos.sub q p) && -1 <= q + p && p + p <= p && q <= -1``p + -1 <= q && q <= p + p && (Pos.sub q q) <= -1 && (Pos.sub q p) = p && (Pos.sub q q) = p``(Pos.sub -1 p) <= q && q <= (Pos.sub q p) && -1 <= q + p && p + p <= p && q <= -1``p + -1 <= q && q <= p + p && (Pos.sub q q) <= -1 && (Pos.sub q p) = p && (Pos.sub q q) = p``
``p = (Pos.sub q 0) && p = q - p && p = (Pos.sub q p) && p = -2``q = (Pos.sub 0 p) && q = (Pos.sub q p) && p = (Pos.sub 1 0) && q = -1 && p = q + 1``-2 + q <= -1 && -1 <= (Pos.sub q p) && (Pos.sub q p) <= -1 && p <= q + q && q <= -1 + p``p + p <= q && (Pos.sub -2 p) = p && (not q = p) && q <= p && -1 = p``-2 + q <= -1 && -1 <= (Pos.sub q p) && (Pos.sub q p) <= -1 && p <= q + q && q <= -1 + p``p + p <= q && (Pos.sub -2 p) = p && (not q = p) && q <= p && -1 = p``
85`  p <> 1%positive -> Zpos (Pos.pred p) = Z.pred (Zpos p)`````````````
86`  Zpos (p * q) = Zpos p * Zpos q`````````````
87`  Zpos (p ^ q) = Z.pow_pos (Zpos p) q`````````````
88`  Zpos (p ^ q) = Zpos p ^ Zpos q`````````````
89`  Zpos (Pos.square p) = Z.square (Zpos p)`````````````
90`  (p ?= q)%positive = (Zpos p ?= Zpos q)`````````````
91`  (p <=? q)%positive = (Zpos p <=? Zpos q)`````````````
92`  (p <? q)%positive = (Zpos p <? Zpos q)`````````````
93`  (p =? q)%positive = (Zpos p =? Zpos q)`````````````
94`  Zpos (Pos.max p q) = Z.max (Zpos p) (Zpos q)`````````````
95`  Zpos (Pos.min p q) = Z.min (Zpos p) (Zpos q)`````````````
96`  Zpos (Pos.sqrt p) = Z.sqrt (Zpos p)`````````````
97`  Zpos (Pos.gcd p q) = Z.gcd (Zpos p) (Zpos q)`````````````
98`  0 <= n -> Z.testbit (Zpos a) n = N.testbit (N.pos a) (Z.to_N n)`````````````
99`  Zneg p = Zneg q -> p = q`````````````
100`  Zneg p = Zneg q <-> p = q`````````````
101`  Zpos p = Zpos q -> p = q`````````````
102`  Zpos p = Zpos q <-> p = q`````````````
103`  Zneg p < 0`````````````
104`  Zneg p <= 0`````````````
105`  0 < Zpos p`````````````
106`  0 <= Zpos p`````````````
107`  Zneg p <= Zpos q`````````````
108`  Zneg p < Zpos q`````````````
109`  (q <= p)%positive -> Zneg p <= Zneg q`````````````
110`  (q < p)%positive -> Zneg p < Zneg q`````````````
111`  (p <= q)%positive -> Zpos p <= Zpos q`````````````
112`  (p < q)%positive -> Zpos p < Zpos q`````````````
113`  - Zneg p = Zpos p`````````````
114`  - Zpos p = Zneg p`````````````
115`  Zneg p + Zneg q = Zneg (p + q)`q = (Pos.add q q) && q = q - q && 0 = p``q = (Pos.add q q) && p <= q && q = 0 && q <= p``(Pos.add q q) <= q && q + p <= q && q <= (Pos.add q q) && q = p && q <= q + p``q + q = q && p + p = q && (Pos.add p q) = q && (Pos.add 3 -2) = q``(Pos.add q q) <= q && q + p <= q && q <= (Pos.add q q) && q = p && q <= q + p``q + q = q && p + p = q && (Pos.add p q) = q && (Pos.add 3 -2) = q``
``q = (Pos.add p q) && q = 2 && q = p + q``q = (Pos.add 0 q) && q = -2 && p = 0``(Pos.add p q) <= q && q + p <= q && q <= (Pos.add p q) && q = -1 && q <= q + p``p + p = q && p + q = q && (Pos.add -2 p) = q && (Pos.add p p) = q``(Pos.add p q) <= q && q + p <= q && q <= (Pos.add p q) && q = -1 && q <= q + p``p + p = q && p + q = q && (Pos.add -2 p) = q && (Pos.add p p) = q``
``q = (Pos.add p 0) && q = (Pos.add p q) && q = p + q``q = p + 1 && q = (Pos.add p p) && q = (Pos.add 0 q) && p = 0``(Pos.add p q) <= q && p + p <= p && q <= (Pos.add p q) && q <= q + p``p + p = q && (Pos.add p q) = q && p = q``(Pos.add p q) <= q && p + p <= p && q <= (Pos.add p q) && q <= q + p``p + p = q && (Pos.add p q) = q && p = q``
116`  Zpos p + Zneg q = Z.pos_sub p q`q = (Z.pos_sub q q) && q = q - q && 0 = p``q = (Z.pos_sub q q) && p <= q && q = 0 && q <= p``(Z.pos_sub p p) <= q && p + p <= q && q + p <= q && q <= (Z.pos_sub q p) && q <= p + p && q <= q + p``p + p = q && (Z.pos_sub q q) = q && p = q``(Z.pos_sub p p) <= q && p + p <= q && q + p <= q && q <= (Z.pos_sub q p) && q <= p + p && q <= q + p``p + p = q && (Z.pos_sub q q) = q && p = q``
``q = p - 1 && q = (Z.pos_sub p q) && q = 0 + 1``q = p - q && q = (Z.pos_sub p q)``(Z.pos_sub -1 q) <= p && p <= (Z.pos_sub p q) && -1 <= p + q && q + q <= q && p <= -1``-1 <= (Z.pos_sub p -2) && q + q <= p && (Z.pos_sub p -2) <= q && (Z.pos_sub p q) <= q && (Z.pos_sub -2 q) = q && (not p = q) && p <= q``(Z.pos_sub -1 q) <= p && p <= (Z.pos_sub p q) && -1 <= p + q && q + q <= q && p <= -1``-1 <= (Z.pos_sub p -2) && q + q <= p && (Z.pos_sub p -2) <= q && (Z.pos_sub p q) <= q && (Z.pos_sub -2 q) = q && (not p = q) && p <= q``
``q = 1 + p && q = p - q && q = (Z.pos_sub p q)``p = (Z.pos_sub 0 q) && p = (Z.pos_sub p q) && q = (Z.pos_sub 1 0) && p = -1 && q = p + 1``-2 + p <= -1 && (Z.pos_sub -2 q) <= -1 && p <= (Z.pos_sub p q) && (Z.pos_sub p q) <= p && p <= (Z.pos_sub -2 -1) && q <= -1 + p && -1 <= q``-1 <= (Z.pos_sub p q) && (Z.pos_sub p q) <= -1 && q + -1 <= p && p <= (Z.pos_sub p p) && p + q = q && (Z.pos_sub p p) = q``-2 + p <= -1 && (Z.pos_sub -2 q) <= -1 && p <= (Z.pos_sub p q) && (Z.pos_sub p q) <= p && p <= (Z.pos_sub -2 -1) && q <= -1 + p && -1 <= q``-1 <= (Z.pos_sub p q) && (Z.pos_sub p q) <= -1 && q + -1 <= p && p <= (Z.pos_sub p p) && p + q = q && (Z.pos_sub p p) = q``
117`  Zneg p + Zpos q = Z.pos_sub q p`p = (Z.pos_sub p p) && p = p - p && 0 = q``p = (Z.pos_sub p p) && q <= p && p = 0 && p <= q``(Z.pos_sub q q) <= p && q + q <= p && p + q <= p && p <= (Z.pos_sub p q) && p <= q + q && p <= p + q``q + q = p && (Z.pos_sub p p) = p && q = p``(Z.pos_sub q q) <= p && q + q <= p && p + q <= p && p <= (Z.pos_sub p q) && p <= q + q && p <= p + q``q + q = p && (Z.pos_sub p p) = p && q = p``
``p = q - 1 && p = (Z.pos_sub q 1) && p = 1``p = q - p && p = (Z.pos_sub q p)``-2 + q <= -1 && -1 <= (Z.pos_sub q p) && (Z.pos_sub q p) <= -1 && p <= q + q && q <= -1 + p``p + p <= q && (Z.pos_sub -2 p) = p && (Z.pos_sub 3 -2) = p && (not q = p) && -1 = p && q + q <= -1``-2 + q <= -1 && -1 <= (Z.pos_sub q p) && (Z.pos_sub q p) <= -1 && p <= q + q && q <= -1 + p``p + p <= q && (Z.pos_sub -2 p) = p && (Z.pos_sub 3 -2) = p && (not q = p) && -1 = p && q + q <= -1``
``p = (Z.pos_sub q 0) && p = q - p && p = (Z.pos_sub q p) && p = -2``q = (Z.pos_sub 0 p) && q = (Z.pos_sub q p) && q = 2 && p = 0``p + -1 <= q && -1 <= (Z.pos_sub q p) && (Z.pos_sub q p) <= q && q <= -1 + p && q + q <= -1``-1 <= (Z.pos_sub -2 p) && p + p <= q && (Z.pos_sub q p) <= p && (not q = p) && q <= p && -1 = p``p + -1 <= q && -1 <= (Z.pos_sub q p) && (Z.pos_sub q p) <= q && q <= -1 + p && q + q <= -1``-1 <= (Z.pos_sub -2 p) && p + p <= q && (Z.pos_sub q p) <= p && (not q = p) && q <= p && -1 = p``
118`  Zpos p + Zpos q = Zpos (p + q)`q = (Pos.add q q) && q = q - q && 0 = p``q = (Pos.add q q) && p <= q && q = 0 && q <= p``(Pos.add q q) <= q && q + p <= q && q <= (Pos.add q q) && q = p && q <= q + p``q + q = q && p + p = q && (Pos.add p q) = q && (Pos.add 3 -2) = q``(Pos.add q q) <= q && q + p <= q && q <= (Pos.add q q) && q = p && q <= q + p``q + q = q && p + p = q && (Pos.add p q) = q && (Pos.add 3 -2) = q``
``q = (Pos.add p q) && q = 2 && q = p + q``q = (Pos.add 0 q) && q = -2 && p = 0``(Pos.add p q) <= q && q + p <= q && q <= (Pos.add p q) && q = -1 && q <= q + p``p + p = q && p + q = q && (Pos.add -2 p) = q && (Pos.add p p) = q``(Pos.add p q) <= q && q + p <= q && q <= (Pos.add p q) && q = -1 && q <= q + p``p + p = q && p + q = q && (Pos.add -2 p) = q && (Pos.add p p) = q``
``q = (Pos.add p 0) && q = (Pos.add p q) && q = p + q``q = p + 1 && q = (Pos.add p p) && q = (Pos.add 0 q) && p = 0``-1 <= (Pos.add p q) && (Pos.add p q) <= -1 && q + p <= p && -1 <= q + q && p = -1``p + p = q && (Pos.add p q) = q && p = q``-1 <= (Pos.add p q) && (Pos.add p q) <= -1 && q + p <= p && -1 <= q + q && p = -1``p + p = q && (Pos.add p q) = q && p = q``
119`  (n | Zpos p) <-> (n | Zneg p)`````````````
120`  (Zpos p | n) <-> (Zneg p | n)`````````````
121`  0 <= n -> Z.testbit (Zneg a) n = negb (N.testbit (Pos.pred_N a) (Z.to_N n))`````````````
122`  0 <= n -> Z.testbit (Zpos a) n = N.testbit (N.pos a) (Z.to_N n)`````````````
123`  0 < x -> Zpos (Z.to_pos x) = x`````````````
124`  0 < x -> 0 < y -> Z.to_pos x = Z.to_pos y -> x = y`````````````
125`  0 < x -> 0 < y -> Z.to_pos x = Z.to_pos y <-> x = y`````````````
126`  x <= 0 -> Z.to_pos x = 1%positive`````````````
127`  Z.to_pos 1 = 1%positive`````````````
128`  0 < x -> Z.to_pos (Z.double x) = ((Z.to_pos x)~0)%positive`````````````
129`  0 < x -> Z.to_pos (Z.succ_double x) = ((Z.to_pos x)~1)%positive`````````````
130`  0 < x -> Z.to_pos (Z.succ x) = Pos.succ (Z.to_pos x)`````````````
131`  0 < x -> 0 < y -> Z.to_pos (x + y) = (Z.to_pos x + Z.to_pos y)%positive`````````````
132`  1 < x -> Z.to_pos (Z.pred x) = Pos.pred (Z.to_pos x)`````````````
133`  0 < x -> 0 < y -> Z.to_pos (x * y) = (Z.to_pos x * Z.to_pos y)%positive`````````````
134`  0 < x -> Z.to_pos (Z.pow_pos x p) = (Z.to_pos x ^ p)%positive`````````````
135`  0 < x -> 0 < y -> (x ?= y) = (Z.to_pos x ?= Z.to_pos y)%positive`````````````
136`  0 < x -> 0 < y -> (x <=? y) = (Z.to_pos x <=? Z.to_pos y)%positive`````````````
137`  0 < x -> 0 < y -> (x <? y) = (Z.to_pos x <? Z.to_pos y)%positive`````````````
138`  0 < x -> 0 < y -> (x =? y) = (Z.to_pos x =? Z.to_pos y)%positive`x = y``x = y`x = y`x <= y && y <= x`y = x`-1 <= x && -1 <= y && x <= -1 && y <= -1``x <= y && y <= x`y = x`-1 <= x && -1 <= y && x <= -1 && y <= -1``
``0 = (Z.to_pos y) && y = (Z.to_pos 0) && y <= 1 - x && 0 <= 0 + x && 1 <= y``y = (Z.to_pos y) && y = -1 && x = y + y && x = (Z.to_pos x)`1 = (Z.to_pos x) + (Z.to_pos y)`(Z.to_pos x) <= -1 && y + -1 = x && x + x = x && (Z.to_pos y) = x`(Z.to_pos x) + -1 = (Z.to_pos y)`x = y``(Z.to_pos x) <= -1 && y + -1 = x && x + x = x && (Z.to_pos y) = x`(Z.to_pos x) + -1 = (Z.to_pos y)`x = y``
``y = (Z.to_pos 0) && x = (Z.to_pos y) && 0 = 0 - x``y <= (Z.to_pos x) && y = (Z.to_pos 0) && x = y - 1 && y = -1 && x = (Z.to_pos y)`1 = (Z.to_pos x) - (Z.to_pos y)`-1 <= (Z.to_pos x) && y + -1 = x && (Z.to_pos y) = x && y <= -1`(Z.to_pos y) + -1 = (Z.to_pos x)`-1 <= x + -2 && (Z.to_pos x) = y && (Z.to_pos y) = -1 && x + y = -1``-1 <= (Z.to_pos x) && y + -1 = x && (Z.to_pos y) = x && y <= -1`(Z.to_pos y) + -1 = (Z.to_pos x)`-1 <= x + -2 && (Z.to_pos x) = y && (Z.to_pos y) = -1 && x + y = -1``
139`  0 < x -> 0 < y -> (x <=? y) = (Z.to_pos x <=? Z.to_pos y)%positive`````````````
140`  0 < x -> 0 < y -> (x <? y) = (Z.to_pos x <? Z.to_pos y)%positive`````````````
141`  0 < x -> 0 < y -> (x =? y) = (Z.to_pos x =? Z.to_pos y)%positive`x = y``x = y`x = y`x <= y && y <= x`y = x`-1 <= x && -1 <= y && x <= -1 && y <= -1``x <= y && y <= x`y = x`-1 <= x && -1 <= y && x <= -1 && y <= -1``
``0 = (Z.to_pos y) && y = (Z.to_pos 0) && y <= 1 - x && 0 <= 0 + x && 1 <= y``y = (Z.to_pos y) && y = -1 && x = y + y && x = (Z.to_pos x)`1 = (Z.to_pos x) + (Z.to_pos y)`(Z.to_pos x) <= -1 && y + -1 = x && x + x = x && (Z.to_pos y) = x`(Z.to_pos x) + -1 = (Z.to_pos y)`x = y``(Z.to_pos x) <= -1 && y + -1 = x && x + x = x && (Z.to_pos y) = x`(Z.to_pos x) + -1 = (Z.to_pos y)`x = y``
``y = (Z.to_pos 0) && x = (Z.to_pos y) && 0 = 0 - x``y <= (Z.to_pos x) && y = (Z.to_pos 0) && x = y - 1 && y = -1 && x = (Z.to_pos y)`1 = (Z.to_pos x) - (Z.to_pos y)`-1 <= (Z.to_pos x) && y + -1 = x && (Z.to_pos y) = x && y <= -1`(Z.to_pos y) + -1 = (Z.to_pos x)`-1 <= x + -2 && (Z.to_pos x) = y && (Z.to_pos y) = -1 && x + y = -1``-1 <= (Z.to_pos x) && y + -1 = x && (Z.to_pos y) = x && y <= -1`(Z.to_pos y) + -1 = (Z.to_pos x)`-1 <= x + -2 && (Z.to_pos x) = y && (Z.to_pos y) = -1 && x + y = -1``
142`  Z.to_pos (Z.sqrt x) = Pos.sqrt (Z.to_pos x)`````````````
143`  0 < x -> 0 < y -> Z.to_pos (Z.gcd x y) = Pos.gcd (Z.to_pos x) (Z.to_pos y)`````````````
144`  forall n m p : BinNums.Z, n + m + p = n + (m + p)`````````````
145`  forall n m : BinNums.Z, Z.succ (n + m) = n + Z.succ m`n = m && n = 0``n = 0``m + n <= -1 && (Z.succ 3) <= m && (Z.succ 3) <= n && -1 <= (Z.succ 3) && (not -1 = n)````m + n <= -1 && (Z.succ 3) <= m && (Z.succ 3) <= n && -1 <= (Z.succ 3) && (not -1 = n)````
``n = 0``m = (Z.succ m) && n <= m + 1 && n = (Z.succ 1) && m <= 0 && n = 1``m + n <= -1 && (Z.succ 3) <= n && -1 <= (Z.succ 3) && (not m = n) && m + m <= -1 && -1 <= m````m + n <= -1 && (Z.succ 3) <= n && -1 <= (Z.succ 3) && (not m = n) && m + m <= -1 && -1 <= m````
``(Z.succ n) = 1 && (Z.succ 0) = m && 1 = n && 0 = 0 - m``0 = (Z.succ n) && 0 = (Z.succ m) && n = 1 - m && m = -1 && n = (Z.succ 1)``m + m <= n && (Z.succ 3) <= m && -1 <= (Z.succ 3) && (not -1 = n) && n = m````m + m <= n && (Z.succ 3) <= m && -1 <= (Z.succ 3) && (not -1 = n) && n = m````
146`  forall n : BinNums.Z, n = n + 0`````````````
147`  forall n : BinNums.Z, n = Z.succ (Z.pred n)`n = (Z.succ n) && n = -2 && Z.pred = Z.succ``n = (Z.succ n) && n = 1 && Z.succ = Z.pred``````````
``n = (Z.succ n) && n = -1 && Z.pred = Z.succ``n = (Z.pred n) && n = 3 && Z.succ = Z.pred``````````
``n = (Z.succ n) && Z.pred = Z.succ``n = (Z.succ 0) && n = (Z.pred n) && Z.succ = Z.pred``````````
148`  forall n : BinNums.Z, n = Z.pred (Z.succ n)`n = (Z.pred n) && n = -2 && Z.succ = Z.pred``n = (Z.pred n) && n = 1 && Z.pred = Z.succ``````````
``n = (Z.pred n) && n = -1 && Z.succ = Z.pred``n = (Z.succ n) && n = 3 && Z.pred = Z.succ``````````
``n = (Z.pred n) && Z.succ = Z.pred``n = (Z.pred 0) && n = (Z.succ n) && Z.pred = Z.succ``````````
149`  forall n m : BinNums.Z, n = m -> Z.succ n = Z.succ m`````````````
150`  forall n : BinNums.Z, n = n - 0`````````````
151`  forall n : BinNums.Z, 0 = n - n`````````````
152`  forall n m : BinNums.Z, Z.succ (n - m) = Z.succ n - m`m = 0 && m = n``m = 0``m + n = n``m + n = -1 && -1 = n``m + n = n``m + n = -1 && -1 = n``
``m = 0``0 = (Z.succ 1) && n = -1 && m = n - 1 && n = (Z.succ 0) && m = (Z.succ n)``m + m <= n && (Z.succ -3) = -1 && (Z.succ m) = -1 && (Z.succ -2) = n && (Z.succ n) = n && n <= -1 + m && -1 <= m``n + n = m && m = n``m + m <= n && (Z.succ -3) = -1 && (Z.succ m) = -1 && (Z.succ -2) = n && (Z.succ n) = n && n <= -1 + m && -1 <= m``n + n = m && m = n``
``n = (Z.succ 1) && 0 = (Z.succ 0) && m = 0 + 1 && n = 0 + m``0 = (Z.succ 1) && m = n - 1 && m = (Z.succ 0) && n = -2 && m = (Z.succ n)``m + m <= n && -2 + n <= m && n + -3 = -1 && (Z.succ -2) = m && (Z.succ m) = m && (Z.succ n) = n``(Z.succ m) = n && m + m = m``m + m <= n && -2 + n <= m && n + -3 = -1 && (Z.succ -2) = m && (Z.succ m) = m && (Z.succ n) = n``(Z.succ m) = n && m + m = m``
153`  forall n m p : BinNums.Z, n = m + p -> p = n - m`````````````
154`  forall n m p q : BinNums.Z, n = m -> p = q -> n + p = m + q`````````````
155`  forall n m : BinNums.Z, n + (m - n) = m`````````````
156`  forall n m p : BinNums.Z, p + n - (p + m) = n - m`````````````
157`  forall n m p : BinNums.Z, n - m = p + n - (p + m)`````````````
158`  forall n m p : BinNums.Z, n + p - (m + p) = n - m`````````````
159`  forall n m : BinNums.Z, n = m -> n - m = 0`````````````
160`  forall n m : BinNums.Z, n - m = 0 -> n = m`````````````
161`  forall n : BinNums.Z, 0 = n * 0`````````````
162`  forall n m p : BinNums.Z, n * m * p = n * (m * p)`````````````
163`  forall n m : BinNums.Z, n * m = 0 -> n = 0 \/ m = 0`````````````
164`  forall n m : BinNums.Z, n <> 0 -> m * n = 0 -> m = 0`````````````
165`  forall n m : BinNums.Z, - (n * m) = - n * m`````````````
166`  forall n m : BinNums.Z, - (n * m) = n * - m`````````````
167`  forall n m p : BinNums.Z, p * (n - m) = p * n - p * m`````````````
168`  forall n m : BinNums.Z, n * m + n = n * Z.succ m`````````````
169`  forall n m : BinNums.Z, n * m + m = Z.succ n * m`````````````
170`  forall p q : positive, p = q -> BinNums.Zpos p = BinNums.Zpos q`````````````
171`  forall p q : positive, p = q <-> BinNums.Zpos p = BinNums.Zpos q`````````````
172`  2%nat = (1 + 1)%nat`````````````
173`  n + n = n * 2`````````````
174`  m = 0 -> m * n = 0`````````````
