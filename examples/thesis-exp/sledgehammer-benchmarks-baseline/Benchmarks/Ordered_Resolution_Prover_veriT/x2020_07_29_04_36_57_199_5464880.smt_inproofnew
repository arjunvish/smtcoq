(assume a0 (not (not (= da_d zero_d))))
(assume a1 (member_d da_d n_d))
(assume a2 (not (member_d zero_d n_d)))
(step t2 (cl (not (not (not (= da_d zero_d)))) (= da_d zero_d)) :rule not_not)
(step t3 (cl (= da_d zero_d)) :rule th_resolution :premises (t2 a0))
(step t6 (cl (not (= da_d zero_d)) (not (= n_d n_d)) (not (member_d da_d n_d)) (member_d zero_d n_d)) :rule eq_congruent_pred)
(step t7 (cl (= n_d n_d)) :rule eq_reflexive)
(step t8 (cl (not (= da_d zero_d)) (not (member_d da_d n_d)) (member_d zero_d n_d)) :rule th_resolution :premises (t6 t7))
(step t9 (cl) :rule resolution :premises (t8 t3 a1 a2))
