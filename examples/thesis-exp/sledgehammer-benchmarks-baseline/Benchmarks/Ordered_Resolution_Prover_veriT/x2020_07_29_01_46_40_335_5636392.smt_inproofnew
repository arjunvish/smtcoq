(assume a0 (=> (effective_redundancy_criterion_d gamma_d rf_d ri_d) (= (fair_clss_seq_d gamma_d rf_d ri_d ns_d) (less_eq_d (image_d concl_of_d (minus_d (inferences_from_d gamma_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))) (fun_app_da ri_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))))) (sup_d (sup_llist_d ns_d) (fun_app_d rf_d (sup_llist_d ns_d)))))))
(assume a1 (effective_redundancy_criterion_d gamma_d rf_d ri_d))
(assume a2 (not (= (fair_clss_seq_d gamma_d rf_d ri_d ns_d) (less_eq_d (image_d concl_of_d (minus_d (inferences_from_d gamma_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))) (fun_app_da ri_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))))) (sup_d (sup_llist_d ns_d) (fun_app_d rf_d (sup_llist_d ns_d)))))))
(step t4 (cl (not (= (fair_clss_seq_d gamma_d rf_d ri_d ns_d) (less_eq_d (image_d concl_of_d (minus_d (inferences_from_d gamma_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))) (fun_app_da ri_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))))) (sup_d (sup_llist_d ns_d) (fun_app_d rf_d (sup_llist_d ns_d)))))) (fair_clss_seq_d gamma_d rf_d ri_d ns_d) (not (less_eq_d (image_d concl_of_d (minus_d (inferences_from_d gamma_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))) (fun_app_da ri_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))))) (sup_d (sup_llist_d ns_d) (fun_app_d rf_d (sup_llist_d ns_d)))))) :rule equiv_pos1)
(step t5 (cl (not (= (fair_clss_seq_d gamma_d rf_d ri_d ns_d) (less_eq_d (image_d concl_of_d (minus_d (inferences_from_d gamma_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))) (fun_app_da ri_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))))) (sup_d (sup_llist_d ns_d) (fun_app_d rf_d (sup_llist_d ns_d)))))) (not (fair_clss_seq_d gamma_d rf_d ri_d ns_d)) (less_eq_d (image_d concl_of_d (minus_d (inferences_from_d gamma_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))) (fun_app_da ri_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))))) (sup_d (sup_llist_d ns_d) (fun_app_d rf_d (sup_llist_d ns_d))))) :rule equiv_pos2)
(step t6 (cl (not (effective_redundancy_criterion_d gamma_d rf_d ri_d)) (= (fair_clss_seq_d gamma_d rf_d ri_d ns_d) (less_eq_d (image_d concl_of_d (minus_d (inferences_from_d gamma_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))) (fun_app_da ri_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))))) (sup_d (sup_llist_d ns_d) (fun_app_d rf_d (sup_llist_d ns_d)))))) :rule implies :premises (a0))
(step t7 (cl (fair_clss_seq_d gamma_d rf_d ri_d ns_d) (less_eq_d (image_d concl_of_d (minus_d (inferences_from_d gamma_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))) (fun_app_da ri_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))))) (sup_d (sup_llist_d ns_d) (fun_app_d rf_d (sup_llist_d ns_d))))) :rule not_equiv1 :premises (a2))
(step t8 (cl (not (fair_clss_seq_d gamma_d rf_d ri_d ns_d)) (not (less_eq_d (image_d concl_of_d (minus_d (inferences_from_d gamma_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))) (fun_app_da ri_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))))) (sup_d (sup_llist_d ns_d) (fun_app_d rf_d (sup_llist_d ns_d)))))) :rule not_equiv2 :premises (a2))
(step t9 (cl (= (fair_clss_seq_d gamma_d rf_d ri_d ns_d) (less_eq_d (image_d concl_of_d (minus_d (inferences_from_d gamma_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))) (fun_app_da ri_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))))) (sup_d (sup_llist_d ns_d) (fun_app_d rf_d (sup_llist_d ns_d)))))) :rule resolution :premises (t6 a1))
(step t10 (cl (less_eq_d (image_d concl_of_d (minus_d (inferences_from_d gamma_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))) (fun_app_da ri_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))))) (sup_d (sup_llist_d ns_d) (fun_app_d rf_d (sup_llist_d ns_d))))) :rule resolution :premises (t5 t7 t9))
(step t11 (cl (not (fair_clss_seq_d gamma_d rf_d ri_d ns_d))) :rule resolution :premises (t8 t10))
(step t12 (cl) :rule resolution :premises (t4 t10 t9 t11))
