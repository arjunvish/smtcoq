(check
 ;; Declarations
(% A_multiset_list_d sort
(% S_list_d sort
(% S_d sort
(% A_s_a_fun_fun_d sort
(% Nat_d sort
(% A_literal_multiset_d sort
(% A_a_literal_fun_d sort
(% A_multiset_d sort
(% A_literal_multiset_list_d sort
(% aAs_d (term A_multiset_list_d)
(% nth_db (term (arrow A_multiset_list_d (arrow Nat_d A_multiset_d)))
(% eta_s0_d (term S_list_d)
(% nth_da (term (arrow S_list_d (arrow Nat_d S_d)))
(% aA0_d (term A_multiset_d)
(% poss_AA0_d (term A_literal_multiset_d)
(% pos_d (term A_a_literal_fun_d)
(% image_mset_d (term (arrow A_a_literal_fun_d (arrow A_multiset_d A_literal_multiset_d)))
(% cAs0_d (term A_literal_multiset_list_d)
(% subseteq_mset_d (term (arrow A_literal_multiset_d (arrow A_literal_multiset_d Bool)))
(% nth_d (term (arrow A_literal_multiset_list_d (arrow Nat_d A_literal_multiset_d)))
(% subst_cls_d (term (arrow A_s_a_fun_fun_d (arrow A_literal_multiset_d (arrow S_d A_literal_multiset_d))))
(% i_d (term Nat_d)
(% subst_atm_d (term A_s_a_fun_fun_d)
(% A3 (th_holds true)
(% A2 (th_holds (= A_literal_multiset_d (apply _ _ (apply _ _ image_mset_d pos_d)aA0_d) poss_AA0_d))
(% A1 (th_holds (and (= A_literal_multiset_d (apply _ _ (apply _ _ (apply _ _ subst_cls_d subst_atm_d)poss_AA0_d)(apply _ _ (apply _ _ nth_da eta_s0_d)i_d)) (apply _ _ (apply _ _ image_mset_d pos_d)(apply _ _ (apply _ _ nth_db aAs_d)i_d))) (p_app (apply _ _ (apply _ _ subseteq_mset_d poss_AA0_d)(apply _ _ (apply _ _ nth_d cAs0_d)i_d)))))
(% A0 (th_holds (not (p_app (apply _ _ (apply _ _ subseteq_mset_d (apply _ _ (apply _ _ image_mset_d pos_d)aA0_d))(apply _ _ (apply _ _ nth_d cAs0_d)i_d)))))
(: (holds cln)

 ;; Printing deferred declarations 


;; BV const letification



 ;; Printing the global let map
(@ let1 pos_d
(@ let2 aA0_d
(@ let3 (apply _ _ (apply _ _ image_mset_d let1)let2)
(@ let4 cAs0_d
(@ let5 i_d
(@ let6 (apply _ _ (apply _ _ nth_d let4)let5)
(@ let7 (p_app (apply _ _ (apply _ _ subseteq_mset_d let3)let6))
(@ let8 subst_atm_d
(@ let9 poss_AA0_d
(@ let10 eta_s0_d
(@ let11 (apply _ _ (apply _ _ nth_da let10)let5)
(@ let12 (apply _ _ (apply _ _ (apply _ _ subst_cls_d let8)let9)let11)
(@ let13 aAs_d
(@ let14 (apply _ _ (apply _ _ nth_db let13)let5)
(@ let15 (apply _ _ (apply _ _ image_mset_d let1)let14)
(@ let16 (= A_literal_multiset_d let12 let15)
(@ let17 (p_app (apply _ _ (apply _ _ subseteq_mset_d let9)let6))
(@ let18 (= A_literal_multiset_d let9 let3)

 ;; Printing aliasing declarations 


 ;; Rewrites for Lemmas 

 ;; In the preprocessor we trust 
(th_let_pf _ (trust_f (iff (= A_literal_multiset_d let3 let9) (= A_literal_multiset_d let9 let3)))(\ .PA312

;; Printing mapping from preprocessed assertions into atoms 
(decl_atom let7 (\ .v2 (\ .a2
(decl_atom let16 (\ .v3 (\ .a3
(decl_atom let17 (\ .v4 (\ .a4
(decl_atom let18 (\ .v5 (\ .a5
(satlem _ _ (ast _ _ _ .a2 (\ .l5 (clausify_false (contra _ .l5 A0)))) (\ .pb4
(satlem _ _ (asf _ _ _ .a4 (\ .l8 (clausify_false (contra _ (and_elim_2 _ _ A1) .l8)))) (\ .pb6
(satlem _ _ (asf _ _ _ .a5 (\ .l10 (clausify_false (contra _ (or_elim_1 _ _ (not_not_intro _ A2) (iff_elim_1 _ _ .PA312)) .l10)))) (\ .pb7
 ;; Theory Lemmas 

;; BB atom mapping


;; Bit-blasting definitional clauses 


 ;; Bit-blasting learned clauses 

(satlem _ _ (ast _ _ _ .a5 (\ .l11 (ast _ _ _ .a4 (\ .l9 (asf _ _ _ .a2 (\ .l4  ;; UF Theory Lemma 
;;(not (= poss_AA0_d (image_mset_d pos_d aA0_d))) (not (subseteq_mset_d poss_AA0_d (nth_d cAs0_d i_d))) (subseteq_mset_d (image_mset_d pos_d aA0_d) (nth_d cAs0_d i_d)) 
(clausify_false (contra _ (trans _ _ _ _ (symm _ _ _ (trans _ _ _ _ (symm _ _ _ (cong _ _ _ _ _ _ (cong _ _ _ _ _ _ (refl _ subseteq_mset_d) .l11) (refl _ let6))) (pred_eq_t _ .l9))) (pred_eq_f _ .l4)) t_t_neq_f))
))))))( \ .lemc8
(satlem_simplify _ _ _ (R _ _ (Q _ _ (Q _ _ .lemc8 .pb7 .v5) .pb6 .v4) .pb4 .v2) (\ empty empty)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
;;
