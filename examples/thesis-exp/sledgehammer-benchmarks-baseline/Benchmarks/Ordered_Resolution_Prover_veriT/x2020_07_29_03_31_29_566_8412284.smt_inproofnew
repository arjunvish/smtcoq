(assume a0 (not (= (image_mset_d neg_d (mset_d as_d)) (subst_cls_d subst_atm_d (fun_app_d s_d dA0_d) eta_0_d))))
(assume a1 (= (subst_cls_d subst_atm_d (fun_app_d s_d dA0_d) eta_0_d) (s_M_d subst_atm_d s_d m_d da_d)))
(assume a2 (= da_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))))
(assume a3 (= (image_mset_d neg_d (mset_d as_d)) (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d))))))
(step t5 (cl (not (= (image_mset_d neg_d (mset_d as_d)) (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))))) (not (= (s_M_d subst_atm_d s_d m_d da_d) (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))))) (not (= (subst_cls_d subst_atm_d (fun_app_d s_d dA0_d) eta_0_d) (s_M_d subst_atm_d s_d m_d da_d))) (= (image_mset_d neg_d (mset_d as_d)) (subst_cls_d subst_atm_d (fun_app_d s_d dA0_d) eta_0_d))) :rule eq_transitive)
(step t6 (cl (not (= subst_atm_d subst_atm_d)) (not (= s_d s_d)) (not (= m_d m_d)) (not (= da_d (plus_d d_d (image_mset_d neg_d (mset_d as_d))))) (= (s_M_d subst_atm_d s_d m_d da_d) (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))))) :rule eq_congruent)
(step t7 (cl (= subst_atm_d subst_atm_d)) :rule eq_reflexive)
(step t8 (cl (not (= s_d s_d)) (not (= m_d m_d)) (not (= da_d (plus_d d_d (image_mset_d neg_d (mset_d as_d))))) (= (s_M_d subst_atm_d s_d m_d da_d) (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))))) :rule th_resolution :premises (t6 t7))
(step t9 (cl (= s_d s_d)) :rule eq_reflexive)
(step t10 (cl (not (= m_d m_d)) (not (= da_d (plus_d d_d (image_mset_d neg_d (mset_d as_d))))) (= (s_M_d subst_atm_d s_d m_d da_d) (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))))) :rule th_resolution :premises (t8 t9))
(step t11 (cl (= m_d m_d)) :rule eq_reflexive)
(step t12 (cl (not (= da_d (plus_d d_d (image_mset_d neg_d (mset_d as_d))))) (= (s_M_d subst_atm_d s_d m_d da_d) (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))))) :rule th_resolution :premises (t10 t11))
(step t13 (cl (not (= (image_mset_d neg_d (mset_d as_d)) (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))))) (not (= (subst_cls_d subst_atm_d (fun_app_d s_d dA0_d) eta_0_d) (s_M_d subst_atm_d s_d m_d da_d))) (= (image_mset_d neg_d (mset_d as_d)) (subst_cls_d subst_atm_d (fun_app_d s_d dA0_d) eta_0_d)) (not (= da_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))))) :rule th_resolution :premises (t5 t12))
(step t14 (cl) :rule resolution :premises (t13 a0 a1 a2 a3))
