(check
 ;; Declarations
(% A_literal_multiset_a_literal_multiset_fun_d sort
(% A_literal_multiset_list_d sort
(% A_literal_multiset_set_d sort
(% A_set_d sort
(% A_literal_multiset_a_set_fun_d sort
(% A_literal_multiset_d sort
(% A_set_set_d sort
(% s_d (term A_literal_multiset_a_literal_multiset_fun_d)
(% ground_resolution_with_selection_d (term (arrow A_literal_multiset_a_literal_multiset_fun_d Bool))
(% e_d (term A_literal_multiset_d)
(% image_d (term (arrow A_literal_multiset_a_set_fun_d (arrow A_literal_multiset_set_d A_set_set_d)))
(% atms_of_d (term A_literal_multiset_a_set_fun_d)
(% fun_app_d (term (arrow A_literal_multiset_a_set_fun_d (arrow A_literal_multiset_d A_set_d)))
(% cAs_d (term A_literal_multiset_list_d)
(% less_eq_d (term (arrow A_set_d (arrow A_set_d Bool)))
(% set_d (term (arrow A_literal_multiset_list_d A_literal_multiset_set_d))
(% sup_d (term (arrow A_set_d (arrow A_set_d A_set_d)))
(% sup_da (term (arrow A_set_set_d A_set_d))
(% da_d (term A_literal_multiset_d)
(% A3 (th_holds true)
(% A2 (th_holds (p_app (apply _ _ ground_resolution_with_selection_d s_d)))
(% A1 (th_holds (impl (p_app (apply _ _ ground_resolution_with_selection_d s_d)) (p_app (apply _ _ (apply _ _ less_eq_d (apply _ _ (apply _ _ fun_app_d atms_of_d)e_d))(apply _ _ (apply _ _ sup_d (apply _ _ sup_da (apply _ _ (apply _ _ image_d atms_of_d)(apply _ _ set_d cAs_d))))(apply _ _ (apply _ _ fun_app_d atms_of_d)da_d))))))
(% A0 (th_holds (not (p_app (apply _ _ (apply _ _ less_eq_d (apply _ _ (apply _ _ fun_app_d atms_of_d)e_d))(apply _ _ (apply _ _ sup_d (apply _ _ sup_da (apply _ _ (apply _ _ image_d atms_of_d)(apply _ _ set_d cAs_d))))(apply _ _ (apply _ _ fun_app_d atms_of_d)da_d))))))
(: (holds cln)

 ;; Printing deferred declarations 


;; BV const letification



 ;; Printing the global let map
(@ let1 atms_of_d
(@ let2 e_d
(@ let3 (apply _ _ (apply _ _ fun_app_d let1)let2)
(@ let4 cAs_d
(@ let5 (apply _ _ set_d let4)
(@ let6 (apply _ _ (apply _ _ image_d let1)let5)
(@ let7 (apply _ _ sup_da let6)
(@ let8 da_d
(@ let9 (apply _ _ (apply _ _ fun_app_d let1)let8)
(@ let10 (apply _ _ (apply _ _ sup_d let7)let9)
(@ let11 (p_app (apply _ _ (apply _ _ less_eq_d let3)let10))
(@ let12 s_d
(@ let13 (p_app (apply _ _ ground_resolution_with_selection_d let12))

 ;; Printing aliasing declarations 


 ;; Rewrites for Lemmas 

 ;; In the preprocessor we trust 

;; Printing mapping from preprocessed assertions into atoms 
(decl_atom let11 (\ .v2 (\ .a2
(decl_atom let13 (\ .v3 (\ .a3
(satlem _ _ (ast _ _ _ .a2 (\ .l5 (clausify_false (contra _ .l5 A0)))) (\ .pb4
(satlem _ _ (ast _ _ _ .a3 (\ .l7 (asf _ _ _ .a2 (\ .l4 (clausify_false (contra _ (or_elim_1 _ _ (not_not_intro _ .l7) (impl_elim _ _ A1)) .l4)))))) (\ .pb5
(satlem _ _ (asf _ _ _ .a3 (\ .l6 (clausify_false (contra _ A2 .l6)))) (\ .pb6
 ;; Theory Lemmas 

;; BB atom mapping


;; Bit-blasting definitional clauses 


 ;; Bit-blasting learned clauses 

(satlem_simplify _ _ _ (R _ _ .pb5 .pb4 .v2) (\ .cl7
(satlem_simplify _ _ _ (R _ _ .pb6 .cl7 .v3) (\ empty empty))))))))))))))))))))))))))))))))))))))))))))))))))))))
;;
