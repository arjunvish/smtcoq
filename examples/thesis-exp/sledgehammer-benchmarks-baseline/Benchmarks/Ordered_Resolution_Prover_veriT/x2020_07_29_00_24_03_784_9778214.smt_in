; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort Nat_d 0)
(declare-sort A_s_a_fun_fun_d 0)
(declare-sort A_inference_set_d 0)
(declare-sort A_a_bool_fun_fun_d 0)
(declare-sort A_literal_multiset_d 0)
(declare-sort A_literal_multiset_set_d 0)
(declare-sort A_set_set_s_option_fun_d 0)
(declare-sort A_inference_a_literal_multiset_fun_d 0)
(declare-sort A_literal_multiset_list_s_list_fun_d 0)
(declare-sort A_literal_multiset_a_literal_multiset_fun_d 0)
(declare-sort A_literal_multiset_set_a_literal_multiset_set_a_literal_multiset_set_prod_prod_d 0)
(declare-sort A_literal_multiset_set_a_literal_multiset_set_a_literal_multiset_set_prod_prod_llist_d 0)
(declare-fun c_d () A_literal_multiset_d)
(declare-fun e_d () A_literal_multiset_d)
(declare-fun j_d () Nat_d)
(declare-fun s_d () A_literal_multiset_a_literal_multiset_fun_d)
(declare-fun mgu_d () A_set_set_s_option_fun_d)
(declare-fun one_d () Nat_d)
(declare-fun sts_d () A_literal_multiset_set_a_literal_multiset_set_a_literal_multiset_set_prod_prod_llist_d)
(declare-fun lnth_d (A_literal_multiset_set_a_literal_multiset_set_a_literal_multiset_set_prod_prod_llist_d Nat_d) A_literal_multiset_set_a_literal_multiset_set_a_literal_multiset_set_prod_prod_d)
(declare-fun image_d (A_inference_a_literal_multiset_fun_d A_inference_set_d) A_literal_multiset_set_d)
(declare-fun minus_d (Nat_d Nat_d) Nat_d)
(declare-fun member_d (A_literal_multiset_d A_literal_multiset_set_d) Bool)
(declare-fun concl_of_d () A_inference_a_literal_multiset_fun_d)
(declare-fun less_atm_d () A_a_bool_fun_fun_d)
(declare-fun subst_atm_d () A_s_a_fun_fun_d)
(declare-fun n_of_state_d (A_literal_multiset_set_a_literal_multiset_set_a_literal_multiset_set_prod_prod_d) A_literal_multiset_set_d)
(declare-fun q_of_state_d (A_literal_multiset_set_a_literal_multiset_set_a_literal_multiset_set_prod_prod_d) A_literal_multiset_set_d)
(declare-fun ord_FO_Gamma_d (A_s_a_fun_fun_d A_literal_multiset_list_s_list_fun_d A_set_set_s_option_fun_d A_a_bool_fun_fun_d A_literal_multiset_a_literal_multiset_fun_d) A_inference_set_d)
(declare-fun renamings_apart_d () A_literal_multiset_list_s_list_fun_d)
(declare-fun inferences_between_d (A_inference_set_d A_literal_multiset_set_d A_literal_multiset_d) A_inference_set_d)
(assert (! (not (member_d e_d (n_of_state_d (lnth_d sts_d j_d)))) :named a0))
(assert (! (= (n_of_state_d (lnth_d sts_d j_d)) (image_d concl_of_d (inferences_between_d (ord_FO_Gamma_d subst_atm_d renamings_apart_d mgu_d less_atm_d s_d) (q_of_state_d (lnth_d sts_d (minus_d j_d one_d))) c_d))) :named a1))
(assert (! (member_d e_d (image_d concl_of_d (inferences_between_d (ord_FO_Gamma_d subst_atm_d renamings_apart_d mgu_d less_atm_d s_d) (q_of_state_d (lnth_d sts_d (minus_d j_d one_d))) c_d))) :named a2))
(check-sat)
;;;;(get-proof)
