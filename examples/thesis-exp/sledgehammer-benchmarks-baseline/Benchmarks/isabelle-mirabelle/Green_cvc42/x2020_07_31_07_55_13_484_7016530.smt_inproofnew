(assume a0 (not (= (islimpt_d x_d (minus_d s_d t_d)) (islimpt_d x_d s_d))))
(assume a1 (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))
(assume a2 (= (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))) (islimpt_d x_d s_d)))
(step t4 (cl (islimpt_d x_d (minus_d s_d t_d)) (islimpt_d x_d s_d)) :rule not_equiv1 :premises (a0))
(step t5 (cl (not (islimpt_d x_d (minus_d s_d t_d))) (not (islimpt_d x_d s_d))) :rule not_equiv2 :premises (a0))
(step t6 (cl (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d s_d)) :rule equiv1 :premises (a2))
(step t7 (cl (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d s_d))) :rule equiv2 :premises (a2))
(step t8 (cl (not (= x_d x_d)) (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d t_d))) :rule eq_congruent_pred)
(step t9 (cl (= x_d x_d)) :rule eq_reflexive)
(step t10 (cl (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d t_d))) :rule th_resolution :premises (t8 t9))
(step t11 (cl (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d t_d))) :rule resolution :premises (t10 a1))
(step t12 (cl (islimpt_d x_d (minus_d s_d t_d))) :rule resolution :premises (t11 t7 t4))
(step t13 (cl (not (islimpt_d x_d s_d))) :rule resolution :premises (t5 t12))
(step t14 (cl (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule resolution :premises (t6 t13))
(step t15 (cl (not (= x_d x_d)) (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d t_d))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule eq_congruent_pred)
(step t16 (cl (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d t_d))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule th_resolution :premises (t15 t9))
(step t17 (cl) :rule resolution :premises (t16 t12 a1 t14))
