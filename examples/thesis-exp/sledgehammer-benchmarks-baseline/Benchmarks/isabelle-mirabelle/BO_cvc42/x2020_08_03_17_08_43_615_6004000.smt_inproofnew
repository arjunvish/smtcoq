(assume a0 (not (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d t2_d sa_d)))
(assume a1 (= t2_d (arg_d ta_d)))
(assume a2 (or (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d (arg_d ta_d) sa_d) (= sa_d (arg_d ta_d))))
(assume a3 (not (= t2_d sa_d)))
(step t5 (cl (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d (arg_d ta_d) sa_d) (= sa_d (arg_d ta_d))) :rule or :premises (a2))
(step t6 (cl (not (= ground_heads_var_d ground_heads_var_d)) (not (= gt_sym_d gt_sym_d)) (not (= delta_d delta_d)) (not (= extf_d extf_d)) (not (= arity_sym_d arity_sym_d)) (not (= wt_sym_d wt_sym_d)) (not (= t2_d (arg_d ta_d))) (not (= sa_d sa_d)) (not (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d (arg_d ta_d) sa_d)) (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d t2_d sa_d)) :rule eq_congruent_pred)
(step t7 (cl (= ground_heads_var_d ground_heads_var_d)) :rule eq_reflexive)
(step t8 (cl (not (= gt_sym_d gt_sym_d)) (not (= delta_d delta_d)) (not (= extf_d extf_d)) (not (= arity_sym_d arity_sym_d)) (not (= wt_sym_d wt_sym_d)) (not (= t2_d (arg_d ta_d))) (not (= sa_d sa_d)) (not (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d (arg_d ta_d) sa_d)) (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d t2_d sa_d)) :rule th_resolution :premises (t6 t7))
(step t9 (cl (= gt_sym_d gt_sym_d)) :rule eq_reflexive)
(step t10 (cl (not (= delta_d delta_d)) (not (= extf_d extf_d)) (not (= arity_sym_d arity_sym_d)) (not (= wt_sym_d wt_sym_d)) (not (= t2_d (arg_d ta_d))) (not (= sa_d sa_d)) (not (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d (arg_d ta_d) sa_d)) (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d t2_d sa_d)) :rule th_resolution :premises (t8 t9))
(step t11 (cl (= delta_d delta_d)) :rule eq_reflexive)
(step t12 (cl (not (= extf_d extf_d)) (not (= arity_sym_d arity_sym_d)) (not (= wt_sym_d wt_sym_d)) (not (= t2_d (arg_d ta_d))) (not (= sa_d sa_d)) (not (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d (arg_d ta_d) sa_d)) (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d t2_d sa_d)) :rule th_resolution :premises (t10 t11))
(step t13 (cl (= extf_d extf_d)) :rule eq_reflexive)
(step t14 (cl (not (= arity_sym_d arity_sym_d)) (not (= wt_sym_d wt_sym_d)) (not (= t2_d (arg_d ta_d))) (not (= sa_d sa_d)) (not (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d (arg_d ta_d) sa_d)) (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d t2_d sa_d)) :rule th_resolution :premises (t12 t13))
(step t15 (cl (= arity_sym_d arity_sym_d)) :rule eq_reflexive)
(step t16 (cl (not (= wt_sym_d wt_sym_d)) (not (= t2_d (arg_d ta_d))) (not (= sa_d sa_d)) (not (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d (arg_d ta_d) sa_d)) (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d t2_d sa_d)) :rule th_resolution :premises (t14 t15))
(step t17 (cl (= wt_sym_d wt_sym_d)) :rule eq_reflexive)
(step t18 (cl (not (= t2_d (arg_d ta_d))) (not (= sa_d sa_d)) (not (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d (arg_d ta_d) sa_d)) (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d t2_d sa_d)) :rule th_resolution :premises (t16 t17))
(step t19 (cl (= sa_d sa_d)) :rule eq_reflexive)
(step t20 (cl (not (= t2_d (arg_d ta_d))) (not (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d (arg_d ta_d) sa_d)) (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d t2_d sa_d)) :rule th_resolution :premises (t18 t19))
(step t21 (cl (not (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d (arg_d ta_d) sa_d))) :rule resolution :premises (t20 a0 a1))
(step t22 (cl (= sa_d (arg_d ta_d))) :rule resolution :premises (t5 t21))
(step t23 (cl (not (= t2_d (arg_d ta_d))) (not (= sa_d (arg_d ta_d))) (= t2_d sa_d)) :rule eq_transitive)
(step t24 (cl) :rule resolution :premises (t23 a1 t22 a3))
