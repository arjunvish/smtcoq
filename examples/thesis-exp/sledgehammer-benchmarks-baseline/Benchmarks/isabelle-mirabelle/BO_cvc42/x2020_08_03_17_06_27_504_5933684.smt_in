; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=20
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort Nat_d 0)
(declare-sort S_v_tm_d 0)
(declare-sort S_nat_fun_d 0)
(declare-sort S_enat_fun_d 0)
(declare-sort V_s_set_fun_d 0)
(declare-sort V_s_v_tm_fun_d 0)
(declare-sort S_s_bool_fun_fun_d 0)
(declare-sort S_s_v_tm_s_v_tm_bool_fun_fun_s_v_tm_list_s_v_tm_list_bool_fun_fun_fun_fun_d 0)
(declare-fun gt_d (V_s_set_fun_d S_s_bool_fun_fun_d Nat_d S_s_v_tm_s_v_tm_bool_fun_fun_s_v_tm_list_s_v_tm_list_bool_fun_fun_fun_fun_d S_enat_fun_d S_nat_fun_d S_v_tm_d S_v_tm_d) Bool)
(declare-fun sa_d () S_v_tm_d)
(declare-fun ta_d () S_v_tm_d)
(declare-fun rho_d () V_s_v_tm_fun_d)
(declare-fun extf_d () S_s_v_tm_s_v_tm_bool_fun_fun_s_v_tm_list_s_v_tm_list_bool_fun_fun_fun_fun_d)
(declare-fun delta_d () Nat_d)
(declare-fun subst_d (V_s_v_tm_fun_d S_v_tm_d) S_v_tm_d)
(declare-fun gt_sym_d () S_s_bool_fun_fun_d)
(declare-fun wt_sym_d () S_nat_fun_d)
(declare-fun arity_sym_d () S_enat_fun_d)
(declare-fun ground_heads_var_d () V_s_set_fun_d)
(assert (! false :named a0))
(assert (! (not (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d (subst_d rho_d ta_d) (subst_d rho_d sa_d))) :named a1))
(check-sat)
;;;;(get-proof)
