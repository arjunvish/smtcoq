(assume a0 (not (less_d zero_d delta_d)))
(assume a1 (= delta_d epsilon_d))
(assume a2 (less_d zero_d epsilon_d))
(step t4 (cl (not (= zero_d zero_d)) (not (= delta_d epsilon_d)) (not (less_d zero_d epsilon_d)) (less_d zero_d delta_d)) :rule eq_congruent_pred)
(step t5 (cl (= zero_d zero_d)) :rule eq_reflexive)
(step t6 (cl (not (= delta_d epsilon_d)) (not (less_d zero_d epsilon_d)) (less_d zero_d delta_d)) :rule th_resolution :premises (t4 t5))
(step t7 (cl) :rule resolution :premises (t6 a0 a1 a2))
