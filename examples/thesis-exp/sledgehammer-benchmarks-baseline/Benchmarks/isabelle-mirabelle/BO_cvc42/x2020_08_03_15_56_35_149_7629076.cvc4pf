(check
 ;; Declarations
(% V_s_v_tm_fun_d sort
(% S_v_tm_d sort
(% S_nat_hmultiset_fun_fun_d sort
(% S_hmultiset_fun_d sort
(% S_enat_fun_d sort
(% V_s_set_fun_d sort
(% S_s_v_tm_s_v_tm_bool_fun_fun_s_v_tm_list_s_v_tm_list_bool_fun_fun_fun_fun_d sort
(% S_s_bool_fun_fun_d sort
(% Nat_d sort
(% t2_d (term S_v_tm_d)
(% sa_d (term S_v_tm_d)
(% ta_d (term S_v_tm_d)
(% delta_d (term Nat_d)
(% gt_sym_d (term S_s_bool_fun_fun_d)
(% ground_heads_var_d (term V_s_set_fun_d)
(% gt_d (term (arrow V_s_set_fun_d (arrow S_s_bool_fun_fun_d (arrow Nat_d (arrow S_s_v_tm_s_v_tm_bool_fun_fun_s_v_tm_list_s_v_tm_list_bool_fun_fun_fun_fun_d (arrow S_enat_fun_d (arrow S_hmultiset_fun_d (arrow S_nat_hmultiset_fun_fun_d (arrow S_v_tm_d (arrow S_v_tm_d Bool))))))))))
(% coef_sym_d (term S_nat_hmultiset_fun_fun_d)
(% extf_d (term S_s_v_tm_s_v_tm_bool_fun_fun_s_v_tm_list_s_v_tm_list_bool_fun_fun_fun_fun_d)
(% arity_sym_d (term S_enat_fun_d)
(% wt_sym_d (term S_hmultiset_fun_d)
(% subst_d (term (arrow V_s_v_tm_fun_d (arrow S_v_tm_d S_v_tm_d)))
(% rho_d (term V_s_v_tm_fun_d)
(% A3 (th_holds true)
(% A2 (th_holds (p_app (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ gt_d ground_heads_var_d)gt_sym_d)delta_d)extf_d)arity_sym_d)wt_sym_d)coef_sym_d)(apply _ _ (apply _ _ subst_d rho_d)ta_d))(apply _ _ (apply _ _ subst_d rho_d)t2_d))))
(% A1 (th_holds (= S_v_tm_d t2_d sa_d))
(% A0 (th_holds (not (p_app (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ gt_d ground_heads_var_d)gt_sym_d)delta_d)extf_d)arity_sym_d)wt_sym_d)coef_sym_d)(apply _ _ (apply _ _ subst_d rho_d)ta_d))(apply _ _ (apply _ _ subst_d rho_d)sa_d)))))
(: (holds cln)

 ;; Printing deferred declarations 


;; BV const letification



 ;; Printing the global let map
(@ let1 ground_heads_var_d
(@ let2 gt_sym_d
(@ let3 delta_d
(@ let4 extf_d
(@ let5 arity_sym_d
(@ let6 wt_sym_d
(@ let7 coef_sym_d
(@ let8 rho_d
(@ let9 ta_d
(@ let10 (apply _ _ (apply _ _ subst_d let8)let9)
(@ let11 sa_d
(@ let12 (apply _ _ (apply _ _ subst_d let8)let11)
(@ let13 (p_app (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ gt_d let1)let2)let3)let4)let5)let6)let7)let10)let12))
(@ let14 t2_d
(@ let15 (apply _ _ (apply _ _ subst_d let8)let14)
(@ let16 (p_app (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ (apply _ _ gt_d let1)let2)let3)let4)let5)let6)let7)let10)let15))
(@ let17 (= S_v_tm_d let11 let14)

 ;; Printing aliasing declarations 


 ;; Rewrites for Lemmas 

 ;; In the preprocessor we trust 
(th_let_pf _ (trust_f (iff (= S_v_tm_d let14 let11) (= S_v_tm_d let11 let14)))(\ .PA302

;; Printing mapping from preprocessed assertions into atoms 
(decl_atom let13 (\ .v2 (\ .a2
(decl_atom let16 (\ .v4 (\ .a4
(decl_atom let17 (\ .v3 (\ .a3
(satlem _ _ (ast _ _ _ .a2 (\ .l5 (clausify_false (contra _ .l5 A0)))) (\ .pb4
(satlem _ _ (asf _ _ _ .a3 (\ .l6 (clausify_false (contra _ (or_elim_1 _ _ (not_not_intro _ A1) (iff_elim_1 _ _ .PA302)) .l6)))) (\ .pb5
(satlem _ _ (asf _ _ _ .a4 (\ .l8 (clausify_false (contra _ A2 .l8)))) (\ .pb6
 ;; Theory Lemmas 

;; BB atom mapping


;; Bit-blasting definitional clauses 


 ;; Bit-blasting learned clauses 

(satlem _ _ (ast _ _ _ .a4 (\ .l9 (ast _ _ _ .a3 (\ .l7 (asf _ _ _ .a2 (\ .l4  ;; UF Theory Lemma 
;;(not (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d coef_sym_d (subst_d rho_d ta_d) (subst_d rho_d t2_d))) (not (= sa_d t2_d)) (gt_d ground_heads_var_d gt_sym_d delta_d extf_d arity_sym_d wt_sym_d coef_sym_d (subst_d rho_d ta_d) (subst_d rho_d sa_d)) 
(clausify_false (contra _ (trans _ _ _ _ (symm _ _ _ (trans _ _ _ _ (symm _ _ _ (cong _ _ _ _ _ _ (cong _ _ _ _ _ _ (cong _ _ _ _ _ _ (cong _ _ _ _ _ _ (cong _ _ _ _ _ _ (cong _ _ _ _ _ _ (cong _ _ _ _ _ _ (cong _ _ _ _ _ _ (cong _ _ _ _ _ _ (refl _ gt_d) (refl _ let1)) (refl _ let2)) (refl _ let3)) (refl _ let4)) (refl _ let5)) (refl _ let6)) (refl _ let7)) (refl _ let10)) (cong _ _ _ _ _ _ (cong _ _ _ _ _ _ (refl _ subst_d) (refl _ let8)) (symm _ _ _ .l7)))) (pred_eq_t _ .l9))) (pred_eq_f _ .l4)) t_t_neq_f))
))))))( \ .lemc7
(satlem_simplify _ _ _ (R _ _ (Q _ _ (Q _ _ .lemc7 .pb6 .v4) .pb5 .v3) .pb4 .v2) (\ empty empty))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
;;
