; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A_set_d 0)
(declare-sort Nat_set_d 0)
(declare-sort A_nat_fun_d 0)
(declare-fun f_d () A_nat_fun_d)
(declare-fun s_d () A_set_d)
(declare-fun image_d (A_nat_fun_d A_set_d) Nat_set_d)
(declare-fun inj_on_d (A_nat_fun_d A_set_d) Bool)
(assert (! (not (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d)))) :named a0))
(assert (! (inj_on_d f_d s_d) :named a1))
(check-sat)
;;;;;;(get-proof)
