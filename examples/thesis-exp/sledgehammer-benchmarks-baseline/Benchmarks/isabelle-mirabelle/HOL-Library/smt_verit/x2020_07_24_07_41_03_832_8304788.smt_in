; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A_d 0)
(declare-sort A_set_d 0)
(declare-sort A_list_d 0)
(declare-sort A_unit_rbt_d 0)
(declare-fun y_d () A_d)
(declare-fun set_d (A_list_d) A_set_d)
(declare-fun keys_d (A_unit_rbt_d) A_list_d)
(declare-fun empty_d () A_unit_rbt_d)
(declare-fun member_d (A_d A_set_d) Bool)
(declare-fun less_eq_d (A_d A_d) Bool)
(declare-fun rbt_sorted_d (A_unit_rbt_d) Bool)
(declare-fun rbt_max_opt_d (A_unit_rbt_d) A_d)
(assert (! (not (less_eq_d y_d (rbt_max_opt_d empty_d))) :named a0))
(assert (! (not (= empty_d empty_d)) :named a1))
(assert (! (rbt_sorted_d empty_d) :named a2))
(assert (! (member_d y_d (set_d (keys_d empty_d))) :named a3))
(check-sat)
;;;;;;(get-proof)
