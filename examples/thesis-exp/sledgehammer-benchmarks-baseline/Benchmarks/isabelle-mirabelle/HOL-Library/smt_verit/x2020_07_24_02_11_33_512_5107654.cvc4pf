(check
 ;; Declarations
(% A_set_d sort
(% A_set_set_d sort
(% Num_d sort
(% Nat_d sort
(% a_d (term A_set_d)
(% nsets_d (term (arrow A_set_d (arrow Nat_d A_set_set_d)))
(% one_d (term Num_d)
(% suc_d (term (arrow Nat_d Nat_d))
(% zero_d (term Nat_d)
(% numeral_d (term (arrow Num_d Nat_d))
(% bit0_d (term (arrow Num_d Num_d))
(% A1 (th_holds true)
(% A0 (th_holds (not (or (not (= Nat_d (apply _ _ suc_d (apply _ _ suc_d zero_d)) (apply _ _ numeral_d (apply _ _ bit0_d one_d)))) (= A_set_set_d (apply _ _ (apply _ _ nsets_d a_d)(apply _ _ suc_d (apply _ _ suc_d zero_d))) (apply _ _ (apply _ _ nsets_d a_d)(apply _ _ numeral_d (apply _ _ bit0_d one_d)))))))
(: (holds cln)

 ;; Printing deferred declarations 


;; BV const letification



 ;; Printing the global let map
(@ let1 zero_d
(@ let2 (apply _ _ suc_d let1)
(@ let3 (apply _ _ suc_d let2)
(@ let4 one_d
(@ let5 (apply _ _ bit0_d let4)
(@ let6 (apply _ _ numeral_d let5)
(@ let7 (= Nat_d let3 let6)
(@ let8 a_d
(@ let9 (apply _ _ (apply _ _ nsets_d let8)let3)
(@ let10 (apply _ _ (apply _ _ nsets_d let8)let6)
(@ let11 (= A_set_set_d let9 let10)

 ;; Printing aliasing declarations 


 ;; Rewrites for Lemmas 

 ;; In the preprocessor we trust 

;; Printing mapping from preprocessed assertions into atoms 
(decl_atom let7 (\ .v2 (\ .a2
(decl_atom let11 (\ .v3 (\ .a3
(satlem _ _ (asf _ _ _ .a2 (\ .l4 (clausify_false (contra _ (not_not_elim _ (and_elim_1 _ _ (not_or_elim _ _ A0))) .l4)))) (\ .pb4
(satlem _ _ (ast _ _ _ .a3 (\ .l7 (clausify_false (contra _ .l7 (and_elim_2 _ _ (not_or_elim _ _ A0)))))) (\ .pb5
 ;; Theory Lemmas 

;; BB atom mapping


;; Bit-blasting definitional clauses 


 ;; Bit-blasting learned clauses 

(satlem _ _ (asf _ _ _ .a3 (\ .l6 (ast _ _ _ .a2 (\ .l5  ;; UF Theory Lemma 
;;(= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d)))) (not (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d)))) 
(clausify_false (contra _ (cong _ _ _ _ _ _ (cong _ _ _ _ _ _ (refl _ nsets_d) (refl _ let8)) .l5) .l6))
))))( \ .lemc6
(satlem_simplify _ _ _ (Q _ _ (R _ _ .lemc6 .pb5 .v3) .pb4 .v2) (\ empty empty))))))))))))))))))))))))))))))))))))))))
;;
