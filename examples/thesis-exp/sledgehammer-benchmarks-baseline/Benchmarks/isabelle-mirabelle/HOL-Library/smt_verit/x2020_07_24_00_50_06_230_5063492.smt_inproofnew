(assume a0 (not (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d)))))
(assume a1 (inj_on_d f_d s_d))
(step t3 (cl (= (= (image_d f_d s_d) (image_d f_d s_d)) true)) :rule eq_simplify)
(step t4 (cl (= (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d))) (and (inj_on_d f_d s_d) true))) :rule cong :premises (t3))
(step t5 (cl (= (and (inj_on_d f_d s_d) true) (and (inj_on_d f_d s_d)))) :rule and_simplify)
(step t6 (cl (= (and (inj_on_d f_d s_d)) (inj_on_d f_d s_d))) :rule and_simplify)
(step t7 (cl (= (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d))) (inj_on_d f_d s_d))) :rule trans :premises (t4 t5 t6))
(step t8 (cl (= (not (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d)))) (not (inj_on_d f_d s_d)))) :rule cong :premises (t7))
(step t9 (cl (not (= (not (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d)))) (not (inj_on_d f_d s_d)))) (not (not (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d))))) (not (inj_on_d f_d s_d))) :rule equiv_pos2)
(step t10 (cl (not (not (not (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d)))))) (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d)))) :rule not_not)
(step t11 (cl (not (= (not (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d)))) (not (inj_on_d f_d s_d)))) (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d))) (not (inj_on_d f_d s_d))) :rule th_resolution :premises (t10 t9))
(step t12 (cl (not (inj_on_d f_d s_d))) :rule th_resolution :premises (a0 t8 t11))
(step t13 (cl) :rule resolution :premises (a1 t12))
