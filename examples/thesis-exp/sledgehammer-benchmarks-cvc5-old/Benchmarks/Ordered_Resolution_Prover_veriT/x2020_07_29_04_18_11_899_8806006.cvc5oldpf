(assume a0 (not (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))))
(assume a1 (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)))
(assume a2 (= (some_d tau_d) (mgu_d (image_d set_mset_d (set_d (map_d (case_prod_d add_mset_d) (zip_d as0_d aAs0_d)))))))
(step t1 (cl (=> (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d))) :rule implies_neg1)
(anchor :step t2)
(assume t2.a0 (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)))
(step t2.t1 (cl (=> (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d))) :rule implies_neg1)
(anchor :step t2.t2)
(assume t2.t2.a0 (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)))
(step t2.t2.t1 (cl (= subst_atm_d subst_atm_d)) :rule refl)
(step t2.t2.t2 (cl (= (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (plus_d (sum_mset_d (mset_d cs0_d)) d0_d))) :rule refl)
(step t2.t2.t3 (cl (= (comp_subst_d eta_d sigma_d) (comp_subst_d tau_d phi_d))) :rule symm :premises (t2.t2.a0))
(step t2.t2.t4 (cl (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d))) :rule symm :premises (t2.t2.t3))
(step t2.t2.t5 (cl (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) :rule cong :premises (t2.t2.t1 t2.t2.t2 t2.t2.t4))
(step t2.t2 (cl (not (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d))) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) :rule subproof :discharge (t2.t2.a0))
(step t2.t3 (cl (=> (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) :rule resolution :premises (t2.t1 t2.t2))
(step t2.t4 (cl (=> (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) (not (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d))))) :rule implies_neg2)
(step t2.t5 (cl (=> (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) (=> (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d))))) :rule resolution :premises (t2.t3 t2.t4))
(step t2.t6 (cl (=> (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d))))) :rule contraction :premises (t2.t5))
(step t2.t7 (cl (not (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d))) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) :rule implies :premises (t2.t6))
(step t2.t8 (cl (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) :rule resolution :premises (t2.t7 t2.a0))
(step t2 (cl (not (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d))) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) :rule subproof :discharge (t2.a0))
(step t3 (cl (=> (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) :rule resolution :premises (t1 t2))
(step t4 (cl (=> (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) (not (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d))))) :rule implies_neg2)
(step t5 (cl (=> (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) (=> (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d))))) :rule resolution :premises (t3 t4))
(step t6 (cl (=> (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d))))) :rule contraction :premises (t5))
(step t7 (cl (not (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d))) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) :rule implies :premises (t6))
(step t8 (cl (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d))) (not (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)))) :rule reordering :premises (t7))
(step t9 (cl) :rule resolution :premises (t8 a1 a0))
