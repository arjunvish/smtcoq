(assume a0 (not (less_d zero_d delta_d)))
(assume a1 (= delta_d epsilon_d))
(assume a2 (less_d zero_d epsilon_d))
(step t1 (cl (not (= (not (less_d zero_d delta_d)) (not (less_d zero_d epsilon_d)))) (not (not (less_d zero_d delta_d))) (not (less_d zero_d epsilon_d))) :rule equiv_pos2)
(step t2 (cl (= zero_d zero_d)) :rule refl)
(step t3 (cl (= (less_d zero_d delta_d) (less_d zero_d epsilon_d))) :rule cong :premises (t2 a1))
(step t4 (cl (= (not (less_d zero_d delta_d)) (not (less_d zero_d epsilon_d)))) :rule cong :premises (t3))
(step t5 (cl (not (less_d zero_d epsilon_d))) :rule resolution :premises (t1 t4 a0))
(step t6 (cl) :rule resolution :premises (a2 t5))
