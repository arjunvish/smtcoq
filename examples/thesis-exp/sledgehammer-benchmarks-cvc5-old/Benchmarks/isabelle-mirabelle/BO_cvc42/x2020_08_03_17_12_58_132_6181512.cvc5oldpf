(assume a0 (not (= (head_d ta_d) (head_d sa_d))))
(assume a1 (= (head_d ta_d) (sym_d g_d)))
(assume a2 (= (head_d sa_d) (sym_d f_d)))
(assume a3 (= g_d f_d))
(step t1 (cl (not (= (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d)))) (or (= (head_d ta_d) (head_d sa_d)) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d)))))) (not (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d))))) (or (= (head_d ta_d) (head_d sa_d)) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d))))) :rule equiv_pos2)
(step t2 (cl (= (= (= (not (not (= (head_d ta_d) (head_d sa_d)))) (= (head_d ta_d) (head_d sa_d))) true) (= (not (not (= (head_d ta_d) (head_d sa_d)))) (= (head_d ta_d) (head_d sa_d))))) :rule equiv_simplify)
(step t3 (cl (not (= (= (not (not (= (head_d ta_d) (head_d sa_d)))) (= (head_d ta_d) (head_d sa_d))) true)) (= (not (not (= (head_d ta_d) (head_d sa_d)))) (= (head_d ta_d) (head_d sa_d)))) :rule equiv1 :premises (t2))
(step t4 (cl (= (= (not (not (= (head_d ta_d) (head_d sa_d)))) (= (head_d ta_d) (head_d sa_d))) (= (= (head_d ta_d) (head_d sa_d)) (not (not (= (head_d ta_d) (head_d sa_d))))))) :rule all_simplify)
(step t5 (cl (= (= (head_d ta_d) (head_d sa_d)) (= (head_d ta_d) (head_d sa_d)))) :rule refl)
(step t6 (cl (= (not (not (= (head_d ta_d) (head_d sa_d)))) (= (head_d ta_d) (head_d sa_d)))) :rule all_simplify :args (not_simplify1 (= (head_d ta_d) (head_d sa_d))))
(step t7 (cl (= (= (= (head_d ta_d) (head_d sa_d)) (not (not (= (head_d ta_d) (head_d sa_d))))) (= (= (head_d ta_d) (head_d sa_d)) (= (head_d ta_d) (head_d sa_d))))) :rule cong :premises (t5 t6))
(step t8 (cl (= (= (= (head_d ta_d) (head_d sa_d)) (= (head_d ta_d) (head_d sa_d))) (and (=> (= (head_d ta_d) (head_d sa_d)) (= (head_d ta_d) (head_d sa_d))) (=> (= (head_d ta_d) (head_d sa_d)) (= (head_d ta_d) (head_d sa_d)))))) :rule all_simplify :args (connective_def2 (= (head_d ta_d) (head_d sa_d)) (= (head_d ta_d) (head_d sa_d))))
(step t9 (cl (= (and (=> (= (head_d ta_d) (head_d sa_d)) (= (head_d ta_d) (head_d sa_d))) (=> (= (head_d ta_d) (head_d sa_d)) (= (head_d ta_d) (head_d sa_d)))) (=> (= (head_d ta_d) (head_d sa_d)) (= (head_d ta_d) (head_d sa_d))))) :rule all_simplify :args (and_simplify3 (=> (= (head_d ta_d) (head_d sa_d)) (= (head_d ta_d) (head_d sa_d))) (cvc5_nary_op) (cvc5_nary_op) (cvc5_nary_op)))
(step t10 (cl (= (=> (= (head_d ta_d) (head_d sa_d)) (= (head_d ta_d) (head_d sa_d))) true)) :rule all_simplify :args (implies_simplify6 (= (head_d ta_d) (head_d sa_d))))
(step t11 (cl (= (and (=> (= (head_d ta_d) (head_d sa_d)) (= (head_d ta_d) (head_d sa_d))) (=> (= (head_d ta_d) (head_d sa_d)) (= (head_d ta_d) (head_d sa_d)))) true)) :rule trans :premises (t9 t10))
(step t12 (cl (= (= (= (head_d ta_d) (head_d sa_d)) (= (head_d ta_d) (head_d sa_d))) true)) :rule trans :premises (t8 t11))
(step t13 (cl (= (= (= (head_d ta_d) (head_d sa_d)) (not (not (= (head_d ta_d) (head_d sa_d))))) true)) :rule trans :premises (t7 t12))
(step t14 (cl (= (= (not (not (= (head_d ta_d) (head_d sa_d)))) (= (head_d ta_d) (head_d sa_d))) true)) :rule trans :premises (t4 t13))
(step t15 (cl (= (not (not (= (head_d ta_d) (head_d sa_d)))) (= (head_d ta_d) (head_d sa_d)))) :rule resolution :premises (t3 t14))
(step t16 (cl (= (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d))))) :rule refl)
(step t17 (cl (= (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d))))) :rule refl)
(step t18 (cl (= (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d)))) (or (= (head_d ta_d) (head_d sa_d)) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d)))))) :rule cong :premises (t15 t16 t17))
(step t19 (cl (not (= (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)))))) (not (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))))) (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))))) :rule equiv_pos2)
(step t20 (cl (= (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))) (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))))) :rule refl)
(step t21 (cl (= (= (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))) false) (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))))) :rule equiv_simplify)
(step t22 (cl (= (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))) false) (not (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))))) :rule equiv2 :premises (t21))
(step t23 (cl (not (not (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))))) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) :rule not_not)
(step t24 (cl (= (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))) false) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) :rule resolution :premises (t22 t23))
(step t25 (cl (=> (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))) false) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) :rule implies_neg1)
(anchor :step t26)
(assume t26.a0 (= (head_d ta_d) (sym_d g_d)))
(assume t26.a1 (= (head_d sa_d) (sym_d g_d)))
(assume t26.a2 (not (= (head_d ta_d) (head_d sa_d))))
(step t26.t1 (cl (not (= (= false true) false)) (not (= false true)) false) :rule equiv_pos2)
(step t26.t2 (cl (= (= false true) false)) :rule eq_simplify)
(step t26.t3 (cl (= (= (= (head_d ta_d) (head_d sa_d)) false) (not (= (head_d ta_d) (head_d sa_d))))) :rule equiv_simplify)
(step t26.t4 (cl (= (= (head_d ta_d) (head_d sa_d)) false) (not (not (= (head_d ta_d) (head_d sa_d))))) :rule equiv2 :premises (t26.t3))
(step t26.t5 (cl (not (not (not (= (head_d ta_d) (head_d sa_d))))) (= (head_d ta_d) (head_d sa_d))) :rule not_not)
(step t26.t6 (cl (= (= (head_d ta_d) (head_d sa_d)) false) (= (head_d ta_d) (head_d sa_d))) :rule resolution :premises (t26.t4 t26.t5))
(step t26.t7 (cl (= (= (head_d ta_d) (head_d sa_d)) false)) :rule resolution :premises (t26.t6 t26.a2))
(step t26.t8 (cl (= false (= (head_d ta_d) (head_d sa_d)))) :rule symm :premises (t26.t7))
(step t26.t9 (cl (= (= (= (head_d ta_d) (head_d sa_d)) true) (= (head_d ta_d) (head_d sa_d)))) :rule equiv_simplify)
(step t26.t10 (cl (= (= (head_d ta_d) (head_d sa_d)) true) (not (= (head_d ta_d) (head_d sa_d)))) :rule equiv2 :premises (t26.t9))
(step t26.t11 (cl (= (sym_d g_d) (head_d ta_d))) :rule symm :premises (t26.a0))
(step t26.t12 (cl (= (head_d ta_d) (sym_d g_d))) :rule symm :premises (t26.t11))
(step t26.t13 (cl (= (sym_d g_d) (head_d sa_d))) :rule symm :premises (t26.a1))
(step t26.t14 (cl (= (head_d ta_d) (head_d sa_d))) :rule trans :premises (t26.t12 t26.t13))
(step t26.t15 (cl (= (= (head_d ta_d) (head_d sa_d)) true)) :rule resolution :premises (t26.t10 t26.t14))
(step t26.t16 (cl (= false true)) :rule trans :premises (t26.t8 t26.t15))
(step t26.t17 (cl false) :rule resolution :premises (t26.t1 t26.t2 t26.t16))
(step t26 (cl (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d))) (not (not (= (head_d ta_d) (head_d sa_d)))) false) :rule subproof :discharge (t26.a0 t26.a1 t26.a2))
(step t27 (cl (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) (= (head_d ta_d) (sym_d g_d))) :rule and_pos)
(step t28 (cl (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) (= (head_d sa_d) (sym_d g_d))) :rule and_pos)
(step t29 (cl (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) (not (= (head_d ta_d) (head_d sa_d)))) :rule and_pos)
(step t30 (cl false (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))))) :rule resolution :premises (t26 t27 t28 t29))
(step t31 (cl (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) false) :rule reordering :premises (t30))
(step t32 (cl (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) false) :rule contraction :premises (t31))
(step t33 (cl (=> (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))) false) false) :rule resolution :premises (t25 t32))
(step t34 (cl (=> (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))) false) (not false)) :rule implies_neg2)
(step t35 (cl (=> (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))) false) (=> (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))) false)) :rule resolution :premises (t33 t34))
(step t36 (cl (=> (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))) false)) :rule contraction :premises (t35))
(step t37 (cl (= (=> (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))) false) (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))))) :rule implies_simplify)
(step t38 (cl (not (=> (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))) false)) (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))))) :rule equiv1 :premises (t37))
(step t39 (cl (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))))) :rule resolution :premises (t36 t38))
(step t40 (cl (= (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))) false)) :rule resolution :premises (t24 t39))
(step t41 (cl (= (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))) false))) :rule cong :premises (t20 t40))
(step t42 (cl (= (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))) false) (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)))))) :rule all_simplify :args (implies_simplify5 (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)))))
(step t43 (cl (= (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)))))) :rule trans :premises (t41 t42))
(step t44 (cl (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)))) :rule implies_neg1)
(anchor :step t45)
(assume t45.a0 (not (= (head_d ta_d) (head_d sa_d))))
(assume t45.a1 (= (head_d ta_d) (sym_d g_d)))
(assume t45.a2 (= (head_d sa_d) (sym_d g_d)))
(step t45.t1 (cl (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d))) (not (not (= (head_d ta_d) (head_d sa_d))))) :rule and_neg)
(step t45.t2 (cl (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) :rule resolution :premises (t45.t1 t45.a1 t45.a2 t45.a0))
(step t45 (cl (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d))) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) :rule subproof :discharge (t45.a0 t45.a1 t45.a2))
(step t46 (cl (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)))) (not (= (head_d ta_d) (head_d sa_d)))) :rule and_pos)
(step t47 (cl (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)))) (= (head_d ta_d) (sym_d g_d))) :rule and_pos)
(step t48 (cl (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)))) (= (head_d sa_d) (sym_d g_d))) :rule and_pos)
(step t49 (cl (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))) (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)))) (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)))) (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))))) :rule resolution :premises (t45 t46 t47 t48))
(step t50 (cl (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)))) (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)))) (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)))) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) :rule reordering :premises (t49))
(step t51 (cl (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)))) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) :rule contraction :premises (t50))
(step t52 (cl (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) :rule resolution :premises (t44 t51))
(step t53 (cl (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) (not (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))))) :rule implies_neg2)
(step t54 (cl (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d))))) (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))))) :rule resolution :premises (t52 t53))
(step t55 (cl (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))) (and (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d)) (not (= (head_d ta_d) (head_d sa_d)))))) :rule contraction :premises (t54))
(step t56 (cl (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d ta_d) (sym_d g_d)) (= (head_d sa_d) (sym_d g_d))))) :rule resolution :premises (t19 t43 t55))
(step t57 (cl (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d)))) :rule not_and :premises (t56))
(step t58 (cl (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d)))) (not (not (not (= (head_d ta_d) (head_d sa_d)))))) :rule or_neg)
(step t59 (cl (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d)))) (not (not (= (head_d ta_d) (sym_d g_d))))) :rule or_neg)
(step t60 (cl (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d)))) (not (not (= (head_d sa_d) (sym_d g_d))))) :rule or_neg)
(step t61 (cl (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d)))) (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d)))) (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d))))) :rule resolution :premises (t57 t58 t59 t60))
(step t62 (cl (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d))))) :rule contraction :premises (t61))
(step t63 (cl (or (= (head_d ta_d) (head_d sa_d)) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d))))) :rule resolution :premises (t1 t18 t62))
(step t64 (cl (= (head_d ta_d) (head_d sa_d)) (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d)))) :rule or :premises (t63))
(step t65 (cl (not (= (= (head_d sa_d) (sym_d f_d)) (= (head_d sa_d) (sym_d g_d)))) (not (= (head_d sa_d) (sym_d f_d))) (= (head_d sa_d) (sym_d g_d))) :rule equiv_pos2)
(step t66 (cl (= (head_d sa_d) (head_d sa_d))) :rule refl)
(step t67 (cl (= f_d g_d)) :rule symm :premises (a3))
(step t68 (cl (= (sym_d f_d) (sym_d g_d))) :rule cong :premises (t67))
(step t69 (cl (= (= (head_d sa_d) (sym_d f_d)) (= (head_d sa_d) (sym_d g_d)))) :rule cong :premises (t66 t68))
(step t70 (cl (= (head_d sa_d) (sym_d g_d))) :rule resolution :premises (t65 t69 a2))
(step t71 (cl) :rule resolution :premises (t64 t70 a1 a0))
