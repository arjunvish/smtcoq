(assume a0 (not (or (not (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d)))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d)))))))
(step t1 (cl (=> (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d))))) (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d)))) :rule implies_neg1)
(anchor :step t2)
(assume t2.a0 (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d))))
(step t2.t1 (cl (=> (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d))))) (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d)))) :rule implies_neg1)
(anchor :step t2.t2)
(assume t2.t2.a0 (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d))))
(step t2.t2.t1 (cl (= a_d a_d)) :rule refl)
(step t2.t2.t2 (cl (= (numeral_d (bit0_d one_d)) (suc_d (suc_d zero_d)))) :rule symm :premises (t2.t2.a0))
(step t2.t2.t3 (cl (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d)))) :rule symm :premises (t2.t2.t2))
(step t2.t2.t4 (cl (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d))))) :rule cong :premises (t2.t2.t1 t2.t2.t3))
(step t2.t2 (cl (not (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d)))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d))))) :rule subproof :discharge (t2.t2.a0))
(step t2.t3 (cl (=> (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d))))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d))))) :rule resolution :premises (t2.t1 t2.t2))
(step t2.t4 (cl (=> (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d))))) (not (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d)))))) :rule implies_neg2)
(step t2.t5 (cl (=> (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d))))) (=> (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d)))))) :rule resolution :premises (t2.t3 t2.t4))
(step t2.t6 (cl (=> (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d)))))) :rule contraction :premises (t2.t5))
(step t2.t7 (cl (not (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d)))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d))))) :rule implies :premises (t2.t6))
(step t2.t8 (cl (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d))))) :rule resolution :premises (t2.t7 t2.a0))
(step t2 (cl (not (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d)))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d))))) :rule subproof :discharge (t2.a0))
(step t3 (cl (=> (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d))))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d))))) :rule resolution :premises (t1 t2))
(step t4 (cl (=> (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d))))) (not (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d)))))) :rule implies_neg2)
(step t5 (cl (=> (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d))))) (=> (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d)))))) :rule resolution :premises (t3 t4))
(step t6 (cl (=> (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d)))))) :rule contraction :premises (t5))
(step t7 (cl (not (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d)))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d))))) :rule implies :premises (t6))
(step t8 (cl (not (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d)))))) :rule not_or :premises (a0))
(step t9 (cl (not (not (not (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d)))))) (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d)))) :rule not_not)
(step t10 (cl (not (not (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d)))))) :rule not_or :premises (a0))
(step t11 (cl (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d)))) :rule resolution :premises (t9 t10))
(step t12 (cl) :rule resolution :premises (t7 t8 t11))
