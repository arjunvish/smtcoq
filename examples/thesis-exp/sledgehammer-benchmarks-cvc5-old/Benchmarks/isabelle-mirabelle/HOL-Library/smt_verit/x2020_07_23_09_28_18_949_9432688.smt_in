; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A_b_fun_d 0)
(declare-sort A_b_fun_set_d 0)
(declare-fun f_d () A_b_fun_d)
(declare-fun g_d () A_b_fun_d)
(declare-fun h_d () A_b_fun_d)
(declare-fun bigo_d (A_b_fun_d) A_b_fun_set_d)
(declare-fun member_d (A_b_fun_d A_b_fun_set_d) Bool)
(declare-fun elt_set_plus_d (A_b_fun_d A_b_fun_set_d) A_b_fun_set_d)
(assert (! (not (member_d f_d (elt_set_plus_d g_d (bigo_d h_d)))) :named a0))
(assert (! (member_d f_d (elt_set_plus_d g_d (bigo_d h_d))) :named a1))
(check-sat)
;;;;;;(get-proof)
