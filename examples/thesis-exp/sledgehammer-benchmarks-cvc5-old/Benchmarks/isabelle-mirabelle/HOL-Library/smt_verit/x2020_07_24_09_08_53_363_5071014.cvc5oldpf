(assume a0 (not (= (class_d (pick_d a_d)) a_d)))
(assume a1 (= (class_d (pick_d a_d)) (class_d a_da)))
(assume a2 (= a_d (class_d a_da)))
(step t1 (cl (not (= (= (class_d (pick_d a_d)) (class_d a_da)) (= (class_d a_da) (class_d (pick_d (class_d a_da)))))) (not (= (class_d (pick_d a_d)) (class_d a_da))) (= (class_d a_da) (class_d (pick_d (class_d a_da))))) :rule equiv_pos2)
(step t2 (cl (= (pick_d a_d) (pick_d (class_d a_da)))) :rule cong :premises (a2))
(step t3 (cl (= (class_d (pick_d a_d)) (class_d (pick_d (class_d a_da))))) :rule cong :premises (t2))
(step t4 (cl (= (class_d a_da) (class_d a_da))) :rule refl)
(step t5 (cl (= (= (class_d (pick_d a_d)) (class_d a_da)) (= (class_d (pick_d (class_d a_da))) (class_d a_da)))) :rule cong :premises (t3 t4))
(step t6 (cl (= (= (class_d (pick_d (class_d a_da))) (class_d a_da)) (= (class_d a_da) (class_d (pick_d (class_d a_da)))))) :rule all_simplify)
(step t7 (cl (= (= (class_d (pick_d a_d)) (class_d a_da)) (= (class_d a_da) (class_d (pick_d (class_d a_da)))))) :rule trans :premises (t5 t6))
(step t8 (cl (= (class_d a_da) (class_d (pick_d (class_d a_da))))) :rule resolution :premises (t1 t7 a1))
(step t9 (cl (not (= (not (= (class_d (pick_d a_d)) a_d)) (not (= (class_d a_da) (class_d (pick_d (class_d a_da))))))) (not (not (= (class_d (pick_d a_d)) a_d))) (not (= (class_d a_da) (class_d (pick_d (class_d a_da)))))) :rule equiv_pos2)
(step t10 (cl (= (= (class_d (pick_d a_d)) a_d) (= a_d (class_d (pick_d a_d))))) :rule all_simplify)
(step t11 (cl (= (not (= (class_d (pick_d a_d)) a_d)) (not (= a_d (class_d (pick_d a_d)))))) :rule cong :premises (t10))
(step t12 (cl (= (pick_d a_d) (pick_d (class_d a_da)))) :rule cong :premises (a2))
(step t13 (cl (= (class_d (pick_d a_d)) (class_d (pick_d (class_d a_da))))) :rule cong :premises (t12))
(step t14 (cl (= (= a_d (class_d (pick_d a_d))) (= (class_d a_da) (class_d (pick_d (class_d a_da)))))) :rule cong :premises (a2 t13))
(step t15 (cl (= (not (= a_d (class_d (pick_d a_d)))) (not (= (class_d a_da) (class_d (pick_d (class_d a_da))))))) :rule cong :premises (t14))
(step t16 (cl (= (not (= (class_d (pick_d a_d)) a_d)) (not (= (class_d a_da) (class_d (pick_d (class_d a_da))))))) :rule trans :premises (t11 t15))
(step t17 (cl (not (= (class_d a_da) (class_d (pick_d (class_d a_da)))))) :rule resolution :premises (t9 t16 a0))
(step t18 (cl) :rule resolution :premises (t8 t17))
