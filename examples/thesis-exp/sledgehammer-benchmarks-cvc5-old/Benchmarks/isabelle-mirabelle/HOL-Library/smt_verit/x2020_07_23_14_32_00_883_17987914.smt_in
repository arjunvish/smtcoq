; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A_b_fun_d 0)
(declare-sort A_b_fun_set_d 0)
(declare-fun a_d () A_b_fun_set_d)
(declare-fun b_d () A_b_fun_set_d)
(declare-fun f_d () A_b_fun_d)
(declare-fun bigo_d (A_b_fun_d) A_b_fun_set_d)
(declare-fun less_eq_d (A_b_fun_set_d A_b_fun_set_d) Bool)
(assert (! (not (less_eq_d a_d (bigo_d f_d))) :named a0))
(assert (! (less_eq_d a_d (bigo_d f_d)) :named a1))
(assert (! (less_eq_d b_d (bigo_d f_d)) :named a2))
(check-sat)
;;;;;;(get-proof)
