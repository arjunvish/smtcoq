(assume a0 (not (= (head_d ta_d) (head_d sa_d))))
(assume a1 (= (head_d sa_d) (sym_d f_d)))
(assume a2 (= (head_d ta_d) (sym_d g_d)))
(assume a3 (= g_d f_d))
(step t0 (cl (not (= (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d)))) (or (= (head_d ta_d) (head_d sa_d)) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d)))))) (not (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d))))) (or (= (head_d ta_d) (head_d sa_d)) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d))))) :rule equiv_pos2)
(step t1 (cl (= (not (not (= (head_d ta_d) (head_d sa_d)))) (= (head_d ta_d) (head_d sa_d)))) :rule all_simplify)
(step t2 (cl (= (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d sa_d) (sym_d g_d))))) :rule refl)
(step t3 (cl (= (not (= (head_d ta_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d))))) :rule refl)
(step t4 (cl (= (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d)))) (or (= (head_d ta_d) (head_d sa_d)) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d)))))) :rule cong :premises (t1 t2 t3))
(step t5 (cl (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d sa_d) (sym_d g_d))) (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d sa_d) (sym_d g_d)))) :rule and_neg)
(step t6 (cl (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d)))) (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d sa_d) (sym_d g_d)))) :rule implies_neg1)
(anchor :step t7)
(assume t7.a0 (not (= (head_d ta_d) (head_d sa_d))))
(assume t7.a1 (= (head_d sa_d) (sym_d g_d)))
(step t7.t0 (cl (= (= (= (head_d ta_d) (sym_d g_d)) false) (not (= (head_d ta_d) (sym_d g_d))))) :rule equiv_simplify)
(step t7.t1 (cl (not (= (= (head_d ta_d) (sym_d g_d)) false)) (not (= (head_d ta_d) (sym_d g_d)))) :rule equiv1 :premises (t7.t0))
(step t7.t2 (cl (= (head_d ta_d) (head_d ta_d))) :rule refl)
(step t7.t3 (cl (not (= (= (head_d sa_d) (sym_d f_d)) (= (head_d sa_d) (sym_d g_d)))) (not (= (head_d sa_d) (sym_d f_d))) (= (head_d sa_d) (sym_d g_d))) :rule equiv_pos2)
(step t7.t4 (cl (= (head_d sa_d) (head_d sa_d))) :rule refl)
(step t7.t5 (cl (= f_d g_d)) :rule symm :premises (a3))
(step t7.t6 (cl (= (sym_d f_d) (sym_d g_d))) :rule cong :premises (t7.t5))
(step t7.t7 (cl (= (= (head_d sa_d) (sym_d f_d)) (= (head_d sa_d) (sym_d g_d)))) :rule cong :premises (t7.t4 t7.t6))
(step t7.t8 (cl (= (head_d sa_d) (sym_d g_d))) :rule resolution :premises (t7.t3 t7.t7 a1))
(step t7.t9 (cl (= (sym_d g_d) (head_d sa_d))) :rule symm :premises (t7.t8))
(step t7.t10 (cl (= (= (head_d ta_d) (sym_d g_d)) (= (head_d ta_d) (head_d sa_d)))) :rule cong :premises (t7.t2 t7.t9))
(step t7.t11 (cl (= (= (= (head_d ta_d) (head_d sa_d)) false) (not (= (head_d ta_d) (head_d sa_d))))) :rule equiv_simplify)
(step t7.t12 (cl (= (= (head_d ta_d) (head_d sa_d)) false) (not (not (= (head_d ta_d) (head_d sa_d))))) :rule equiv2 :premises (t7.t11))
(step t7.t13 (cl (not (not (not (= (head_d ta_d) (head_d sa_d))))) (= (head_d ta_d) (head_d sa_d))) :rule not_not)
(step t7.t14 (cl (= (= (head_d ta_d) (head_d sa_d)) false) (= (head_d ta_d) (head_d sa_d))) :rule resolution :premises (t7.t12 t7.t13))
(step t7.t15 (cl (= (= (head_d ta_d) (head_d sa_d)) false)) :rule resolution :premises (t7.t14 t7.a0))
(step t7.t16 (cl (= (= (head_d ta_d) (sym_d g_d)) false)) :rule trans :premises (t7.t10 t7.t15))
(step t7.t17 (cl (not (= (head_d ta_d) (sym_d g_d)))) :rule resolution :premises (t7.t1 t7.t16))
(step t7 (cl (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d)))) :rule subproof :discharge (t7.a0 t7.a1))
(step t8 (cl (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d sa_d) (sym_d g_d)))) (not (= (head_d ta_d) (head_d sa_d)))) :rule and_pos)
(step t9 (cl (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d sa_d) (sym_d g_d)))) (= (head_d sa_d) (sym_d g_d))) :rule and_pos)
(step t10 (cl (not (= (head_d ta_d) (sym_d g_d))) (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d sa_d) (sym_d g_d)))) (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d sa_d) (sym_d g_d))))) :rule resolution :premises (t7 t8 t9))
(step t11 (cl (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d sa_d) (sym_d g_d)))) (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d sa_d) (sym_d g_d)))) (not (= (head_d ta_d) (sym_d g_d)))) :rule reordering :premises (t10))
(step t12 (cl (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d sa_d) (sym_d g_d)))) (not (= (head_d ta_d) (sym_d g_d)))) :rule contraction :premises (t11))
(step t13 (cl (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d)))) (not (= (head_d ta_d) (sym_d g_d)))) :rule resolution :premises (t6 t12))
(step t14 (cl (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d)))) (not (not (= (head_d ta_d) (sym_d g_d))))) :rule implies_neg2)
(step t15 (cl (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d)))) (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d))))) :rule resolution :premises (t13 t14))
(step t16 (cl (=> (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d))))) :rule contraction :premises (t15))
(step t17 (cl (not (and (not (= (head_d ta_d) (head_d sa_d))) (= (head_d sa_d) (sym_d g_d)))) (not (= (head_d ta_d) (sym_d g_d)))) :rule implies :premises (t16))
(step t18 (cl (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d)))) :rule resolution :premises (t5 t17))
(step t19 (cl (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d)))) (not (not (not (= (head_d ta_d) (head_d sa_d)))))) :rule or_neg)
(step t20 (cl (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d)))) (not (not (= (head_d sa_d) (sym_d g_d))))) :rule or_neg)
(step t21 (cl (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d)))) (not (not (= (head_d ta_d) (sym_d g_d))))) :rule or_neg)
(step t22 (cl (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d)))) (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d)))) (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d))))) :rule resolution :premises (t18 t19 t20 t21))
(step t23 (cl (or (not (not (= (head_d ta_d) (head_d sa_d)))) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d))))) :rule contraction :premises (t22))
(step t24 (cl (or (= (head_d ta_d) (head_d sa_d)) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d))))) :rule resolution :premises (t0 t4 t23))
(step t25 (cl (= (head_d ta_d) (head_d sa_d)) (not (= (head_d sa_d) (sym_d g_d))) (not (= (head_d ta_d) (sym_d g_d)))) :rule or :premises (t24))
(step t26 (cl (not (= (= (head_d sa_d) (sym_d f_d)) (= (head_d sa_d) (sym_d g_d)))) (not (= (head_d sa_d) (sym_d f_d))) (= (head_d sa_d) (sym_d g_d))) :rule equiv_pos2)
(step t27 (cl (= (head_d sa_d) (head_d sa_d))) :rule refl)
(step t28 (cl (= f_d g_d)) :rule symm :premises (a3))
(step t29 (cl (= (sym_d f_d) (sym_d g_d))) :rule cong :premises (t28))
(step t30 (cl (= (= (head_d sa_d) (sym_d f_d)) (= (head_d sa_d) (sym_d g_d)))) :rule cong :premises (t27 t29))
(step t31 (cl (= (head_d sa_d) (sym_d g_d))) :rule resolution :premises (t26 t30 a1))
(step t32 (cl) :rule resolution :premises (t25 a2 t31 a0))
