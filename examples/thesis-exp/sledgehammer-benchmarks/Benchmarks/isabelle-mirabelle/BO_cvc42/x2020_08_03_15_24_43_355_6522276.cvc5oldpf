(assume a0 (not (not (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d sa_d)))))
(assume a1 (not (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d ta_d))))
(assume a2 (= (head_d ta_d) (head_d sa_d)))
(step t0 (cl (not (= (= false true) false)) (not (= false true)) false) :rule equiv_pos2)
(step t1 (cl (= (= false true) false)) :rule all_simplify)
(step t2 (cl (= (= (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d ta_d)) false) (not (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d ta_d))))) :rule equiv_simplify)
(step t3 (cl (= (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d ta_d)) false) (not (not (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d ta_d))))) :rule equiv2 :premises (t2))
(step t4 (cl (not (not (not (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d ta_d))))) (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d ta_d))) :rule not_not)
(step t5 (cl (= (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d ta_d)) false) (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d ta_d))) :rule resolution :premises (t3 t4))
(step t6 (cl (= (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d ta_d)) false)) :rule resolution :premises (t5 a1))
(step t7 (cl (= false (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d ta_d)))) :rule symm :premises (t6))
(step t8 (cl (= gt_sym_d gt_sym_d)) :rule refl)
(step t9 (cl (= ground_heads_var_d ground_heads_var_d)) :rule refl)
(step t10 (cl (= (head_d ua_d) (head_d ua_d))) :rule refl)
(step t11 (cl (= (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d ta_d)) (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d sa_d)))) :rule cong :premises (t8 t9 t10 a2))
(step t12 (cl (= (= (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d sa_d)) true) (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d sa_d)))) :rule equiv_simplify)
(step t13 (cl (= (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d sa_d)) true) (not (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d sa_d)))) :rule equiv2 :premises (t12))
(step t14 (cl (not (= (not (not (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d sa_d)))) (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d sa_d)))) (not (not (not (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d sa_d))))) (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d sa_d))) :rule equiv_pos2)
(step t15 (cl (= (not (not (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d sa_d)))) (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d sa_d)))) :rule all_simplify)
(step t16 (cl (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d sa_d))) :rule resolution :premises (t14 t15 a0))
(step t17 (cl (= (comp_hd_d gt_sym_d ground_heads_var_d (head_d ua_d) (head_d sa_d)) true)) :rule resolution :premises (t13 t16))
(step t18 (cl (= false true)) :rule trans :premises (t7 t11 t17))
(step t19 (cl false) :rule resolution :premises (t0 t1 t18))
(step t20 (cl (not false)) :rule false)
(step t21 (cl) :rule resolution :premises (t19 t20))
