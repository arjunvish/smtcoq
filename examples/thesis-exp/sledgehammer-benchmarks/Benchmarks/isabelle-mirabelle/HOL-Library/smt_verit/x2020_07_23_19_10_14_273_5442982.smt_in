; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A_d 0)
(declare-sort A_a_a_fun_fun_d 0)
(declare-sort B_a_fun_b_set_a_fun_fun_d 0)
(declare-fun f_d (A_a_a_fun_fun_d A_d) B_a_fun_b_set_a_fun_fun_d)
(declare-fun one_d () A_d)
(declare-fun prod_d (A_a_a_fun_fun_d A_d) B_a_fun_b_set_a_fun_fun_d)
(declare-fun times_d () A_a_a_fun_fun_d)
(assert (! (not (= (f_d times_d one_d) (prod_d times_d one_d))) :named a0))
(assert (! (= (prod_d times_d one_d) (f_d times_d one_d)) :named a1))
(check-sat)
;;;;;;(get-proof)
