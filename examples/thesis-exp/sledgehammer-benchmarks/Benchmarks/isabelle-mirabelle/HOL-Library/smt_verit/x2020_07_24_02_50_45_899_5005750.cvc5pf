(assume a0 (not (= (ite p_d true q_d) (or p_d q_d))))
(step t0 (cl (not (= (not (= (ite p_d true q_d) (or p_d q_d))) false)) (not (not (= (ite p_d true q_d) (or p_d q_d)))) false) :rule equiv_pos2)
(step t1 (cl (= (ite p_d true q_d) (or p_d q_d))) :rule all_simplify)
(step t2 (cl (= (or p_d q_d) (or p_d q_d))) :rule refl)
(step t3 (cl (= (= (ite p_d true q_d) (or p_d q_d)) (= (or p_d q_d) (or p_d q_d)))) :rule cong :premises (t1 t2))
(step t4 (cl (= (= (or p_d q_d) (or p_d q_d)) true)) :rule all_simplify)
(step t5 (cl (= (= (ite p_d true q_d) (or p_d q_d)) true)) :rule trans :premises (t3 t4))
(step t6 (cl (= (not (= (ite p_d true q_d) (or p_d q_d))) (not true))) :rule cong :premises (t5))
(step t7 (cl (= (not true) false)) :rule all_simplify)
(step t8 (cl (= (not (= (ite p_d true q_d) (or p_d q_d))) false)) :rule trans :premises (t6 t7))
(step t9 (cl false) :rule resolution :premises (t0 t8 a0))
(step t10 (cl (not false)) :rule false)
(step t11 (cl) :rule resolution :premises (t9 t10))
