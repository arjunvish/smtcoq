; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=20
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort Nat_d 0)
(declare-sort Num_d 0)
(declare-sort A_set_d 0)
(declare-sort A_set_set_d 0)
(declare-fun a_d () A_set_d)
(declare-fun one_d () Num_d)
(declare-fun suc_d (Nat_d) Nat_d)
(declare-fun bit0_d (Num_d) Num_d)
(declare-fun zero_d () Nat_d)
(declare-fun nsets_d (A_set_d Nat_d) A_set_set_d)
(declare-fun numeral_d (Num_d) Nat_d)
(assert (! (not (or (not (= (suc_d (suc_d zero_d)) (numeral_d (bit0_d one_d)))) (= (nsets_d a_d (suc_d (suc_d zero_d))) (nsets_d a_d (numeral_d (bit0_d one_d)))))) :named a0))
(check-sat)
;;;;;;(get-proof)
