(assume a0 (not (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d)))))
(assume a1 (inj_on_d f_d s_d))
(step t0 (cl (not (= (not (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d)))) (not (inj_on_d f_d s_d)))) (not (not (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d))))) (not (inj_on_d f_d s_d))) :rule equiv_pos2)
(step t1 (cl (= (inj_on_d f_d s_d) (inj_on_d f_d s_d))) :rule refl)
(step t2 (cl (= (= (image_d f_d s_d) (image_d f_d s_d)) true)) :rule all_simplify)
(step t3 (cl (= (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d))) (and (inj_on_d f_d s_d) true))) :rule cong :premises (t1 t2))
(step t4 (cl (= (and (inj_on_d f_d s_d) true) (inj_on_d f_d s_d))) :rule all_simplify)
(step t5 (cl (= (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d))) (inj_on_d f_d s_d))) :rule trans :premises (t3 t4))
(step t6 (cl (= (not (and (inj_on_d f_d s_d) (= (image_d f_d s_d) (image_d f_d s_d)))) (not (inj_on_d f_d s_d)))) :rule cong :premises (t5))
(step t7 (cl (not (inj_on_d f_d s_d))) :rule resolution :premises (t0 t6 a0))
(step t8 (cl) :rule resolution :premises (a1 t7))
