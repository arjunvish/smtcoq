(assume a0 (not (= (fold_d max_d (tl_d (keys_d ta_d)) (hd_d (keys_d ta_d))) (fold_d max_d (tl_d (keys_d ta_d)) (hd_d (keys_d ta_d))))))
(assume a1 (is_rbt_d ta_d))
(assume a2 (not (= ta_d empty_d)))
(assume a3 (= ta_d (branch_d x21_d x22_d x23_d x24_d x25_d)))
(step t0 (cl (not (= (not (= (fold_d max_d (tl_d (keys_d ta_d)) (hd_d (keys_d ta_d))) (fold_d max_d (tl_d (keys_d ta_d)) (hd_d (keys_d ta_d))))) false)) (not (not (= (fold_d max_d (tl_d (keys_d ta_d)) (hd_d (keys_d ta_d))) (fold_d max_d (tl_d (keys_d ta_d)) (hd_d (keys_d ta_d)))))) false) :rule equiv_pos2)
(step t1 (cl (= (= (fold_d max_d (tl_d (keys_d ta_d)) (hd_d (keys_d ta_d))) (fold_d max_d (tl_d (keys_d ta_d)) (hd_d (keys_d ta_d)))) true)) :rule all_simplify)
(step t2 (cl (= (not (= (fold_d max_d (tl_d (keys_d ta_d)) (hd_d (keys_d ta_d))) (fold_d max_d (tl_d (keys_d ta_d)) (hd_d (keys_d ta_d))))) (not true))) :rule cong :premises (t1))
(step t3 (cl (= (not true) false)) :rule all_simplify)
(step t4 (cl (= (not (= (fold_d max_d (tl_d (keys_d ta_d)) (hd_d (keys_d ta_d))) (fold_d max_d (tl_d (keys_d ta_d)) (hd_d (keys_d ta_d))))) false)) :rule trans :premises (t2 t3))
(step t5 (cl false) :rule resolution :premises (t0 t4 a0))
(step t6 (cl (not false)) :rule false)
(step t7 (cl) :rule resolution :premises (t5 t6))
