(assume a0 (not (= (islimpt_d x_d (minus_d s_d t_d)) (islimpt_d x_d s_d))))
(assume a1 (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))
(assume a2 (= (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))) (islimpt_d x_d s_d)))
(step t0 (cl (not (= (or (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) (or (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d t_d)) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))))) (not (or (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))))) (or (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d t_d)) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))))) :rule equiv_pos2)
(step t1 (cl (= (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))))) :rule refl)
(step t2 (cl (= (not (not (islimpt_d x_d (minus_d s_d t_d)))) (islimpt_d x_d (minus_d s_d t_d)))) :rule all_simplify)
(step t3 (cl (= (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))))) :rule refl)
(step t4 (cl (= (or (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) (or (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d t_d)) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))))) :rule cong :premises (t1 t2 t3))
(step t5 (cl (and (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d)))) (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (not (islimpt_d x_d (minus_d s_d t_d))))) :rule and_neg)
(step t6 (cl (=> (and (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) (and (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d))))) :rule implies_neg1)
(anchor :step t7)
(assume t7.a0 (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))
(assume t7.a1 (not (islimpt_d x_d (minus_d s_d t_d))))
(step t7.t0 (cl (=> (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) :rule implies_neg1)
(anchor :step t7.t1)
(assume t7.t1.a0 (not (islimpt_d x_d (minus_d s_d t_d))))
(assume t7.t1.a1 (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))
(step t7.t1.t0 (cl (= (= (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))) false) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))))) :rule equiv_simplify)
(step t7.t1.t1 (cl (not (= (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))) false)) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule equiv1 :premises (t7.t1.t0))
(step t7.t1.t2 (cl (= x_d x_d)) :rule refl)
(step t7.t1.t3 (cl (= (minus_d s_d (inf_d t_d s_d)) (minus_d s_d t_d))) :rule symm :premises (t7.t1.a1))
(step t7.t1.t4 (cl (= (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))) (islimpt_d x_d (minus_d s_d t_d)))) :rule cong :premises (t7.t1.t2 t7.t1.t3))
(step t7.t1.t5 (cl (= (= (islimpt_d x_d (minus_d s_d t_d)) false) (not (islimpt_d x_d (minus_d s_d t_d))))) :rule equiv_simplify)
(step t7.t1.t6 (cl (= (islimpt_d x_d (minus_d s_d t_d)) false) (not (not (islimpt_d x_d (minus_d s_d t_d))))) :rule equiv2 :premises (t7.t1.t5))
(step t7.t1.t7 (cl (not (not (not (islimpt_d x_d (minus_d s_d t_d))))) (islimpt_d x_d (minus_d s_d t_d))) :rule not_not)
(step t7.t1.t8 (cl (= (islimpt_d x_d (minus_d s_d t_d)) false) (islimpt_d x_d (minus_d s_d t_d))) :rule resolution :premises (t7.t1.t6 t7.t1.t7))
(step t7.t1.t9 (cl (= (islimpt_d x_d (minus_d s_d t_d)) false)) :rule resolution :premises (t7.t1.t8 t7.t1.a0))
(step t7.t1.t10 (cl (= (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))) false)) :rule trans :premises (t7.t1.t4 t7.t1.t9))
(step t7.t1.t11 (cl (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule resolution :premises (t7.t1.t1 t7.t1.t10))
(step t7.t1 (cl (not (not (islimpt_d x_d (minus_d s_d t_d)))) (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule subproof :discharge (t7.t1.a0 t7.t1.a1))
(step t7.t2 (cl (not (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (not (islimpt_d x_d (minus_d s_d t_d)))) :rule and_pos)
(step t7.t3 (cl (not (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) :rule and_pos)
(step t7.t4 (cl (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) (not (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (not (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))))) :rule resolution :premises (t7.t1 t7.t2 t7.t3))
(step t7.t5 (cl (not (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (not (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule reordering :premises (t7.t4))
(step t7.t6 (cl (not (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule contraction :premises (t7.t5))
(step t7.t7 (cl (=> (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule resolution :premises (t7.t0 t7.t6))
(step t7.t8 (cl (=> (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) (not (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))))) :rule implies_neg2)
(step t7.t9 (cl (=> (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) (=> (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))))) :rule resolution :premises (t7.t7 t7.t8))
(step t7.t10 (cl (=> (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))))) :rule contraction :premises (t7.t9))
(step t7.t11 (cl (not (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule implies :premises (t7.t10))
(step t7.t12 (cl (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (not (islimpt_d x_d (minus_d s_d t_d)))) (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) :rule and_neg)
(step t7.t13 (cl (and (not (islimpt_d x_d (minus_d s_d t_d))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) :rule resolution :premises (t7.t12 t7.a1 t7.a0))
(step t7.t14 (cl (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule resolution :premises (t7.t11 t7.t13))
(step t7 (cl (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule subproof :discharge (t7.a0 t7.a1))
(step t8 (cl (not (and (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d))))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) :rule and_pos)
(step t9 (cl (not (and (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d))))) (not (islimpt_d x_d (minus_d s_d t_d)))) :rule and_pos)
(step t10 (cl (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) (not (and (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d))))) (not (and (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d)))))) :rule resolution :premises (t7 t8 t9))
(step t11 (cl (not (and (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d))))) (not (and (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d))))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule reordering :premises (t10))
(step t12 (cl (not (and (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d))))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule contraction :premises (t11))
(step t13 (cl (=> (and (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule resolution :premises (t6 t12))
(step t14 (cl (=> (and (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) (not (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))))) :rule implies_neg2)
(step t15 (cl (=> (and (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) (=> (and (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))))) :rule resolution :premises (t13 t14))
(step t16 (cl (=> (and (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))))) :rule contraction :premises (t15))
(step t17 (cl (not (and (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d))))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule implies :premises (t16))
(step t18 (cl (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule resolution :premises (t5 t17))
(step t19 (cl (or (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) (not (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))))) :rule or_neg)
(step t20 (cl (or (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) (not (not (not (islimpt_d x_d (minus_d s_d t_d)))))) :rule or_neg)
(step t21 (cl (or (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) (not (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))))) :rule or_neg)
(step t22 (cl (or (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) (or (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) (or (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))))) :rule resolution :premises (t18 t19 t20 t21))
(step t23 (cl (or (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (not (islimpt_d x_d (minus_d s_d t_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))))) :rule contraction :premises (t22))
(step t24 (cl (or (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d t_d)) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))))) :rule resolution :premises (t0 t4 t23))
(step t25 (cl (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d t_d)) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule or :premises (t24))
(step t26 (cl (islimpt_d x_d (minus_d s_d t_d)) (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule reordering :premises (t25))
(step t27 (cl (= (islimpt_d x_d s_d) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule symm :premises (a2))
(step t28 (cl (not (islimpt_d x_d s_d)) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule equiv1 :premises (t27))
(step t29 (cl (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d s_d))) :rule reordering :premises (t28))
(step t30 (cl (islimpt_d x_d (minus_d s_d t_d)) (islimpt_d x_d s_d)) :rule not_equiv1 :premises (a0))
(step t31 (cl (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d t_d))) (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) :rule and_neg)
(step t32 (cl (=> (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) :rule implies_neg1)
(anchor :step t33)
(assume t33.a0 (islimpt_d x_d (minus_d s_d t_d)))
(assume t33.a1 (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))
(step t33.t0 (cl (=> (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) :rule implies_neg1)
(anchor :step t33.t1)
(assume t33.t1.a0 (islimpt_d x_d (minus_d s_d t_d)))
(assume t33.t1.a1 (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))
(step t33.t1.t0 (cl (= (= (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))) true) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule equiv_simplify)
(step t33.t1.t1 (cl (not (= (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))) true)) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule equiv1 :premises (t33.t1.t0))
(step t33.t1.t2 (cl (= x_d x_d)) :rule refl)
(step t33.t1.t3 (cl (= (minus_d s_d (inf_d t_d s_d)) (minus_d s_d t_d))) :rule symm :premises (t33.t1.a1))
(step t33.t1.t4 (cl (= (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))) (islimpt_d x_d (minus_d s_d t_d)))) :rule cong :premises (t33.t1.t2 t33.t1.t3))
(step t33.t1.t5 (cl (= (= (islimpt_d x_d (minus_d s_d t_d)) true) (islimpt_d x_d (minus_d s_d t_d)))) :rule equiv_simplify)
(step t33.t1.t6 (cl (= (islimpt_d x_d (minus_d s_d t_d)) true) (not (islimpt_d x_d (minus_d s_d t_d)))) :rule equiv2 :premises (t33.t1.t5))
(step t33.t1.t7 (cl (= (islimpt_d x_d (minus_d s_d t_d)) true)) :rule resolution :premises (t33.t1.t6 t33.t1.a0))
(step t33.t1.t8 (cl (= (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))) true)) :rule trans :premises (t33.t1.t4 t33.t1.t7))
(step t33.t1.t9 (cl (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule resolution :premises (t33.t1.t1 t33.t1.t8))
(step t33.t1 (cl (not (islimpt_d x_d (minus_d s_d t_d))) (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule subproof :discharge (t33.t1.a0 t33.t1.a1))
(step t33.t2 (cl (not (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (islimpt_d x_d (minus_d s_d t_d))) :rule and_pos)
(step t33.t3 (cl (not (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) :rule and_pos)
(step t33.t4 (cl (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))) (not (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (not (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))))) :rule resolution :premises (t33.t1 t33.t2 t33.t3))
(step t33.t5 (cl (not (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (not (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule reordering :premises (t33.t4))
(step t33.t6 (cl (not (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule contraction :premises (t33.t5))
(step t33.t7 (cl (=> (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule resolution :premises (t33.t0 t33.t6))
(step t33.t8 (cl (=> (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule implies_neg2)
(step t33.t9 (cl (=> (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) (=> (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule resolution :premises (t33.t7 t33.t8))
(step t33.t10 (cl (=> (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule contraction :premises (t33.t9))
(step t33.t11 (cl (not (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule implies :premises (t33.t10))
(step t33.t12 (cl (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d t_d))) (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) :rule and_neg)
(step t33.t13 (cl (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) :rule resolution :premises (t33.t12 t33.a0 t33.a1))
(step t33.t14 (cl (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule resolution :premises (t33.t11 t33.t13))
(step t33 (cl (not (islimpt_d x_d (minus_d s_d t_d))) (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule subproof :discharge (t33.a0 t33.a1))
(step t34 (cl (not (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (islimpt_d x_d (minus_d s_d t_d))) :rule and_pos)
(step t35 (cl (not (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) :rule and_pos)
(step t36 (cl (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))) (not (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (not (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))))) :rule resolution :premises (t33 t34 t35))
(step t37 (cl (not (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (not (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule reordering :premises (t36))
(step t38 (cl (not (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule contraction :premises (t37))
(step t39 (cl (=> (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule resolution :premises (t32 t38))
(step t40 (cl (=> (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule implies_neg2)
(step t41 (cl (=> (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) (=> (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule resolution :premises (t39 t40))
(step t42 (cl (=> (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule contraction :premises (t41))
(step t43 (cl (not (and (islimpt_d x_d (minus_d s_d t_d)) (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule implies :premises (t42))
(step t44 (cl (not (islimpt_d x_d (minus_d s_d t_d))) (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d)))) (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule resolution :premises (t31 t43))
(step t45 (cl (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))) (not (islimpt_d x_d (minus_d s_d t_d))) (not (= (minus_d s_d t_d) (minus_d s_d (inf_d t_d s_d))))) :rule reordering :premises (t44))
(step t46 (cl (islimpt_d x_d s_d) (not (islimpt_d x_d (minus_d s_d (inf_d t_d s_d))))) :rule equiv2 :premises (t27))
(step t47 (cl (not (islimpt_d x_d (minus_d s_d t_d))) (not (islimpt_d x_d s_d))) :rule not_equiv2 :premises (a0))
(step t48 (cl (not (islimpt_d x_d (minus_d s_d t_d))) (not (islimpt_d x_d (minus_d s_d t_d)))) :rule resolution :premises (t45 a1 t46 t47))
(step t49 (cl (not (islimpt_d x_d (minus_d s_d t_d)))) :rule contraction :premises (t48))
(step t50 (cl (islimpt_d x_d s_d)) :rule resolution :premises (t30 t49))
(step t51 (cl (islimpt_d x_d (minus_d s_d (inf_d t_d s_d)))) :rule resolution :premises (t29 t50))
(step t52 (cl) :rule resolution :premises (t26 t51 t49 a1))
