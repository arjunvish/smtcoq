(assume a0 (not (subseteq_mset_d (image_mset_d pos_d aA0_d) (nth_d cAs0_d i_d))))
(assume a1 (and (= (subst_cls_d subst_atm_d poss_AA0_d (nth_da eta_s0_d i_d)) (image_mset_d pos_d (nth_db aAs_d i_d))) (subseteq_mset_d poss_AA0_d (nth_d cAs0_d i_d))))
(assume a2 (= (image_mset_d pos_d aA0_d) poss_AA0_d))
(step t0 (cl (not (= (subseteq_mset_d poss_AA0_d (nth_d cAs0_d i_d)) (subseteq_mset_d (image_mset_d pos_d aA0_d) (nth_d cAs0_d i_d)))) (not (subseteq_mset_d poss_AA0_d (nth_d cAs0_d i_d))) (subseteq_mset_d (image_mset_d pos_d aA0_d) (nth_d cAs0_d i_d))) :rule equiv_pos2)
(step t1 (cl (= poss_AA0_d (image_mset_d pos_d aA0_d))) :rule symm :premises (a2))
(step t2 (cl (= (nth_d cAs0_d i_d) (nth_d cAs0_d i_d))) :rule refl)
(step t3 (cl (= (subseteq_mset_d poss_AA0_d (nth_d cAs0_d i_d)) (subseteq_mset_d (image_mset_d pos_d aA0_d) (nth_d cAs0_d i_d)))) :rule cong :premises (t1 t2))
(step t4 (cl (subseteq_mset_d poss_AA0_d (nth_d cAs0_d i_d))) :rule and :premises (a1))
(step t5 (cl (subseteq_mset_d (image_mset_d pos_d aA0_d) (nth_d cAs0_d i_d))) :rule resolution :premises (t0 t3 t4))
(step t6 (cl) :rule resolution :premises (t5 a0))
