(assume a0 (not (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (sup_d (image_d atms_of_d (set_d cAs_d))))))
(assume a1 (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (fun_app_d atms_of_d (sum_mset_d (mset_d cAs_d)))))
(assume a2 (= (fun_app_d atms_of_d (sum_mset_d (mset_d cAs_d))) (sup_d (image_d atms_of_d (set_d cAs_d)))))
(step t0 (cl (not (= (= true false) false)) (not (= true false)) false) :rule equiv_pos2)
(step t1 (cl (= (= true false) false)) :rule all_simplify)
(step t2 (cl (= (= (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (fun_app_d atms_of_d (sum_mset_d (mset_d cAs_d)))) true) (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (fun_app_d atms_of_d (sum_mset_d (mset_d cAs_d)))))) :rule equiv_simplify)
(step t3 (cl (= (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (fun_app_d atms_of_d (sum_mset_d (mset_d cAs_d)))) true) (not (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (fun_app_d atms_of_d (sum_mset_d (mset_d cAs_d)))))) :rule equiv2 :premises (t2))
(step t4 (cl (= (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (fun_app_d atms_of_d (sum_mset_d (mset_d cAs_d)))) true)) :rule resolution :premises (t3 a1))
(step t5 (cl (= true (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (fun_app_d atms_of_d (sum_mset_d (mset_d cAs_d)))))) :rule symm :premises (t4))
(step t6 (cl (= (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))))) :rule refl)
(step t7 (cl (= (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (fun_app_d atms_of_d (sum_mset_d (mset_d cAs_d)))) (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (sup_d (image_d atms_of_d (set_d cAs_d)))))) :rule cong :premises (t6 a2))
(step t8 (cl (= (= (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (sup_d (image_d atms_of_d (set_d cAs_d)))) false) (not (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (sup_d (image_d atms_of_d (set_d cAs_d))))))) :rule equiv_simplify)
(step t9 (cl (= (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (sup_d (image_d atms_of_d (set_d cAs_d)))) false) (not (not (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (sup_d (image_d atms_of_d (set_d cAs_d))))))) :rule equiv2 :premises (t8))
(step t10 (cl (not (not (not (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (sup_d (image_d atms_of_d (set_d cAs_d))))))) (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (sup_d (image_d atms_of_d (set_d cAs_d))))) :rule not_not)
(step t11 (cl (= (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (sup_d (image_d atms_of_d (set_d cAs_d)))) false) (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (sup_d (image_d atms_of_d (set_d cAs_d))))) :rule resolution :premises (t9 t10))
(step t12 (cl (= (less_eq_d (fun_app_d atms_of_d (sum_mset_d (mset_d cs_d))) (sup_d (image_d atms_of_d (set_d cAs_d)))) false)) :rule resolution :premises (t11 a0))
(step t13 (cl (= true false)) :rule trans :premises (t5 t7 t12))
(step t14 (cl false) :rule resolution :premises (t0 t1 t13))
(step t15 (cl (not false)) :rule false)
(step t16 (cl) :rule resolution :premises (t14 t15))
