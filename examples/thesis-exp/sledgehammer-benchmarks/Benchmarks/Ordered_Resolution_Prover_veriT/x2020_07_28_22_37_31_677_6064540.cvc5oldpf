(assume a0 (not (or (not (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))) (= (sup_da (grounding_of_clss_d subst_atm_d q_d)) (sup_da (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))))))
(step t0 (cl (=> (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d)))))) (= (sup_da (grounding_of_clss_d subst_atm_d q_d)) (sup_da (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d)))))))) (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))) :rule implies_neg1)
(anchor :step t1)
(assume t1.a0 (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d)))))))
(step t1.t0 (cl (not (not (not (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))))) (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))) :rule not_not)
(step t1.t1 (cl (not (not (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))))) :rule not_or :premises (a0))
(step t1.t2 (cl (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))) :rule resolution :premises (t1.t0 t1.t1))
(step t1.t3 (cl (= (sup_da (grounding_of_clss_d subst_atm_d q_d)) (sup_da (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d)))))))) :rule cong :premises (t1.t2))
(step t1 (cl (not (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))) (= (sup_da (grounding_of_clss_d subst_atm_d q_d)) (sup_da (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d)))))))) :rule subproof :discharge (t1.a0))
(step t2 (cl (=> (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d)))))) (= (sup_da (grounding_of_clss_d subst_atm_d q_d)) (sup_da (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d)))))))) (= (sup_da (grounding_of_clss_d subst_atm_d q_d)) (sup_da (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d)))))))) :rule resolution :premises (t0 t1))
(step t3 (cl (=> (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d)))))) (= (sup_da (grounding_of_clss_d subst_atm_d q_d)) (sup_da (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d)))))))) (not (= (sup_da (grounding_of_clss_d subst_atm_d q_d)) (sup_da (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))))) :rule implies_neg2)
(step t4 (cl (=> (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d)))))) (= (sup_da (grounding_of_clss_d subst_atm_d q_d)) (sup_da (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d)))))))) (=> (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d)))))) (= (sup_da (grounding_of_clss_d subst_atm_d q_d)) (sup_da (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))))) :rule resolution :premises (t2 t3))
(step t5 (cl (=> (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d)))))) (= (sup_da (grounding_of_clss_d subst_atm_d q_d)) (sup_da (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))))) :rule contraction :premises (t4))
(step t6 (cl (not (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))) (= (sup_da (grounding_of_clss_d subst_atm_d q_d)) (sup_da (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d)))))))) :rule implies :premises (t5))
(step t7 (cl (not (= (sup_da (grounding_of_clss_d subst_atm_d q_d)) (sup_da (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))))) :rule not_or :premises (a0))
(step t8 (cl (not (not (not (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))))) (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))) :rule not_not)
(step t9 (cl (not (not (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))))) :rule not_or :premises (a0))
(step t10 (cl (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))) :rule resolution :premises (t8 t9))
(step t11 (cl) :rule resolution :premises (t6 t7 t10))
