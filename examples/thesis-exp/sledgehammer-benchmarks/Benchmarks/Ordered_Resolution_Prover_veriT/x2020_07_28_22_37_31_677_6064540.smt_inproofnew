(assume a0 (not (or (not (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))) (= (sup_da (grounding_of_clss_d subst_atm_d q_d)) (sup_da (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))))))
(step t2 (cl (not (not (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))))) :rule not_or :premises (a0))
(step t3 (cl (not (not (not (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))))) (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))) :rule not_not)
(step t4 (cl (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))) :rule th_resolution :premises (t3 t2))
(step t5 (cl (not (= (sup_da (grounding_of_clss_d subst_atm_d q_d)) (sup_da (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))))) :rule not_or :premises (a0))
(step t6 (cl (not (= (grounding_of_clss_d subst_atm_d q_d) (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d))))))) (= (sup_da (grounding_of_clss_d subst_atm_d q_d)) (sup_da (sup_d (image_d (grounding_of_cls_d subst_atm_d) (q_of_state_d (pair_d bot_d (pair_da (fun_app_d (sup_da p_d) (insert_d c_d bot_d)) q_d)))))))) :rule eq_congruent)
(step t7 (cl) :rule resolution :premises (t6 t4 t5))
