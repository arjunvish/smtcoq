(assume a0 (not (not (and (subsumes_d subst_atm_d d_d c_d) (not (subsumes_d subst_atm_d c_d d_d))))))
(assume a1 (and (subsumes_d subst_atm_d c_d d_d) (not (subsumes_d subst_atm_d d_d c_d))))
(step t0 (cl (not (= (not (not (and (subsumes_d subst_atm_d d_d c_d) (not (subsumes_d subst_atm_d c_d d_d))))) (and (subsumes_d subst_atm_d d_d c_d) (not (subsumes_d subst_atm_d c_d d_d))))) (not (not (not (and (subsumes_d subst_atm_d d_d c_d) (not (subsumes_d subst_atm_d c_d d_d)))))) (and (subsumes_d subst_atm_d d_d c_d) (not (subsumes_d subst_atm_d c_d d_d)))) :rule equiv_pos2)
(step t1 (cl (= (not (not (and (subsumes_d subst_atm_d d_d c_d) (not (subsumes_d subst_atm_d c_d d_d))))) (and (subsumes_d subst_atm_d d_d c_d) (not (subsumes_d subst_atm_d c_d d_d))))) :rule all_simplify)
(step t2 (cl (and (subsumes_d subst_atm_d d_d c_d) (not (subsumes_d subst_atm_d c_d d_d)))) :rule resolution :premises (t0 t1 a0))
(step t3 (cl (subsumes_d subst_atm_d d_d c_d)) :rule and :premises (t2))
(step t4 (cl (not (subsumes_d subst_atm_d d_d c_d))) :rule and :premises (a1))
(step t5 (cl) :rule resolution :premises (t3 t4))
