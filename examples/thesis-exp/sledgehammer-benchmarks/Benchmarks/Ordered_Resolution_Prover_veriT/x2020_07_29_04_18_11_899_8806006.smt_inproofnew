(assume a0 (not (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))))
(assume a1 (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d)))
(step t3 (cl (not (= subst_atm_d subst_atm_d)) (not (= (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (plus_d (sum_mset_d (mset_d cs0_d)) d0_d))) (not (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d))) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) :rule eq_congruent)
(step t4 (cl (= subst_atm_d subst_atm_d)) :rule eq_reflexive)
(step t5 (cl (not (= (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (plus_d (sum_mset_d (mset_d cs0_d)) d0_d))) (not (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d))) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) :rule th_resolution :premises (t3 t4))
(step t6 (cl (= (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (plus_d (sum_mset_d (mset_d cs0_d)) d0_d))) :rule eq_reflexive)
(step t7 (cl (not (= (comp_subst_d tau_d phi_d) (comp_subst_d eta_d sigma_d))) (= (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d tau_d phi_d)) (subst_cls_d subst_atm_d (plus_d (sum_mset_d (mset_d cs0_d)) d0_d) (comp_subst_d eta_d sigma_d)))) :rule th_resolution :premises (t5 t6))
(step t8 (cl) :rule resolution :premises (t7 a0 a1))
