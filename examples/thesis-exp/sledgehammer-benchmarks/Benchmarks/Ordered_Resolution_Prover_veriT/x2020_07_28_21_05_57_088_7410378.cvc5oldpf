(assume a0 (not (= (and (generalizes_d subst_atm_d d_d d_da) (generalizes_d subst_atm_d d_da d_d)) (and (generalizes_d subst_atm_d d_da d_d) (generalizes_d subst_atm_d d_d d_da)))))
(step t0 (cl (and (generalizes_d subst_atm_d d_d d_da) (generalizes_d subst_atm_d d_da d_d)) (and (generalizes_d subst_atm_d d_da d_d) (generalizes_d subst_atm_d d_d d_da))) :rule not_equiv1 :premises (a0))
(step t1 (cl (not (and (generalizes_d subst_atm_d d_da d_d) (generalizes_d subst_atm_d d_d d_da))) (generalizes_d subst_atm_d d_d d_da)) :rule and_pos)
(step t2 (cl (generalizes_d subst_atm_d d_d d_da) (not (and (generalizes_d subst_atm_d d_da d_d) (generalizes_d subst_atm_d d_d d_da)))) :rule reordering :premises (t1))
(step t3 (cl (not (and (generalizes_d subst_atm_d d_d d_da) (generalizes_d subst_atm_d d_da d_d))) (not (and (generalizes_d subst_atm_d d_da d_d) (generalizes_d subst_atm_d d_d d_da)))) :rule not_equiv2 :premises (a0))
(step t4 (cl (and (generalizes_d subst_atm_d d_da d_d) (generalizes_d subst_atm_d d_d d_da)) (not (generalizes_d subst_atm_d d_da d_d)) (not (generalizes_d subst_atm_d d_d d_da))) :rule and_neg)
(step t5 (cl (and (generalizes_d subst_atm_d d_da d_d) (generalizes_d subst_atm_d d_d d_da)) (not (generalizes_d subst_atm_d d_d d_da)) (not (generalizes_d subst_atm_d d_da d_d))) :rule reordering :premises (t4))
(step t6 (cl (and (generalizes_d subst_atm_d d_d d_da) (generalizes_d subst_atm_d d_da d_d)) (not (generalizes_d subst_atm_d d_d d_da)) (not (generalizes_d subst_atm_d d_da d_d))) :rule and_neg)
(step t7 (cl (not (generalizes_d subst_atm_d d_d d_da)) (not (generalizes_d subst_atm_d d_da d_d)) (not (generalizes_d subst_atm_d d_d d_da)) (not (generalizes_d subst_atm_d d_da d_d))) :rule resolution :premises (t3 t5 t6))
(step t8 (cl (not (generalizes_d subst_atm_d d_d d_da)) (not (generalizes_d subst_atm_d d_da d_d))) :rule contraction :premises (t7))
(step t9 (cl (not (and (generalizes_d subst_atm_d d_da d_d) (generalizes_d subst_atm_d d_d d_da))) (generalizes_d subst_atm_d d_da d_d)) :rule and_pos)
(step t10 (cl (generalizes_d subst_atm_d d_da d_d) (not (and (generalizes_d subst_atm_d d_da d_d) (generalizes_d subst_atm_d d_d d_da)))) :rule reordering :premises (t9))
(step t11 (cl (not (and (generalizes_d subst_atm_d d_d d_da) (generalizes_d subst_atm_d d_da d_d))) (generalizes_d subst_atm_d d_da d_d)) :rule and_pos)
(step t12 (cl (generalizes_d subst_atm_d d_da d_d) (not (and (generalizes_d subst_atm_d d_d d_da) (generalizes_d subst_atm_d d_da d_d)))) :rule reordering :premises (t11))
(step t13 (cl (generalizes_d subst_atm_d d_da d_d) (generalizes_d subst_atm_d d_da d_d)) :rule resolution :premises (t0 t10 t12))
(step t14 (cl (generalizes_d subst_atm_d d_da d_d)) :rule contraction :premises (t13))
(step t15 (cl (not (generalizes_d subst_atm_d d_d d_da))) :rule resolution :premises (t8 t14))
(step t16 (cl (not (and (generalizes_d subst_atm_d d_da d_d) (generalizes_d subst_atm_d d_d d_da)))) :rule resolution :premises (t2 t15))
(step t17 (cl (not (and (generalizes_d subst_atm_d d_d d_da) (generalizes_d subst_atm_d d_da d_d))) (generalizes_d subst_atm_d d_d d_da)) :rule and_pos)
(step t18 (cl (generalizes_d subst_atm_d d_d d_da) (not (and (generalizes_d subst_atm_d d_d d_da) (generalizes_d subst_atm_d d_da d_d)))) :rule reordering :premises (t17))
(step t19 (cl (not (and (generalizes_d subst_atm_d d_d d_da) (generalizes_d subst_atm_d d_da d_d)))) :rule resolution :premises (t18 t15))
(step t20 (cl) :rule resolution :premises (t0 t16 t19))
