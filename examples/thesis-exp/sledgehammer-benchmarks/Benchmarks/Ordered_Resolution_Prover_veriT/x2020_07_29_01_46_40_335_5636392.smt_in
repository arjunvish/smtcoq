; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=20
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A_inference_set_d 0)
(declare-sort A_literal_multiset_set_d 0)
(declare-sort A_literal_multiset_set_llist_d 0)
(declare-sort A_inference_a_literal_multiset_fun_d 0)
(declare-sort A_literal_multiset_set_a_inference_set_fun_d 0)
(declare-sort A_literal_multiset_set_a_literal_multiset_set_fun_d 0)
(declare-fun ns_d () A_literal_multiset_set_llist_d)
(declare-fun rf_d () A_literal_multiset_set_a_literal_multiset_set_fun_d)
(declare-fun ri_d () A_literal_multiset_set_a_inference_set_fun_d)
(declare-fun sup_d (A_literal_multiset_set_d A_literal_multiset_set_d) A_literal_multiset_set_d)
(declare-fun gamma_d () A_inference_set_d)
(declare-fun image_d (A_inference_a_literal_multiset_fun_d A_inference_set_d) A_literal_multiset_set_d)
(declare-fun minus_d (A_inference_set_d A_inference_set_d) A_inference_set_d)
(declare-fun minus_da (A_literal_multiset_set_d A_literal_multiset_set_d) A_literal_multiset_set_d)
(declare-fun fun_app_d (A_literal_multiset_set_a_literal_multiset_set_fun_d A_literal_multiset_set_d) A_literal_multiset_set_d)
(declare-fun less_eq_d (A_literal_multiset_set_d A_literal_multiset_set_d) Bool)
(declare-fun concl_of_d () A_inference_a_literal_multiset_fun_d)
(declare-fun fun_app_da (A_literal_multiset_set_a_inference_set_fun_d A_literal_multiset_set_d) A_inference_set_d)
(declare-fun sup_llist_d (A_literal_multiset_set_llist_d) A_literal_multiset_set_d)
(declare-fun liminf_llist_d (A_literal_multiset_set_llist_d) A_literal_multiset_set_d)
(declare-fun fair_clss_seq_d (A_inference_set_d A_literal_multiset_set_a_literal_multiset_set_fun_d A_literal_multiset_set_a_inference_set_fun_d A_literal_multiset_set_llist_d) Bool)
(declare-fun inferences_from_d (A_inference_set_d A_literal_multiset_set_d) A_inference_set_d)
(declare-fun effective_redundancy_criterion_d (A_inference_set_d A_literal_multiset_set_a_literal_multiset_set_fun_d A_literal_multiset_set_a_inference_set_fun_d) Bool)
(assert (! (=> (effective_redundancy_criterion_d gamma_d rf_d ri_d) (= (fair_clss_seq_d gamma_d rf_d ri_d ns_d) (less_eq_d (image_d concl_of_d (minus_d (inferences_from_d gamma_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))) (fun_app_da ri_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))))) (sup_d (sup_llist_d ns_d) (fun_app_d rf_d (sup_llist_d ns_d)))))) :named a0))
(assert (! (effective_redundancy_criterion_d gamma_d rf_d ri_d) :named a1))
(assert (! (not (= (fair_clss_seq_d gamma_d rf_d ri_d ns_d) (less_eq_d (image_d concl_of_d (minus_d (inferences_from_d gamma_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))) (fun_app_da ri_d (minus_da (liminf_llist_d ns_d) (fun_app_d rf_d (liminf_llist_d ns_d)))))) (sup_d (sup_llist_d ns_d) (fun_app_d rf_d (sup_llist_d ns_d)))))) :named a2))
(check-sat)
;;;;(get-proof)
