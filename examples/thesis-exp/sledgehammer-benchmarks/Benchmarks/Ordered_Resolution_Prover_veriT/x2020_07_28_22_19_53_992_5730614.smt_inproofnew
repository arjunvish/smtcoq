(assume a0 (not (member_d c_mu_d (image_d concl_of_d (inferences_from_d ground_sound_Gamma_d (grounding_of_clss_d subst_atm_d (sup_d cc_d (insert_d (plus_d c_d (add_mset_d l_d zero_d)) bot_d))))))))
(assume a1 (and (= c_mu_d (subst_cls_d subst_atm_d c_d mu_d)) (is_ground_subst_d subst_atm_d mu_d)))
(assume a2 (member_d (subst_cls_d subst_atm_d c_d mu_d) (image_d concl_of_d (inferences_from_d ground_sound_Gamma_d (grounding_of_clss_d subst_atm_d (sup_d cc_d (insert_d (plus_d c_d (add_mset_d l_d zero_d)) bot_d)))))))
(step t4 (cl (= c_mu_d (subst_cls_d subst_atm_d c_d mu_d))) :rule and :premises (a1))
(step t5 (cl (not (= c_mu_d (subst_cls_d subst_atm_d c_d mu_d))) (not (= (image_d concl_of_d (inferences_from_d ground_sound_Gamma_d (grounding_of_clss_d subst_atm_d (sup_d cc_d (insert_d (plus_d c_d (add_mset_d l_d zero_d)) bot_d))))) (image_d concl_of_d (inferences_from_d ground_sound_Gamma_d (grounding_of_clss_d subst_atm_d (sup_d cc_d (insert_d (plus_d c_d (add_mset_d l_d zero_d)) bot_d))))))) (not (member_d (subst_cls_d subst_atm_d c_d mu_d) (image_d concl_of_d (inferences_from_d ground_sound_Gamma_d (grounding_of_clss_d subst_atm_d (sup_d cc_d (insert_d (plus_d c_d (add_mset_d l_d zero_d)) bot_d))))))) (member_d c_mu_d (image_d concl_of_d (inferences_from_d ground_sound_Gamma_d (grounding_of_clss_d subst_atm_d (sup_d cc_d (insert_d (plus_d c_d (add_mset_d l_d zero_d)) bot_d))))))) :rule eq_congruent_pred)
(step t6 (cl (= (image_d concl_of_d (inferences_from_d ground_sound_Gamma_d (grounding_of_clss_d subst_atm_d (sup_d cc_d (insert_d (plus_d c_d (add_mset_d l_d zero_d)) bot_d))))) (image_d concl_of_d (inferences_from_d ground_sound_Gamma_d (grounding_of_clss_d subst_atm_d (sup_d cc_d (insert_d (plus_d c_d (add_mset_d l_d zero_d)) bot_d))))))) :rule eq_reflexive)
(step t7 (cl (not (= c_mu_d (subst_cls_d subst_atm_d c_d mu_d))) (not (member_d (subst_cls_d subst_atm_d c_d mu_d) (image_d concl_of_d (inferences_from_d ground_sound_Gamma_d (grounding_of_clss_d subst_atm_d (sup_d cc_d (insert_d (plus_d c_d (add_mset_d l_d zero_d)) bot_d))))))) (member_d c_mu_d (image_d concl_of_d (inferences_from_d ground_sound_Gamma_d (grounding_of_clss_d subst_atm_d (sup_d cc_d (insert_d (plus_d c_d (add_mset_d l_d zero_d)) bot_d))))))) :rule th_resolution :premises (t5 t6))
(step t8 (cl) :rule resolution :premises (t7 a0 t4 a2))
