(assume a0 (not (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d))))
(assume a1 (= (subst_cls_lists_d subst_atm_d (map_d s_d cAs0_d) eta_s0_d) (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d)))
(assume a2 (= (subst_cls_lists_d subst_atm_d (map_d s_d cAs0_d) eta_s0_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d)))
(step t0 (cl (not (= (= false true) false)) (not (= false true)) false) :rule equiv_pos2)
(step t1 (cl (= (= false true) false)) :rule all_simplify)
(step t2 (cl (= (= (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d)) false) (not (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d))))) :rule equiv_simplify)
(step t3 (cl (= (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d)) false) (not (not (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d))))) :rule equiv2 :premises (t2))
(step t4 (cl (not (not (not (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d))))) (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d))) :rule not_not)
(step t5 (cl (= (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d)) false) (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d))) :rule resolution :premises (t3 t4))
(step t6 (cl (= (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d)) false)) :rule resolution :premises (t5 a0))
(step t7 (cl (= false (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d)))) :rule symm :premises (t6))
(step t8 (cl (= (= (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d)) true) (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d)))) :rule equiv_simplify)
(step t9 (cl (= (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d)) true) (not (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d)))) :rule equiv2 :premises (t8))
(step t10 (cl (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (subst_cls_lists_d subst_atm_d (map_d s_d cAs0_d) eta_s0_d))) :rule symm :premises (a1))
(step t11 (cl (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d))) :rule trans :premises (t10 a2))
(step t12 (cl (= (= (subst_cls_list_d subst_atm_d (map_d s_d cAs0_d) eta_d) (map_d (s_M_d subst_atm_d s_d m_d) cAs_d)) true)) :rule resolution :premises (t9 t11))
(step t13 (cl (= false true)) :rule trans :premises (t7 t12))
(step t14 (cl false) :rule resolution :premises (t0 t1 t13))
(step t15 (cl (not false)) :rule false)
(step t16 (cl) :rule resolution :premises (t14 t15))
