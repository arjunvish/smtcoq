; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A_s_a_fun_fun_d 0)
(declare-sort A_literal_multiset_d 0)
(declare-fun d_d () A_literal_multiset_d)
(declare-fun d_da () A_literal_multiset_d)
(declare-fun subst_atm_d () A_s_a_fun_fun_d)
(declare-fun generalizes_d (A_s_a_fun_fun_d A_literal_multiset_d A_literal_multiset_d) Bool)
(assert (! (not (= (and (generalizes_d subst_atm_d d_d d_da) (generalizes_d subst_atm_d d_da d_d)) (and (generalizes_d subst_atm_d d_da d_d) (generalizes_d subst_atm_d d_d d_da)))) :named a0))
(check-sat)
;;;;(get-proof)
