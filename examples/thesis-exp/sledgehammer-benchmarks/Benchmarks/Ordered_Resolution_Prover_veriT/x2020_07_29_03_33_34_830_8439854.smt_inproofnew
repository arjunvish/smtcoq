(assume a0 (not thesis_d))
(assume a1 (=> (=> (not (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d)) (not (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d))) thesis_d))
(step t3 (cl (= (=> (not (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d)) (not (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d))) (=> (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d) (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d)))) :rule implies_simplify)
(step t4 (cl (= (=> (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d) (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d)) true)) :rule implies_simplify)
(step t5 (cl (= (=> (not (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d)) (not (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d))) true)) :rule trans :premises (t3 t4))
(step t6 (cl (= (=> (=> (not (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d)) (not (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d))) thesis_d) (=> true thesis_d))) :rule cong :premises (t5))
(step t7 (cl (= (=> true thesis_d) thesis_d)) :rule implies_simplify)
(step t8 (cl (= (=> (=> (not (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d)) (not (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d))) thesis_d) thesis_d)) :rule trans :premises (t6 t7))
(step t9 (cl (not (= (=> (=> (not (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d)) (not (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d))) thesis_d) thesis_d)) (not (=> (=> (not (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d)) (not (= (s_M_d subst_atm_d s_d m_d (plus_d d_d (image_mset_d neg_d (mset_d as_d)))) zero_d))) thesis_d)) thesis_d) :rule equiv_pos2)
(step t10 (cl thesis_d) :rule th_resolution :premises (a1 t8 t9))
(step t11 (cl) :rule resolution :premises (t10 a0))
