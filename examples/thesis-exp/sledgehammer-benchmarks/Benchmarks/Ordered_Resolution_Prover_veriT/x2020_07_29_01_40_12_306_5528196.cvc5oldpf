(assume a0 (not (member_d c_d (lnth_d ns_d k_d))))
(assume a1 (=> (and (less_eq_d i_d k_d) (less_d (enat_d k_d) (llength_d ns_d))) (member_d c_d (lnth_d ns_d k_d))))
(assume a2 (less_eq_d i_d k_d))
(assume a3 (less_d (enat_d k_d) (llength_d ns_d)))
(step t0 (cl (and (less_eq_d i_d k_d) (less_d (enat_d k_d) (llength_d ns_d))) (not (less_eq_d i_d k_d)) (not (less_d (enat_d k_d) (llength_d ns_d)))) :rule and_neg)
(step t1 (cl (and (less_eq_d i_d k_d) (less_d (enat_d k_d) (llength_d ns_d)))) :rule resolution :premises (t0 a2 a3))
(step t2 (cl (not (and (less_eq_d i_d k_d) (less_d (enat_d k_d) (llength_d ns_d)))) (member_d c_d (lnth_d ns_d k_d))) :rule implies :premises (a1))
(step t3 (cl (not (and (less_eq_d i_d k_d) (less_d (enat_d k_d) (llength_d ns_d))))) :rule resolution :premises (t2 a0))
(step t4 (cl) :rule resolution :premises (t1 t3))
