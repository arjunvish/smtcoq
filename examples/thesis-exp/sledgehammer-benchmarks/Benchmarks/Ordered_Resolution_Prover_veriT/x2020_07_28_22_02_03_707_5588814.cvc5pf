(assume a0 (not false))
(assume a1 (=> (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da))) false))
(assume a2 (or (and (member_d d_d n_d) (= (s_d d_d) zero_d)) (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da)))))
(assume a3 (=> (and (member_d d_d n_d) (= (s_d d_d) zero_d)) false))
(step t0 (cl (not (= (or (and (member_d d_d n_d) (= (s_d d_d) zero_d)) (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da)))) (or (and (member_d d_d n_d) (= zero_d (s_d d_d))) (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da)))))) (not (or (and (member_d d_d n_d) (= (s_d d_d) zero_d)) (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da))))) (or (and (member_d d_d n_d) (= zero_d (s_d d_d))) (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da))))) :rule equiv_pos2)
(step t1 (cl (= (member_d d_d n_d) (member_d d_d n_d))) :rule refl)
(step t2 (cl (= (= (s_d d_d) zero_d) (= zero_d (s_d d_d)))) :rule all_simplify)
(step t3 (cl (= (and (member_d d_d n_d) (= (s_d d_d) zero_d)) (and (member_d d_d n_d) (= zero_d (s_d d_d))))) :rule cong :premises (t1 t2))
(step t4 (cl (= (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da))) (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da))))) :rule refl)
(step t5 (cl (= (or (and (member_d d_d n_d) (= (s_d d_d) zero_d)) (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da)))) (or (and (member_d d_d n_d) (= zero_d (s_d d_d))) (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da)))))) :rule cong :premises (t3 t4))
(step t6 (cl (or (and (member_d d_d n_d) (= zero_d (s_d d_d))) (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da))))) :rule resolution :premises (t0 t5 a2))
(step t7 (cl (and (member_d d_d n_d) (= zero_d (s_d d_d))) (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da)))) :rule or :premises (t6))
(step t8 (cl (not (= (=> (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da))) false) (not (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da)))))) (not (=> (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da))) false)) (not (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da))))) :rule equiv_pos2)
(step t9 (cl (= (=> (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da))) false) (not (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da)))))) :rule all_simplify)
(step t10 (cl (not (less_d (max_d (atms_of_d d_d)) (max_d (atms_of_d d_da))))) :rule resolution :premises (t8 t9 a1))
(step t11 (cl (and (member_d d_d n_d) (= zero_d (s_d d_d)))) :rule resolution :premises (t7 t10))
(step t12 (cl (not (= (=> (and (member_d d_d n_d) (= (s_d d_d) zero_d)) false) (not (and (member_d d_d n_d) (= zero_d (s_d d_d)))))) (not (=> (and (member_d d_d n_d) (= (s_d d_d) zero_d)) false)) (not (and (member_d d_d n_d) (= zero_d (s_d d_d))))) :rule equiv_pos2)
(step t13 (cl (= (=> (and (member_d d_d n_d) (= (s_d d_d) zero_d)) false) (not (and (member_d d_d n_d) (= (s_d d_d) zero_d))))) :rule all_simplify)
(step t14 (cl (= (not (and (member_d d_d n_d) (= (s_d d_d) zero_d))) (not (and (member_d d_d n_d) (= zero_d (s_d d_d)))))) :rule cong :premises (t3))
(step t15 (cl (= (=> (and (member_d d_d n_d) (= (s_d d_d) zero_d)) false) (not (and (member_d d_d n_d) (= zero_d (s_d d_d)))))) :rule trans :premises (t13 t14))
(step t16 (cl (not (and (member_d d_d n_d) (= zero_d (s_d d_d))))) :rule resolution :premises (t12 t15 a3))
(step t17 (cl) :rule resolution :premises (t11 t16))
