
/home/arjun/Desktop/smtcoq/arjunvish-smtcoq-veritAst/smtcoq/examples/thesis-exp/sledgehammer-benchmarks/Benchmarks/isabelle-mirabelle/HOL-Library/smt_verit/x2020_07_23_15_39_12_904_5134392cvc5.v
Certif after storing shared terms: 
(a0, AssumeAST, (cl  ((not (or  (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))))), [], [])
(t0, Impn1AST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [], [])
(t1, SubproofAST
	(t1.a0, AssumeAST, (cl  (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [], [])
(t1.t0, NotnotAST, (cl  ((not (not (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [], [])
(t1.t1, NorAST, (cl  ((not (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ a0], [])
(t1.t2, ResoAST, (cl  (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [ t1.t0 t1.t1], [])
(t1.t3, CongAST, (cl  (((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ t1.t2], [])
(t1, DischargeAST, (cl  ((not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))) (((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [], [])
	, (cl ), [], [])
(t2, ResoAST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) (((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ t0 t1], [])
(t3, Impn2AST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) ((not ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))))))), [], [])
(t4, ResoAST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))))))), [ t2 t3], [])
(t5, SameAST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))))))), [ t4], [])
(t6, ImpAST, (cl  ((not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))) (((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ t5], [])
(t7, NorAST, (cl  ((not ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))))))), [ a0], [])
(t8, NotnotAST, (cl  ((not (not (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [], [])
(t9, NorAST, (cl  ((not (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ a0], [])
(t10, ResoAST, (cl  (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [ t8 t9], [])
(t11, ResoAST, (cl ), [ t6 t7 t10], [])

Certif after process_fins: 
(a0, AssumeAST, (cl  ((not (or  (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))))), [], [])
(t0, Impn1AST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [], [])
(t1, SubproofAST
	(t1.a0, AssumeAST, (cl  (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [], [])
(t1.t0, NotnotAST, (cl  ((not (not (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [], [])
(t1.t1, NorAST, (cl  ((not (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ a0], [])
(t1.t2, ResoAST, (cl  (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [ t1.t0 t1.t1], [])
(t1.t3, CongAST, (cl  (((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ t1.t2], [])
(t1, DischargeAST, (cl  ((not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))) (((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [], [])
	, (cl ), [], [])
(t2, ResoAST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) (((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ t0 t1], [])
(t3, Impn2AST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) ((not ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))))))), [], [])
(t4, ResoAST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))))))), [ t2 t3], [])
(t5, SameAST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))))))), [ t4], [])
(t6, ImpAST, (cl  ((not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))) (((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ t5], [])
(t7, NorAST, (cl  ((not ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))))))), [ a0], [])
(t8, NotnotAST, (cl  ((not (not (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [], [])
(t9, NorAST, (cl  ((not (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ a0], [])
(t10, ResoAST, (cl  (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [ t8 t9], [])
(t11, ResoAST, (cl ), [ t6 t7 t10], [])

Certif after process_hole: 
(a0, AssumeAST, (cl  ((not (or  (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))))), [], [])
(t0, Impn1AST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [], [])
(t1, SubproofAST
	(t1.a0, AssumeAST, (cl  (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [], [])
(t1.t0, NotnotAST, (cl  ((not (not (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [], [])
(t1.t1, NorAST, (cl  ((not (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ a0], [])
(t1.t2, ResoAST, (cl  (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [ t1.t0 t1.t1], [])
(t1.t3, CongAST, (cl  (((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ t1.t2], [])
(t1, DischargeAST, (cl  ((not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))) (((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [], [])
	, (cl ), [], [])
(t2, ResoAST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) (((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ t0 t1], [])
(t3, Impn2AST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) ((not ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))))))), [], [])
(t4, ResoAST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))))))), [ t2 t3], [])
(t5, SameAST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))))))), [ t4], [])
(t6, ImpAST, (cl  ((not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))) (((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ t5], [])
(t7, NorAST, (cl  ((not ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))))))), [ a0], [])
(t8, NotnotAST, (cl  ((not (not (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [], [])
(t9, NorAST, (cl  ((not (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ a0], [])
(t10, ResoAST, (cl  (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [ t8 t9], [])
(t11, ResoAST, (cl ), [ t6 t7 t10], [])

Certif after process_notnot: 
(a0, AssumeAST, (cl  ((not (or  (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))))), [], [])
(t0, Impn1AST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [], [])
(t1, SubproofAST
	(t1.a0, AssumeAST, (cl  (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [], [])
(t1.t1, NorAST, (cl  ((not (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ a0], [])
(t1.t2, ResoAST, (cl  (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [ t1.t1], [])
(t1.t3, CongAST, (cl  (((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ t1.t2], [])
(t1, DischargeAST, (cl  ((not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))) (((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [], [])
	, (cl ), [], [])
(t2, ResoAST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) (((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ t0 t1], [])
(t3, Impn2AST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) ((not ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))))))), [], [])
(t4, ResoAST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))) ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))))))), [ t2 t3], [])
(t5, SameAST, (cl  ((imp  ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))) ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))))))), [ t4], [])
(t6, ImpAST, (cl  ((not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))) (((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ t5], [])
(t7, NorAST, (cl  ((not ((abs_d ( (modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)))) = (abs_d ( (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d)))))))), [ a0], [])
(t9, NorAST, (cl  ((not (not ((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))))), [ a0], [])
(t10, ResoAST, (cl  (((modulo_d ( (of_nat_d ( (suc_d ( ka_d)))) n_d)) = (modulo_d ( ((rep_d ( one_d)) + (rep_d ( (of_nat_da ( ka_d))))) n_d))))), [ t9], [])
(t11, ResoAST, (cl ), [ t6 t7 t10], [])

nwt: (op_6 (aka Smt_var_modulo_d) (op_7 (aka Smt_var_of_nat_d) (op_5 (aka Smt_var_suc_d) op_1 (aka Smt_var_ka_d))) op_0 (aka Smt_var_n_d))File "./x2020_07_23_15_39_12_904_5134392cvc5.v", line 8, characters 2-412:
Error:
Verit.import_trace: preprocessing certificate 

Error: Smtcoq_plugin.SmtForm.Make(Atom).NotWellTyped(_)
Position: Line 20 Position 1

