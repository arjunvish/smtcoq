(assume a0 (not (= (= (f_d x_d) (f_d y_d)) (= x_d y_d))))
(assume a1 (= (g_d (f_d x_d)) x_d))
(assume a2 (= (g_d (f_d y_d)) y_d))
(step t0 (cl (=> (= x_d y_d) (= (f_d x_d) (f_d y_d))) (= x_d y_d)) :rule implies_neg1)
(anchor :step t1)
(assume t1.a0 (= x_d y_d))
(step t1.t0 (cl (=> (= x_d y_d) (= (f_d x_d) (f_d y_d))) (= x_d y_d)) :rule implies_neg1)
(anchor :step t1.t1)
(assume t1.t1.a0 (= x_d y_d))
(step t1.t1.t0 (cl (= y_d x_d)) :rule symm :premises (t1.t1.a0))
(step t1.t1.t1 (cl (= x_d y_d)) :rule symm :premises (t1.t1.t0))
(step t1.t1.t2 (cl (= (f_d x_d) (f_d y_d))) :rule cong :premises (t1.t1.t1))
(step t1.t1 (cl (not (= x_d y_d)) (= (f_d x_d) (f_d y_d))) :rule subproof :discharge (t1.t1.a0))
(step t1.t2 (cl (=> (= x_d y_d) (= (f_d x_d) (f_d y_d))) (= (f_d x_d) (f_d y_d))) :rule resolution :premises (t1.t0 t1.t1))
(step t1.t3 (cl (=> (= x_d y_d) (= (f_d x_d) (f_d y_d))) (not (= (f_d x_d) (f_d y_d)))) :rule implies_neg2)
(step t1.t4 (cl (=> (= x_d y_d) (= (f_d x_d) (f_d y_d))) (=> (= x_d y_d) (= (f_d x_d) (f_d y_d)))) :rule resolution :premises (t1.t2 t1.t3))
(step t1.t5 (cl (=> (= x_d y_d) (= (f_d x_d) (f_d y_d)))) :rule contraction :premises (t1.t4))
(step t1.t6 (cl (not (= x_d y_d)) (= (f_d x_d) (f_d y_d))) :rule implies :premises (t1.t5))
(step t1.t7 (cl (= (f_d x_d) (f_d y_d))) :rule resolution :premises (t1.t6 t1.a0))
(step t1 (cl (not (= x_d y_d)) (= (f_d x_d) (f_d y_d))) :rule subproof :discharge (t1.a0))
(step t2 (cl (=> (= x_d y_d) (= (f_d x_d) (f_d y_d))) (= (f_d x_d) (f_d y_d))) :rule resolution :premises (t0 t1))
(step t3 (cl (=> (= x_d y_d) (= (f_d x_d) (f_d y_d))) (not (= (f_d x_d) (f_d y_d)))) :rule implies_neg2)
(step t4 (cl (=> (= x_d y_d) (= (f_d x_d) (f_d y_d))) (=> (= x_d y_d) (= (f_d x_d) (f_d y_d)))) :rule resolution :premises (t2 t3))
(step t5 (cl (=> (= x_d y_d) (= (f_d x_d) (f_d y_d)))) :rule contraction :premises (t4))
(step t6 (cl (not (= x_d y_d)) (= (f_d x_d) (f_d y_d))) :rule implies :premises (t5))
(step t7 (cl (= (f_d x_d) (f_d y_d)) (not (= x_d y_d))) :rule reordering :premises (t6))
(step t8 (cl (= (f_d x_d) (f_d y_d)) (= x_d y_d)) :rule not_equiv1 :premises (a0))
(step t9 (cl (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d)))) (not (= (f_d x_d) (f_d y_d))) (not (= x_d (g_d (f_d x_d)))) (not (= y_d (g_d (f_d y_d))))) :rule and_neg)
(step t10 (cl (=> (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d)))) (= x_d y_d)) (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d))))) :rule implies_neg1)
(anchor :step t11)
(assume t11.a0 (= (f_d x_d) (f_d y_d)))
(assume t11.a1 (= x_d (g_d (f_d x_d))))
(assume t11.a2 (= y_d (g_d (f_d y_d))))
(step t11.t0 (cl (=> (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d)))) (= x_d y_d)) (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))))) :rule implies_neg1)
(anchor :step t11.t1)
(assume t11.t1.a0 (= y_d (g_d (f_d y_d))))
(assume t11.t1.a1 (= (f_d x_d) (f_d y_d)))
(assume t11.t1.a2 (= x_d (g_d (f_d x_d))))
(step t11.t1.t0 (cl (= x_d (g_d (f_d x_d)))) :rule symm :premises (a1))
(step t11.t1.t1 (cl (= (f_d y_d) (f_d x_d))) :rule symm :premises (t11.t1.a1))
(step t11.t1.t2 (cl (= (f_d x_d) (f_d y_d))) :rule symm :premises (t11.t1.t1))
(step t11.t1.t3 (cl (= (g_d (f_d x_d)) (g_d (f_d y_d)))) :rule cong :premises (t11.t1.t2))
(step t11.t1.t4 (cl (= x_d y_d)) :rule trans :premises (t11.t1.t0 t11.t1.t3 a2))
(step t11.t1 (cl (not (= y_d (g_d (f_d y_d)))) (not (= (f_d x_d) (f_d y_d))) (not (= x_d (g_d (f_d x_d)))) (= x_d y_d)) :rule subproof :discharge (t11.t1.a0 t11.t1.a1 t11.t1.a2))
(step t11.t2 (cl (not (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))))) (= y_d (g_d (f_d y_d)))) :rule and_pos)
(step t11.t3 (cl (not (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))))) (= (f_d x_d) (f_d y_d))) :rule and_pos)
(step t11.t4 (cl (not (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))))) (= x_d (g_d (f_d x_d)))) :rule and_pos)
(step t11.t5 (cl (= x_d y_d) (not (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))))) (not (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))))) (not (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d)))))) :rule resolution :premises (t11.t1 t11.t2 t11.t3 t11.t4))
(step t11.t6 (cl (not (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))))) (not (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))))) (not (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))))) (= x_d y_d)) :rule reordering :premises (t11.t5))
(step t11.t7 (cl (not (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))))) (= x_d y_d)) :rule contraction :premises (t11.t6))
(step t11.t8 (cl (=> (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d)))) (= x_d y_d)) (= x_d y_d)) :rule resolution :premises (t11.t0 t11.t7))
(step t11.t9 (cl (=> (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d)))) (= x_d y_d)) (not (= x_d y_d))) :rule implies_neg2)
(step t11.t10 (cl (=> (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d)))) (= x_d y_d)) (=> (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d)))) (= x_d y_d))) :rule resolution :premises (t11.t8 t11.t9))
(step t11.t11 (cl (=> (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d)))) (= x_d y_d))) :rule contraction :premises (t11.t10))
(step t11.t12 (cl (not (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))))) (= x_d y_d)) :rule implies :premises (t11.t11))
(step t11.t13 (cl (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d)))) (not (= y_d (g_d (f_d y_d)))) (not (= (f_d x_d) (f_d y_d))) (not (= x_d (g_d (f_d x_d))))) :rule and_neg)
(step t11.t14 (cl (= y_d (g_d (f_d y_d)))) :rule symm :premises (a2))
(step t11.t15 (cl (= x_d (g_d (f_d x_d)))) :rule symm :premises (a1))
(step t11.t16 (cl (and (= y_d (g_d (f_d y_d))) (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))))) :rule resolution :premises (t11.t13 t11.t14 t11.a0 t11.t15))
(step t11.t17 (cl (= x_d y_d)) :rule resolution :premises (t11.t12 t11.t16))
(step t11 (cl (not (= (f_d x_d) (f_d y_d))) (not (= x_d (g_d (f_d x_d)))) (not (= y_d (g_d (f_d y_d)))) (= x_d y_d)) :rule subproof :discharge (t11.a0 t11.a1 t11.a2))
(step t12 (cl (not (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d))))) (= (f_d x_d) (f_d y_d))) :rule and_pos)
(step t13 (cl (not (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d))))) (= x_d (g_d (f_d x_d)))) :rule and_pos)
(step t14 (cl (not (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d))))) (= y_d (g_d (f_d y_d)))) :rule and_pos)
(step t15 (cl (= x_d y_d) (not (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d))))) (not (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d))))) (not (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d)))))) :rule resolution :premises (t11 t12 t13 t14))
(step t16 (cl (not (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d))))) (not (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d))))) (not (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d))))) (= x_d y_d)) :rule reordering :premises (t15))
(step t17 (cl (not (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d))))) (= x_d y_d)) :rule contraction :premises (t16))
(step t18 (cl (=> (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d)))) (= x_d y_d)) (= x_d y_d)) :rule resolution :premises (t10 t17))
(step t19 (cl (=> (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d)))) (= x_d y_d)) (not (= x_d y_d))) :rule implies_neg2)
(step t20 (cl (=> (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d)))) (= x_d y_d)) (=> (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d)))) (= x_d y_d))) :rule resolution :premises (t18 t19))
(step t21 (cl (=> (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d)))) (= x_d y_d))) :rule contraction :premises (t20))
(step t22 (cl (not (and (= (f_d x_d) (f_d y_d)) (= x_d (g_d (f_d x_d))) (= y_d (g_d (f_d y_d))))) (= x_d y_d)) :rule implies :premises (t21))
(step t23 (cl (not (= (f_d x_d) (f_d y_d))) (not (= x_d (g_d (f_d x_d)))) (not (= y_d (g_d (f_d y_d)))) (= x_d y_d)) :rule resolution :premises (t9 t22))
(step t24 (cl (= x_d y_d) (not (= (f_d x_d) (f_d y_d))) (not (= x_d (g_d (f_d x_d)))) (not (= y_d (g_d (f_d y_d))))) :rule reordering :premises (t23))
(step t25 (cl (= y_d (g_d (f_d y_d)))) :rule symm :premises (a2))
(step t26 (cl (= x_d (g_d (f_d x_d)))) :rule symm :premises (a1))
(step t27 (cl (not (= (f_d x_d) (f_d y_d))) (not (= x_d y_d))) :rule not_equiv2 :premises (a0))
(step t28 (cl (not (= (f_d x_d) (f_d y_d))) (not (= (f_d x_d) (f_d y_d)))) :rule resolution :premises (t24 t25 t26 t27))
(step t29 (cl (not (= (f_d x_d) (f_d y_d)))) :rule contraction :premises (t28))
(step t30 (cl (= x_d y_d)) :rule resolution :premises (t8 t29))
(step t31 (cl) :rule resolution :premises (t7 t30 t29))
