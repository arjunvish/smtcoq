Certif after storing shared terms: 
(a0, AssumeAST, (cl  ((not ((not (a = b)) = (or  (and  a (not b)) (and  b (not a))))))), [], [])
(t0, OrpAST, (cl  ((not (or  (and  a (not b)) (and  b (not a))))) ((and  a (not b))) ((and  b (not a)))), [], [])
(t1, SameAST, (cl  ((and  a (not b))) ((and  b (not a))) ((not (or  (and  a (not b)) (and  b (not a)))))), [ t0], [])
(t2, Nequ1AST, (cl  ((not (a = b))) ((or  (and  a (not b)) (and  b (not a))))), [ a0], [])
(t3, Equn2AST, (cl  ((a = b)) (a) (b)), [], [])
(t4, SameAST, (cl  (a) (b) ((a = b))), [ t3], [])
(t5, AndpAST, (cl  ((not (and  a (not b)))) ((not b))), [], [])
(t6, SameAST, (cl  ((not b)) ((not (and  a (not b))))), [ t5], [])
(t7, Equn1AST, (cl  ((a = b)) ((not a)) ((not b))), [], [])
(t8, SameAST, (cl  ((a = b)) ((not b)) ((not a))), [ t7], [])
(t9, AndpAST, (cl  ((not (and  b (not a)))) ((not a))), [], [])
(t10, SameAST, (cl  ((not a)) ((not (and  b (not a))))), [ t9], [])
(t11, ResoAST, (cl  ((not b)) ((not b)) ((not a)) ((not a))), [ t1 t2 t6 t8 t10], [])
(t12, SameAST, (cl  ((not b)) ((not a))), [ t11], [])
(t13, OrnAST, (cl  ((or  (and  a (not b)) (and  b (not a)))) ((not (and  a (not b))))), [], [])
(t14, Equp2AST, (cl  ((not ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))) = (or  (a = b) (not (or  (and  a (not b)) (and  b (not a)))))))) ((not (or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))) ((or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))), [], [])
(t15, AllsimpAST, (cl  (((not (not (a = b))) = (a = b)))), [], [])
(t16, ReflAST, (cl  (((not (or  (and  a (not b)) (and  b (not a)))) = (not (or  (and  a (not b)) (and  b (not a))))))), [], [])
(t17, CongAST, (cl  (((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))) = (or  (a = b) (not (or  (and  a (not b)) (and  b (not a)))))))), [ t15 t16], [])
(t18, Nequ2AST, (cl  ((not (not (a = b)))) ((not (or  (and  a (not b)) (and  b (not a)))))), [ a0], [])
(t19, OrnAST, (cl  ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a)))))) ((not (not (not (a = b)))))), [], [])
(t20, OrnAST, (cl  ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a)))))) ((not (not (or  (and  a (not b)) (and  b (not a))))))), [], [])
(t21, ResoAST, (cl  ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a)))))) ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))), [ t18 t19 t20], [])
(t22, SameAST, (cl  ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))), [ t21], [])
(t23, ResoAST, (cl  ((or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))), [ t14 t17 t22], [])
(t24, OrAST, (cl  ((a = b)) ((not (or  (and  a (not b)) (and  b (not a)))))), [ t23], [])
(t25, Equp2AST, (cl  ((not ((or  (and  a (not b)) (not a) (not (not b))) = (or  (and  a (not b)) (not a) b)))) ((not (or  (and  a (not b)) (not a) (not (not b))))) ((or  (and  a (not b)) (not a) b))), [], [])
(t26, ReflAST, (cl  (((and  a (not b)) = (and  a (not b))))), [], [])
(t27, ReflAST, (cl  (((not a) = (not a)))), [], [])
(t28, AllsimpAST, (cl  (((not (not b)) = b))), [], [])
(t29, CongAST, (cl  (((or  (and  a (not b)) (not a) (not (not b))) = (or  (and  a (not b)) (not a) b)))), [ t26 t27 t28], [])
(t30, AndnAST, (cl  ((and  a (not b))) ((not a)) ((not (not b)))), [], [])
(t31, OrnAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((not (and  a (not b))))), [], [])
(t32, OrnAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((not (not a)))), [], [])
(t33, OrnAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((not (not (not b))))), [], [])
(t34, ResoAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((or  (and  a (not b)) (not a) (not (not b)))) ((or  (and  a (not b)) (not a) (not (not b))))), [ t30 t31 t32 t33], [])
(t35, SameAST, (cl  ((or  (and  a (not b)) (not a) (not (not b))))), [ t34], [])
(t36, ResoAST, (cl  ((or  (and  a (not b)) (not a) b))), [ t25 t29 t35], [])
(t37, OrAST, (cl  ((and  a (not b))) ((not a)) (b)), [ t36], [])
(t38, SameAST, (cl  (b) ((and  a (not b))) ((not a))), [ t37], [])
(t39, Equp2AST, (cl  ((not (a = b))) ((not a)) (b)), [], [])
(t40, SameAST, (cl  (b) ((not (a = b))) ((not a))), [ t39], [])
(t41, ResoAST, (cl  (b) ((not a)) (b) ((not a))), [ t13 t24 t38 t40], [])
(t42, SameAST, (cl  (b) ((not a))), [ t41], [])
(t43, ResoAST, (cl  ((not a)) ((not a))), [ t12 t42], [])
(t44, SameAST, (cl  ((not a))), [ t43], [])
(t45, OrnAST, (cl  ((or  (and  a (not b)) (and  b (not a)))) ((not (and  b (not a))))), [], [])
(t46, OrAST, (cl  ((a = b)) ((not (or  (and  a (not b)) (and  b (not a)))))), [ t23], [])
(t47, Equp2AST, (cl  ((not ((or  (and  b (not a)) (not b) (not (not a))) = (or  (and  b (not a)) (not b) a)))) ((not (or  (and  b (not a)) (not b) (not (not a))))) ((or  (and  b (not a)) (not b) a))), [], [])
(t48, ReflAST, (cl  (((and  b (not a)) = (and  b (not a))))), [], [])
(t49, ReflAST, (cl  (((not b) = (not b)))), [], [])
(t50, AllsimpAST, (cl  (((not (not a)) = a))), [], [])
(t51, CongAST, (cl  (((or  (and  b (not a)) (not b) (not (not a))) = (or  (and  b (not a)) (not b) a)))), [ t48 t49 t50], [])
(t52, AndnAST, (cl  ((and  b (not a))) ((not b)) ((not (not a)))), [], [])
(t53, OrnAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((not (and  b (not a))))), [], [])
(t54, OrnAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((not (not b)))), [], [])
(t55, OrnAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((not (not (not a))))), [], [])
(t56, ResoAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((or  (and  b (not a)) (not b) (not (not a)))) ((or  (and  b (not a)) (not b) (not (not a))))), [ t52 t53 t54 t55], [])
(t57, SameAST, (cl  ((or  (and  b (not a)) (not b) (not (not a))))), [ t56], [])
(t58, ResoAST, (cl  ((or  (and  b (not a)) (not b) a))), [ t47 t51 t57], [])
(t59, OrAST, (cl  ((and  b (not a))) ((not b)) (a)), [ t58], [])
(t60, SameAST, (cl  (a) ((not b)) ((and  b (not a)))), [ t59], [])
(t61, Equp1AST, (cl  ((not (a = b))) (a) ((not b))), [], [])
(t62, SameAST, (cl  (a) ((not (a = b))) ((not b))), [ t61], [])
(t63, ResoAST, (cl  ((not b)) ((not b))), [ t45 t46 t60 t44 t62 t44], [])
(t64, SameAST, (cl  ((not b))), [ t63], [])
(t65, ResoAST, (cl  ((a = b))), [ t4 t44 t64], [])
(t66, ResoAST, (cl  ((or  (and  a (not b)) (and  b (not a))))), [ t2 t65], [])
(t67, AndpAST, (cl  ((not (and  b (not a)))) (b)), [], [])
(t68, SameAST, (cl  (b) ((not (and  b (not a))))), [ t67], [])
(t69, ResoAST, (cl  ((not (and  b (not a))))), [ t68 t64], [])
(t70, AndpAST, (cl  ((not (and  a (not b)))) (a)), [], [])
(t71, SameAST, (cl  (a) ((not (and  a (not b))))), [ t70], [])
(t72, ResoAST, (cl  ((not (and  a (not b))))), [ t71 t44], [])
(t73, ResoAST, (cl ), [ t1 t66 t69 t72], [])

Certif after process_cong: 
(a0, AssumeAST, (cl  ((not ((not (a = b)) = (or  (and  a (not b)) (and  b (not a))))))), [], [])
(t0, OrpAST, (cl  ((not (or  (and  a (not b)) (and  b (not a))))) ((and  a (not b))) ((and  b (not a)))), [], [])
(t2, Nequ1AST, (cl  ((not (a = b))) ((or  (and  a (not b)) (and  b (not a))))), [ a0], [])
(t3, Equn2AST, (cl  ((a = b)) (a) (b)), [], [])
(t5, AndpAST, (cl  ((not (and  a (not b)))) ((not b))), [], [])
(t7, Equn1AST, (cl  ((a = b)) ((not a)) ((not b))), [], [])
(t9, AndpAST, (cl  ((not (and  b (not a)))) ((not a))), [], [])
(t11, ResoAST, (cl  ((not b)) ((not b)) ((not a)) ((not a))), [ t0 t2 t5 t7 t9], [])
(t13, OrnAST, (cl  ((or  (and  a (not b)) (and  b (not a)))) ((not (and  a (not b))))), [], [])
(t14, Equp2AST, (cl  ((not ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))) = (or  (a = b) (not (or  (and  a (not b)) (and  b (not a)))))))) ((not (or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))) ((or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))), [], [])
(t15, AllsimpAST, (cl  (((not (not (a = b))) = (a = b)))), [], [])
(t16, ReflAST, (cl  (((not (or  (and  a (not b)) (and  b (not a)))) = (not (or  (and  a (not b)) (and  b (not a))))))), [], [])
(x1, OrpAST, (cl  ((not (or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))) ((not (not (a = b)))) ((not (or  (and  a (not b)) (and  b (not a)))))), [], [])
(x3, Equp2AST, (cl  ((not ((not (not (a = b))) = (a = b)))) ((not (not (not (a = b))))) ((a = b))), [], [])
(x2, ResoAST, (cl  ((not (not (not (a = b))))) ((a = b))), [ x3 t15], [])
(x5, OrnAST, (cl  ((or  (a = b) (not (or  (and  a (not b)) (and  b (not a)))))) ((not (not (or  (and  a (not b)) (and  b (not a))))))), [], [ 1])
(x4, OrnAST, (cl  ((or  (a = b) (not (or  (and  a (not b)) (and  b (not a)))))) ((not (a = b)))), [], [ 0])
(x6, ResoAST, (cl  ((not (or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))) ((or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))), [ x1 x2 x5 x4], [])
(x7, Equn2AST, (cl  (((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))) = (or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))) ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a)))))) ((or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))), [], [])
(x8, ResoAST, (cl  (((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))) = (or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))) ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))), [ x6 x7], [])
(x9, OrpAST, (cl  ((not (or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))) ((a = b)) ((not (or  (and  a (not b)) (and  b (not a)))))), [], [])
(x11, Equp1AST, (cl  ((not ((not (not (a = b))) = (a = b)))) ((not (not (a = b)))) ((not (a = b)))), [], [])
(x10, ResoAST, (cl  ((not (not (a = b)))) ((not (a = b)))), [ x11 t15], [])
(x13, OrnAST, (cl  ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a)))))) ((not (not (or  (and  a (not b)) (and  b (not a))))))), [], [ 1])
(x12, OrnAST, (cl  ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a)))))) ((not (not (not (a = b)))))), [], [ 0])
(x14, ResoAST, (cl  ((not (or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))) ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))), [ x9 x10 x13 x12], [])
(x15, Equn1AST, (cl  (((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))) = (or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))) ((not (or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))) ((not (or  (a = b) (not (or  (and  a (not b)) (and  b (not a)))))))), [], [])
(x16, ResoAST, (cl  (((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))) = (or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))) ((not (or  (a = b) (not (or  (and  a (not b)) (and  b (not a)))))))), [ x14 x15], [])
(t17, ResoAST, (cl  (((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))) = (or  (a = b) (not (or  (and  a (not b)) (and  b (not a)))))))), [ x8 x16], [])
(t18, Nequ2AST, (cl  ((not (not (a = b)))) ((not (or  (and  a (not b)) (and  b (not a)))))), [ a0], [])
(t19, OrnAST, (cl  ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a)))))) ((not (not (not (a = b)))))), [], [])
(t20, OrnAST, (cl  ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a)))))) ((not (not (or  (and  a (not b)) (and  b (not a))))))), [], [])
(t21, ResoAST, (cl  ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a)))))) ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))), [ t18 t19 t20], [])
(t23, ResoAST, (cl  ((or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))), [ t14 t17 t21], [])
(t24, OrAST, (cl  ((a = b)) ((not (or  (and  a (not b)) (and  b (not a)))))), [ t23], [])
(t25, Equp2AST, (cl  ((not ((or  (and  a (not b)) (not a) (not (not b))) = (or  (and  a (not b)) (not a) b)))) ((not (or  (and  a (not b)) (not a) (not (not b))))) ((or  (and  a (not b)) (not a) b))), [], [])
(t26, ReflAST, (cl  (((and  a (not b)) = (and  a (not b))))), [], [])
(t27, ReflAST, (cl  (((not a) = (not a)))), [], [])
(t28, AllsimpAST, (cl  (((not (not b)) = b))), [], [])
(x17, OrpAST, (cl  ((not (or  (and  a (not b)) (not a) (not (not b))))) ((and  a (not b))) ((not a)) ((not (not b)))), [], [])
(x19, Equp2AST, (cl  ((not ((not (not b)) = b))) ((not (not (not b)))) (b)), [], [])
(x18, ResoAST, (cl  ((not (not (not b)))) (b)), [ x19 t28], [])
(x22, OrnAST, (cl  ((or  (and  a (not b)) (not a) b)) ((not b))), [], [ 2])
(x21, OrnAST, (cl  ((or  (and  a (not b)) (not a) b)) ((not (not a)))), [], [ 1])
(x20, OrnAST, (cl  ((or  (and  a (not b)) (not a) b)) ((not (and  a (not b))))), [], [ 0])
(x23, ResoAST, (cl  ((not (or  (and  a (not b)) (not a) (not (not b))))) ((or  (and  a (not b)) (not a) b))), [ x17 x18 x22 x21 x20], [])
(x24, Equn2AST, (cl  (((or  (and  a (not b)) (not a) (not (not b))) = (or  (and  a (not b)) (not a) b))) ((or  (and  a (not b)) (not a) (not (not b)))) ((or  (and  a (not b)) (not a) b))), [], [])
(x25, ResoAST, (cl  (((or  (and  a (not b)) (not a) (not (not b))) = (or  (and  a (not b)) (not a) b))) ((or  (and  a (not b)) (not a) (not (not b))))), [ x23 x24], [])
(x26, OrpAST, (cl  ((not (or  (and  a (not b)) (not a) b))) ((and  a (not b))) ((not a)) (b)), [], [])
(x28, Equp1AST, (cl  ((not ((not (not b)) = b))) ((not (not b))) ((not b))), [], [])
(x27, ResoAST, (cl  ((not (not b))) ((not b))), [ x28 t28], [])
(x31, OrnAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((not (not (not b))))), [], [ 2])
(x30, OrnAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((not (not a)))), [], [ 1])
(x29, OrnAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((not (and  a (not b))))), [], [ 0])
(x32, ResoAST, (cl  ((not (or  (and  a (not b)) (not a) b))) ((or  (and  a (not b)) (not a) (not (not b))))), [ x26 x27 x31 x30 x29], [])
(x33, Equn1AST, (cl  (((or  (and  a (not b)) (not a) (not (not b))) = (or  (and  a (not b)) (not a) b))) ((not (or  (and  a (not b)) (not a) (not (not b))))) ((not (or  (and  a (not b)) (not a) b)))), [], [])
(x34, ResoAST, (cl  (((or  (and  a (not b)) (not a) (not (not b))) = (or  (and  a (not b)) (not a) b))) ((not (or  (and  a (not b)) (not a) b)))), [ x32 x33], [])
(t29, ResoAST, (cl  (((or  (and  a (not b)) (not a) (not (not b))) = (or  (and  a (not b)) (not a) b)))), [ x25 x34], [])
(t30, AndnAST, (cl  ((and  a (not b))) ((not a)) ((not (not b)))), [], [])
(t31, OrnAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((not (and  a (not b))))), [], [])
(t32, OrnAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((not (not a)))), [], [])
(t33, OrnAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((not (not (not b))))), [], [])
(t34, ResoAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((or  (and  a (not b)) (not a) (not (not b)))) ((or  (and  a (not b)) (not a) (not (not b))))), [ t30 t31 t32 t33], [])
(t36, ResoAST, (cl  ((or  (and  a (not b)) (not a) b))), [ t25 t29 t34], [])
(t37, OrAST, (cl  ((and  a (not b))) ((not a)) (b)), [ t36], [])
(t39, Equp2AST, (cl  ((not (a = b))) ((not a)) (b)), [], [])
(t41, ResoAST, (cl  (b) ((not a)) (b) ((not a))), [ t13 t24 t37 t39], [])
(t43, ResoAST, (cl  ((not a)) ((not a))), [ t11 t41], [])
(t45, OrnAST, (cl  ((or  (and  a (not b)) (and  b (not a)))) ((not (and  b (not a))))), [], [])
(t46, OrAST, (cl  ((a = b)) ((not (or  (and  a (not b)) (and  b (not a)))))), [ t23], [])
(t47, Equp2AST, (cl  ((not ((or  (and  b (not a)) (not b) (not (not a))) = (or  (and  b (not a)) (not b) a)))) ((not (or  (and  b (not a)) (not b) (not (not a))))) ((or  (and  b (not a)) (not b) a))), [], [])
(t48, ReflAST, (cl  (((and  b (not a)) = (and  b (not a))))), [], [])
(t49, ReflAST, (cl  (((not b) = (not b)))), [], [])
(t50, AllsimpAST, (cl  (((not (not a)) = a))), [], [])
(x35, OrpAST, (cl  ((not (or  (and  b (not a)) (not b) (not (not a))))) ((and  b (not a))) ((not b)) ((not (not a)))), [], [])
(x37, Equp2AST, (cl  ((not ((not (not a)) = a))) ((not (not (not a)))) (a)), [], [])
(x36, ResoAST, (cl  ((not (not (not a)))) (a)), [ x37 t50], [])
(x40, OrnAST, (cl  ((or  (and  b (not a)) (not b) a)) ((not a))), [], [ 2])
(x39, OrnAST, (cl  ((or  (and  b (not a)) (not b) a)) ((not (not b)))), [], [ 1])
(x38, OrnAST, (cl  ((or  (and  b (not a)) (not b) a)) ((not (and  b (not a))))), [], [ 0])
(x41, ResoAST, (cl  ((not (or  (and  b (not a)) (not b) (not (not a))))) ((or  (and  b (not a)) (not b) a))), [ x35 x36 x40 x39 x38], [])
(x42, Equn2AST, (cl  (((or  (and  b (not a)) (not b) (not (not a))) = (or  (and  b (not a)) (not b) a))) ((or  (and  b (not a)) (not b) (not (not a)))) ((or  (and  b (not a)) (not b) a))), [], [])
(x43, ResoAST, (cl  (((or  (and  b (not a)) (not b) (not (not a))) = (or  (and  b (not a)) (not b) a))) ((or  (and  b (not a)) (not b) (not (not a))))), [ x41 x42], [])
(x44, OrpAST, (cl  ((not (or  (and  b (not a)) (not b) a))) ((and  b (not a))) ((not b)) (a)), [], [])
(x46, Equp1AST, (cl  ((not ((not (not a)) = a))) ((not (not a))) ((not a))), [], [])
(x45, ResoAST, (cl  ((not (not a))) ((not a))), [ x46 t50], [])
(x49, OrnAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((not (not (not a))))), [], [ 2])
(x48, OrnAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((not (not b)))), [], [ 1])
(x47, OrnAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((not (and  b (not a))))), [], [ 0])
(x50, ResoAST, (cl  ((not (or  (and  b (not a)) (not b) a))) ((or  (and  b (not a)) (not b) (not (not a))))), [ x44 x45 x49 x48 x47], [])
(x51, Equn1AST, (cl  (((or  (and  b (not a)) (not b) (not (not a))) = (or  (and  b (not a)) (not b) a))) ((not (or  (and  b (not a)) (not b) (not (not a))))) ((not (or  (and  b (not a)) (not b) a)))), [], [])
(x52, ResoAST, (cl  (((or  (and  b (not a)) (not b) (not (not a))) = (or  (and  b (not a)) (not b) a))) ((not (or  (and  b (not a)) (not b) a)))), [ x50 x51], [])
(t51, ResoAST, (cl  (((or  (and  b (not a)) (not b) (not (not a))) = (or  (and  b (not a)) (not b) a)))), [ x43 x52], [])
(t52, AndnAST, (cl  ((and  b (not a))) ((not b)) ((not (not a)))), [], [])
(t53, OrnAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((not (and  b (not a))))), [], [])
(t54, OrnAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((not (not b)))), [], [])
(t55, OrnAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((not (not (not a))))), [], [])
(t56, ResoAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((or  (and  b (not a)) (not b) (not (not a)))) ((or  (and  b (not a)) (not b) (not (not a))))), [ t52 t53 t54 t55], [])
(t58, ResoAST, (cl  ((or  (and  b (not a)) (not b) a))), [ t47 t51 t56], [])
(t59, OrAST, (cl  ((and  b (not a))) ((not b)) (a)), [ t58], [])
(t61, Equp1AST, (cl  ((not (a = b))) (a) ((not b))), [], [])
(t63, ResoAST, (cl  ((not b)) ((not b))), [ t45 t46 t59 t43 t61 t43], [])
(t65, ResoAST, (cl  ((a = b))), [ t3 t43 t63], [])
(t66, ResoAST, (cl  ((or  (and  a (not b)) (and  b (not a))))), [ t2 t65], [])
(t67, AndpAST, (cl  ((not (and  b (not a)))) (b)), [], [])
(t69, ResoAST, (cl  ((not (and  b (not a))))), [ t67 t63], [])
(t70, AndpAST, (cl  ((not (and  a (not b)))) (a)), [], [])
(t72, ResoAST, (cl  ((not (and  a (not b))))), [ t70 t43], [])
(t73, ResoAST, (cl ), [ t0 t66 t69 t72], [])

Certif after process_trivial: 
(a0, AssumeAST, (cl  ((not ((not (a = b)) = (or  (and  a (not b)) (and  b (not a))))))), [], [])
(t0, OrpAST, (cl  ((not (or  (and  a (not b)) (and  b (not a))))) ((and  a (not b))) ((and  b (not a)))), [], [])
(t2, Nequ1AST, (cl  ((not (a = b))) ((or  (and  a (not b)) (and  b (not a))))), [ a0], [])
(t3, Equn2AST, (cl  ((a = b)) (a) (b)), [], [])
(t5, AndpAST, (cl  ((not (and  a (not b)))) ((not b))), [], [ 1])
(t7, Equn1AST, (cl  ((a = b)) ((not a)) ((not b))), [], [])
(t9, AndpAST, (cl  ((not (and  b (not a)))) ((not a))), [], [ 1])
(t11, ResoAST, (cl  ((not b)) ((not b)) ((not a)) ((not a))), [ t0 t2 t5 t7 t9], [])
(t13, OrnAST, (cl  ((or  (and  a (not b)) (and  b (not a)))) ((not (and  a (not b))))), [], [ 0])
(t14, Equp2AST, (cl  ((not ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))) = (or  (a = b) (not (or  (and  a (not b)) (and  b (not a)))))))) ((not (or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))) ((or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))), [], [])
(t15, HoleAST, (cl  (((not (not (a = b))) = (a = b)))), [], [])
(x53, Equn1AST, (cl  (((not (or  (and  a (not b)) (and  b (not a)))) = (not (or  (and  a (not b)) (and  b (not a)))))) ((not (not (or  (and  a (not b)) (and  b (not a))))))), [], [])
(x54, Equn2AST, (cl  (((not (or  (and  a (not b)) (and  b (not a)))) = (not (or  (and  a (not b)) (and  b (not a)))))) ((not (or  (and  a (not b)) (and  b (not a)))))), [], [])
(t16, ResoAST, (cl  (((not (or  (and  a (not b)) (and  b (not a)))) = (not (or  (and  a (not b)) (and  b (not a))))))), [ x53 x54], [])
(x1, OrpAST, (cl  ((not (or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))) ((not (not (a = b)))) ((not (or  (and  a (not b)) (and  b (not a)))))), [], [])
(x5, OrnAST, (cl  ((or  (a = b) (not (or  (and  a (not b)) (and  b (not a)))))) ((not (not (or  (and  a (not b)) (and  b (not a))))))), [], [ 1])
(x4, OrnAST, (cl  ((or  (a = b) (not (or  (and  a (not b)) (and  b (not a)))))) ((not (a = b)))), [], [ 0])
(x63, WeakenAST, (cl  ((not ((not (not (a = b))) = (a = b)))) ((not (or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))) ((not (not (a = b)))) ((not (or  (and  a (not b)) (and  b (not a)))))), [ x1], [])
(x6, ResoAST, (cl  ((not (or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))) ((or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))), [ x63 x5 x4 t15], [])
-----------------------------------------------------------------------x6
~(~~(a = b) v ~((a ^ ~b) v (b ^ ~a))), (a = b) v ~((a ^ ~b) v (b ^ ~a))
(x7, Equn2AST, (cl  (((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))) = (or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))) ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a)))))) ((or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))), [], [])
---------------------------------------------------------------------------------------------------------------------------------------------------x7
(~~(a = b) v (~((a ^ ~b) v (b ^ ~a)))) = ((a = b) v ~((a ^ ~b) v (b ^ ~a))), ~~(a = b) v (~((a ^ ~b) v (b ^ ~a))), (a = b) v ~((a ^ ~b) v (b ^ ~a))
(x8, ResoAST, (cl  (((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))) = (or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))) ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))), [ x6 x7], [])
-----------------------------------------------------------------------x6  ---------------------------------------------------------------------------------------------------------------------------------------------------x7
~(~~(a = b) v ~((a ^ ~b) v (b ^ ~a))), (a = b) v ~((a ^ ~b) v (b ^ ~a))    (~~(a = b) v (~((a ^ ~b) v (b ^ ~a)))) = ((a = b) v ~((a ^ ~b) v (b ^ ~a))), ~~(a = b) v (~((a ^ ~b) v (b ^ ~a))), (a = b) v ~((a ^ ~b) v (b ^ ~a))
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
(x9, OrpAST, (cl  ((not (or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))) ((a = b)) ((not (or  (and  a (not b)) (and  b (not a)))))), [], [])
(x13, OrnAST, (cl  ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a)))))) ((not (not (or  (and  a (not b)) (and  b (not a))))))), [], [ 1])
(x12, OrnAST, (cl  ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a)))))) ((not (not (not (a = b)))))), [], [ 0])
(x64, WeakenAST, (cl  ((not ((not (not (a = b))) = (a = b)))) ((not (or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))) ((a = b)) ((not (or  (and  a (not b)) (and  b (not a)))))), [ x9], [])
(x14, ResoAST, (cl  ((not (or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))) ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))), [ x64 x13 x12 t15], [])
(x15, Equn1AST, (cl  (((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))) = (or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))) ((not (or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))) ((not (or  (a = b) (not (or  (and  a (not b)) (and  b (not a)))))))), [], [])
(x16, ResoAST, (cl  (((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))) = (or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))) ((not (or  (a = b) (not (or  (and  a (not b)) (and  b (not a)))))))), [ x14 x15], [])
(t17, ResoAST, (cl  (((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))) = (or  (a = b) (not (or  (and  a (not b)) (and  b (not a)))))))), [ x8 x16], [])
(t18, Nequ2AST, (cl  ((not (not (a = b)))) ((not (or  (and  a (not b)) (and  b (not a)))))), [ a0], [])
(t19, OrnAST, (cl  ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a)))))) ((not (not (not (a = b)))))), [], [ 0])
(t20, OrnAST, (cl  ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a)))))) ((not (not (or  (and  a (not b)) (and  b (not a))))))), [], [ 1])
(t21, ResoAST, (cl  ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a)))))) ((or  (not (not (a = b))) (not (or  (and  a (not b)) (and  b (not a))))))), [ t18 t19 t20], [])
(t23, ResoAST, (cl  ((or  (a = b) (not (or  (and  a (not b)) (and  b (not a))))))), [ t14 t17 t21], [])
(t24, OrAST, (cl  ((a = b)) ((not (or  (and  a (not b)) (and  b (not a)))))), [ t23], [])
(t25, Equp2AST, (cl  ((not ((or  (and  a (not b)) (not a) (not (not b))) = (or  (and  a (not b)) (not a) b)))) ((not (or  (and  a (not b)) (not a) (not (not b))))) ((or  (and  a (not b)) (not a) b))), [], [])
(x55, Equn1AST, (cl  (((and  a (not b)) = (and  a (not b)))) ((not (and  a (not b))))), [], [])
(x56, Equn2AST, (cl  (((and  a (not b)) = (and  a (not b)))) ((and  a (not b)))), [], [])
(t26, ResoAST, (cl  (((and  a (not b)) = (and  a (not b))))), [ x55 x56], [])
(x57, Equn1AST, (cl  (((not a) = (not a))) ((not (not a)))), [], [])
(x58, Equn2AST, (cl  (((not a) = (not a))) ((not a))), [], [])
(t27, ResoAST, (cl  (((not a) = (not a)))), [ x57 x58], [])
(t28, HoleAST, (cl  (((not (not b)) = b))), [], [])
(x17, OrpAST, (cl  ((not (or  (and  a (not b)) (not a) (not (not b))))) ((and  a (not b))) ((not a)) ((not (not b)))), [], [])
(x22, OrnAST, (cl  ((or  (and  a (not b)) (not a) b)) ((not b))), [], [ 2])
(x21, OrnAST, (cl  ((or  (and  a (not b)) (not a) b)) ((not (not a)))), [], [ 1])
(x20, OrnAST, (cl  ((or  (and  a (not b)) (not a) b)) ((not (and  a (not b))))), [], [ 0])
(x65, WeakenAST, (cl  ((not ((not (not b)) = b))) ((not (or  (and  a (not b)) (not a) (not (not b))))) ((and  a (not b))) ((not a)) ((not (not b)))), [ x17], [])
(x23, ResoAST, (cl  ((not (or  (and  a (not b)) (not a) (not (not b))))) ((or  (and  a (not b)) (not a) b))), [ x65 x22 x21 x20 t28], [])
(x24, Equn2AST, (cl  (((or  (and  a (not b)) (not a) (not (not b))) = (or  (and  a (not b)) (not a) b))) ((or  (and  a (not b)) (not a) (not (not b)))) ((or  (and  a (not b)) (not a) b))), [], [])
(x25, ResoAST, (cl  (((or  (and  a (not b)) (not a) (not (not b))) = (or  (and  a (not b)) (not a) b))) ((or  (and  a (not b)) (not a) (not (not b))))), [ x23 x24], [])
(x26, OrpAST, (cl  ((not (or  (and  a (not b)) (not a) b))) ((and  a (not b))) ((not a)) (b)), [], [])
(x31, OrnAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((not (not (not b))))), [], [ 2])
(x30, OrnAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((not (not a)))), [], [ 1])
(x29, OrnAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((not (and  a (not b))))), [], [ 0])
(x66, WeakenAST, (cl  ((not ((not (not b)) = b))) ((not (or  (and  a (not b)) (not a) b))) ((and  a (not b))) ((not a)) (b)), [ x26], [])
(x32, ResoAST, (cl  ((not (or  (and  a (not b)) (not a) b))) ((or  (and  a (not b)) (not a) (not (not b))))), [ x66 x31 x30 x29 t28], [])
(x33, Equn1AST, (cl  (((or  (and  a (not b)) (not a) (not (not b))) = (or  (and  a (not b)) (not a) b))) ((not (or  (and  a (not b)) (not a) (not (not b))))) ((not (or  (and  a (not b)) (not a) b)))), [], [])
(x34, ResoAST, (cl  (((or  (and  a (not b)) (not a) (not (not b))) = (or  (and  a (not b)) (not a) b))) ((not (or  (and  a (not b)) (not a) b)))), [ x32 x33], [])
(t29, ResoAST, (cl  (((or  (and  a (not b)) (not a) (not (not b))) = (or  (and  a (not b)) (not a) b)))), [ x25 x34], [])
(t30, AndnAST, (cl  ((and  a (not b))) ((not a)) ((not (not b)))), [], [])
(t31, OrnAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((not (and  a (not b))))), [], [ 0])
(t32, OrnAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((not (not a)))), [], [ 1])
(t33, OrnAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((not (not (not b))))), [], [ 2])
(t34, ResoAST, (cl  ((or  (and  a (not b)) (not a) (not (not b)))) ((or  (and  a (not b)) (not a) (not (not b)))) ((or  (and  a (not b)) (not a) (not (not b))))), [ t30 t31 t32 t33], [])
(t36, ResoAST, (cl  ((or  (and  a (not b)) (not a) b))), [ t25 t29 t34], [])
(t37, OrAST, (cl  ((and  a (not b))) ((not a)) (b)), [ t36], [])
(t39, Equp2AST, (cl  ((not (a = b))) ((not a)) (b)), [], [])
(t41, ResoAST, (cl  (b) ((not a)) (b) ((not a))), [ t13 t24 t37 t39], [])
(t43, ResoAST, (cl  ((not a)) ((not a))), [ t11 t41], [])
(t45, OrnAST, (cl  ((or  (and  a (not b)) (and  b (not a)))) ((not (and  b (not a))))), [], [ 1])
(t46, OrAST, (cl  ((a = b)) ((not (or  (and  a (not b)) (and  b (not a)))))), [ t23], [])
(t47, Equp2AST, (cl  ((not ((or  (and  b (not a)) (not b) (not (not a))) = (or  (and  b (not a)) (not b) a)))) ((not (or  (and  b (not a)) (not b) (not (not a))))) ((or  (and  b (not a)) (not b) a))), [], [])
(x59, Equn1AST, (cl  (((and  b (not a)) = (and  b (not a)))) ((not (and  b (not a))))), [], [])
(x60, Equn2AST, (cl  (((and  b (not a)) = (and  b (not a)))) ((and  b (not a)))), [], [])
(t48, ResoAST, (cl  (((and  b (not a)) = (and  b (not a))))), [ x59 x60], [])
(x61, Equn1AST, (cl  (((not b) = (not b))) ((not (not b)))), [], [])
(x62, Equn2AST, (cl  (((not b) = (not b))) ((not b))), [], [])
(t49, ResoAST, (cl  (((not b) = (not b)))), [ x61 x62], [])
(t50, HoleAST, (cl  (((not (not a)) = a))), [], [])
(x35, OrpAST, (cl  ((not (or  (and  b (not a)) (not b) (not (not a))))) ((and  b (not a))) ((not b)) ((not (not a)))), [], [])
(x40, OrnAST, (cl  ((or  (and  b (not a)) (not b) a)) ((not a))), [], [ 2])
(x39, OrnAST, (cl  ((or  (and  b (not a)) (not b) a)) ((not (not b)))), [], [ 1])
(x38, OrnAST, (cl  ((or  (and  b (not a)) (not b) a)) ((not (and  b (not a))))), [], [ 0])
(x67, WeakenAST, (cl  ((not ((not (not a)) = a))) ((not (or  (and  b (not a)) (not b) (not (not a))))) ((and  b (not a))) ((not b)) ((not (not a)))), [ x35], [])
(x41, ResoAST, (cl  ((not (or  (and  b (not a)) (not b) (not (not a))))) ((or  (and  b (not a)) (not b) a))), [ x67 x40 x39 x38 t50], [])
(x42, Equn2AST, (cl  (((or  (and  b (not a)) (not b) (not (not a))) = (or  (and  b (not a)) (not b) a))) ((or  (and  b (not a)) (not b) (not (not a)))) ((or  (and  b (not a)) (not b) a))), [], [])
(x43, ResoAST, (cl  (((or  (and  b (not a)) (not b) (not (not a))) = (or  (and  b (not a)) (not b) a))) ((or  (and  b (not a)) (not b) (not (not a))))), [ x41 x42], [])
(x44, OrpAST, (cl  ((not (or  (and  b (not a)) (not b) a))) ((and  b (not a))) ((not b)) (a)), [], [])
(x49, OrnAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((not (not (not a))))), [], [ 2])
(x48, OrnAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((not (not b)))), [], [ 1])
(x47, OrnAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((not (and  b (not a))))), [], [ 0])
(x68, WeakenAST, (cl  ((not ((not (not a)) = a))) ((not (or  (and  b (not a)) (not b) a))) ((and  b (not a))) ((not b)) (a)), [ x44], [])
(x50, ResoAST, (cl  ((not (or  (and  b (not a)) (not b) a))) ((or  (and  b (not a)) (not b) (not (not a))))), [ x68 x49 x48 x47 t50], [])
(x51, Equn1AST, (cl  (((or  (and  b (not a)) (not b) (not (not a))) = (or  (and  b (not a)) (not b) a))) ((not (or  (and  b (not a)) (not b) (not (not a))))) ((not (or  (and  b (not a)) (not b) a)))), [], [])
(x52, ResoAST, (cl  (((or  (and  b (not a)) (not b) (not (not a))) = (or  (and  b (not a)) (not b) a))) ((not (or  (and  b (not a)) (not b) a)))), [ x50 x51], [])
(t51, ResoAST, (cl  (((or  (and  b (not a)) (not b) (not (not a))) = (or  (and  b (not a)) (not b) a)))), [ x43 x52], [])
(t52, AndnAST, (cl  ((and  b (not a))) ((not b)) ((not (not a)))), [], [])
(t53, OrnAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((not (and  b (not a))))), [], [ 0])
(t54, OrnAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((not (not b)))), [], [ 1])
(t55, OrnAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((not (not (not a))))), [], [ 2])
(t56, ResoAST, (cl  ((or  (and  b (not a)) (not b) (not (not a)))) ((or  (and  b (not a)) (not b) (not (not a)))) ((or  (and  b (not a)) (not b) (not (not a))))), [ t52 t53 t54 t55], [])
(t58, ResoAST, (cl  ((or  (and  b (not a)) (not b) a))), [ t47 t51 t56], [])
(t59, OrAST, (cl  ((and  b (not a))) ((not b)) (a)), [ t58], [])
(t61, Equp1AST, (cl  ((not (a = b))) (a) ((not b))), [], [])
(t63, ResoAST, (cl  ((not b)) ((not b))), [ t45 t46 t59 t43 t61 t43], [])
(t65, ResoAST, (cl  ((a = b))), [ t3 t43 t63], [])
(t66, ResoAST, (cl  ((or  (and  a (not b)) (and  b (not a))))), [ t2 t65], [])
(t67, AndpAST, (cl  ((not (and  b (not a)))) (b)), [], [ 0])
(t69, ResoAST, (cl  ((not (and  b (not a))))), [ t67 t63], [])
(t70, AndpAST, (cl  ((not (and  a (not b)))) (a)), [], [ 0])
(t72, ResoAST, (cl  ((not (and  a (not b))))), [ t70 t43], [])
(t73, ResoAST, (cl ), [ t0 t66 t69 t72], [])

WARNING: assuming the following hypothesis:
(is_true (Smt_var_a <---> Smt_var_a))

WARNING: assuming the following hypothesis:
(is_true (Smt_var_b <---> Smt_var_b))

WARNING: assuming the following hypothesis:
(is_true ((Smt_var_a <---> Smt_var_b) <---> Smt_var_a <---> Smt_var_b))

     = false
     : bool
