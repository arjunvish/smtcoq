(assume a0 (not (not (= da_d zero_d))))
(assume a1 (member_d da_d n_d))
(assume a2 (not (member_d zero_d n_d)))
(step t0 (cl (not (= (member_d da_d n_d) (member_d zero_d n_d))) (not (member_d da_d n_d)) (member_d zero_d n_d)) :rule equiv_pos2)
(step t1 (cl (not (= (not (not (= da_d zero_d))) (= da_d zero_d))) (not (not (not (= da_d zero_d)))) (= da_d zero_d)) :rule equiv_pos2)
(step t2 (cl (= (not (not (= da_d zero_d))) (= da_d zero_d))) :rule all_simplify)
(step t3 (cl (= da_d zero_d)) :rule resolution :premises (t1 t2 a0))
(step t4 (cl (= n_d n_d)) :rule refl)
(step t5 (cl (= (member_d da_d n_d) (member_d zero_d n_d))) :rule cong :premises (t3 t4))
(step t6 (cl (member_d zero_d n_d)) :rule resolution :premises (t0 t5 a1))
(step t7 (cl) :rule resolution :premises (a2 t6))
