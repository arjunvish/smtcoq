(assume a0 (not (not (and (generalizes_d subst_atm_d d_d c_d) (not (generalizes_d subst_atm_d c_d d_d))))))
(assume a1 (and (generalizes_d subst_atm_d c_d d_d) (not (generalizes_d subst_atm_d d_d c_d))))
(step t1 (cl (not (= (not (not (and (generalizes_d subst_atm_d d_d c_d) (not (generalizes_d subst_atm_d c_d d_d))))) (and (generalizes_d subst_atm_d d_d c_d) (not (generalizes_d subst_atm_d c_d d_d))))) (not (not (not (and (generalizes_d subst_atm_d d_d c_d) (not (generalizes_d subst_atm_d c_d d_d)))))) (and (generalizes_d subst_atm_d d_d c_d) (not (generalizes_d subst_atm_d c_d d_d)))) :rule equiv_pos2)
(step t2 (cl (= (not (not (and (generalizes_d subst_atm_d d_d c_d) (not (generalizes_d subst_atm_d c_d d_d))))) (and (generalizes_d subst_atm_d d_d c_d) (not (generalizes_d subst_atm_d c_d d_d))))) :rule all_simplify :args (not_simplify1 (and (generalizes_d subst_atm_d d_d c_d) (not (generalizes_d subst_atm_d c_d d_d)))))
(step t3 (cl (and (generalizes_d subst_atm_d d_d c_d) (not (generalizes_d subst_atm_d c_d d_d)))) :rule resolution :premises (t1 t2 a0))
(step t4 (cl (generalizes_d subst_atm_d d_d c_d)) :rule and :premises (t3))
(step t5 (cl (not (generalizes_d subst_atm_d d_d c_d))) :rule and :premises (a1))
(step t6 (cl) :rule resolution :premises (t4 t5))
