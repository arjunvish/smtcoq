(assume a0 (not (= (size_d cAs_d) (size_da as_d))))
(assume a1 (= (size_d cAs_d) n_d))
(assume a2 (= (size_da as_d) n_d))
(step t1 (cl (not (= (= (size_da as_d) n_d) (= (size_d cAs_d) (size_da as_d)))) (not (= (size_da as_d) n_d)) (= (size_d cAs_d) (size_da as_d))) :rule equiv_pos2)
(step t2 (cl (= (= (size_da as_d) n_d) (= n_d (size_da as_d)))) :rule all_simplify)
(step t3 (cl (= n_d (size_d cAs_d))) :rule symm :premises (a1))
(step t4 (cl (= (size_da as_d) (size_da as_d))) :rule refl)
(step t5 (cl (= (= n_d (size_da as_d)) (= (size_d cAs_d) (size_da as_d)))) :rule cong :premises (t3 t4))
(step t6 (cl (= (= (size_da as_d) n_d) (= (size_d cAs_d) (size_da as_d)))) :rule trans :premises (t2 t5))
(step t7 (cl (= (size_d cAs_d) (size_da as_d))) :rule resolution :premises (t1 t6 a2))
(step t8 (cl) :rule resolution :premises (t7 a0))
