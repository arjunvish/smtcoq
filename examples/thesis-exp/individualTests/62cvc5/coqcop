
/home/arjun/Desktop/smtcoq/arjunvish-smtcoq-veritAst/smtcoq/examples/thesis-exp/sledgehammer-benchmarks/Benchmarks/Ordered_Resolution_Prover_veriT/x2020_07_29_02_29_35_898_5741632cvc5.v
Certif after storing shared terms: 
(a0, AssumeAST, (cl  ((not (e = f)))), [], [])
(a1, AssumeAST, (cl  ((f = (cls ( atm (PL ( (SM ( (M ( c)))) d)) P))))), [], [])
(a2, AssumeAST, (cl  ((e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) Q))))), [], [])
(a3, AssumeAST, (cl  ((a = d))), [], [])
(a4, AssumeAST, (cl  ((b = c))), [], [])
(a5, AssumeAST, (cl  ((R = P))), [], [])
(a6, AssumeAST, (cl  ((S = Q))), [], [])
(a7, AssumeAST, (cl  ((S = R))), [], [])
(t0, Equp2AST, (cl  ((not ((not (e = f)) = (false)))) ((not (not (e = f)))) ((false))), [], [])
(t1, ReflAST, (cl  ((atm = atm))), [], [])
(t2, ReflAST, (cl  (((PL ( (SM ( (M ( b)))) a)) = (PL ( (SM ( (M ( b)))) a))))), [], [])
(t3, SameAST, (cl  ((Q = S))), [ a6], [])
(t4, CongAST, (cl  (((cls ( atm (PL ( (SM ( (M ( b)))) a)) Q)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ t1 t2 t3], [])
(t5, TransAST, (cl  ((e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ a2 t4], [])
(t6, SameAST, (cl  ((c = b))), [ a4], [])
(t7, CongAST, (cl  (((M ( c)) = (M ( b))))), [ t6], [])
(t8, CongAST, (cl  (((SM ( (M ( c)))) = (SM ( (M ( b))))))), [ t7], [])
(t9, SameAST, (cl  ((d = a))), [ a3], [])
(t10, CongAST, (cl  (((PL ( (SM ( (M ( c)))) d)) = (PL ( (SM ( (M ( b)))) a))))), [ t8 t9], [])
(t11, SameAST, (cl  ((P = R))), [ a5], [])
(t12, SameAST, (cl  ((R = S))), [ a7], [])
(t13, TransAST, (cl  ((P = S))), [ t11 t12], [])
(t14, CongAST, (cl  (((cls ( atm (PL ( (SM ( (M ( c)))) d)) P)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ t1 t10 t13], [])
(t15, TransAST, (cl  ((f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ a1 t14], [])
(t16, CongAST, (cl  (((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ t5 t15], [])
-------t5   -------t15
e = cls     f = cls
---------------------
(e = f) = (cls = cls)
(t17, CongAST, (cl  (((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))))), [ t16], [])
(t18, AllsimpAST, (cl  ((((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))) = (true)))), [], [])
(t19, CongAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true))))), [ t18], [])
(t20, AllsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t21, TransAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (false)))), [ t19 t20], [])
(t22, TransAST, (cl  (((not (e = f)) = (false)))), [ t17 t21], [])
(t23, ResoAST, (cl  ((false))), [ t0 t22 a0], [])
(t24, FalsAST, (cl  ((not (false)))), [], [])
(t25, ResoAST, (cl ), [ t23 t24], [])

Certif after process_cong: 
(a0, AssumeAST, (cl  ((not (e = f)))), [], [])
(a1, AssumeAST, (cl  ((f = (cls ( atm (PL ( (SM ( (M ( c)))) d)) P))))), [], [])
(a2, AssumeAST, (cl  ((e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) Q))))), [], [])
(a3, AssumeAST, (cl  ((a = d))), [], [])
(a4, AssumeAST, (cl  ((b = c))), [], [])
(a5, AssumeAST, (cl  ((R = P))), [], [])
(a6, AssumeAST, (cl  ((S = Q))), [], [])
(a7, AssumeAST, (cl  ((S = R))), [], [])
(t0, Equp2AST, (cl  ((not ((not (e = f)) = (false)))) ((not (not (e = f)))) ((false))), [], [])
(t1, ReflAST, (cl  ((atm = atm))), [], [])
(t2, ReflAST, (cl  (((PL ( (SM ( (M ( b)))) a)) = (PL ( (SM ( (M ( b)))) a))))), [], [])
(x1, EqcoAST, (cl  ((not (atm = atm))) ((not ((PL ( (SM ( (M ( b)))) a)) = (PL ( (SM ( (M ( b)))) a))))) ((not (S = Q))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) Q)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(t4, ResoAST, (cl  (((cls ( atm (PL ( (SM ( (M ( b)))) a)) Q)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x1 t1 t2 a6], [])
(t5, TransAST, (cl  ((e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ a2 t4], [])
(x2, EqcoAST, (cl  ((not (b = c))) (((M ( c)) = (M ( b))))), [], [])
(t7, ResoAST, (cl  (((M ( c)) = (M ( b))))), [ x2 a4], [])
(x3, EqcoAST, (cl  ((not ((M ( c)) = (M ( b))))) (((SM ( (M ( c)))) = (SM ( (M ( b))))))), [], [])
(t8, ResoAST, (cl  (((SM ( (M ( c)))) = (SM ( (M ( b))))))), [ x3 t7], [])
(x4, EqcoAST, (cl  ((not ((SM ( (M ( c)))) = (SM ( (M ( b))))))) ((not (a = d))) (((PL ( (SM ( (M ( c)))) d)) = (PL ( (SM ( (M ( b)))) a))))), [], [])
(t10, ResoAST, (cl  (((PL ( (SM ( (M ( c)))) d)) = (PL ( (SM ( (M ( b)))) a))))), [ x4 t8 a3], [])
(t13, TransAST, (cl  ((P = S))), [ a5 a7], [])
(x5, EqcoAST, (cl  ((not (atm = atm))) ((not ((PL ( (SM ( (M ( c)))) d)) = (PL ( (SM ( (M ( b)))) a))))) ((not (P = S))) (((cls ( atm (PL ( (SM ( (M ( c)))) d)) P)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(t14, ResoAST, (cl  (((cls ( atm (PL ( (SM ( (M ( c)))) d)) P)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x5 t1 t10 t13], [])
(t15, TransAST, (cl  ((f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ a1 t14], [])
(x6, EqtrAST, (cl  ((not (e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (e = f))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(x8, Equn2AST, (cl  (((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((e = f)) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(x10, ResoAST, (cl  ((not (e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) (((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ x6 x8], [])
(x7, EqtrAST, (cl  ((not (e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((e = f))), [], [])
(x9, Equn1AST, (cl  (((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (e = f))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [], [])
(x11, ResoAST, (cl  ((not (e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) (((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ x7 x9], [])
(t16, ResoAST, (cl  (((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ x10 x11 t5 t15], [])
(x12, Equp1AST, (cl  ((not ((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not (e = f))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(x13, ResoAST, (cl  ((not (e = f))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x12 t16], [])
(x14, Equn1AST, (cl  (((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((e = f)) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(x15, ResoAST, (cl  (((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x13 x14], [])
(x16, Equp2AST, (cl  ((not ((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((e = f))), [], [])
(x17, ResoAST, (cl  ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((e = f))), [ x16 t16], [])
(x18, Equn2AST, (cl  (((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not (e = f))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [], [])
(x19, ResoAST, (cl  (((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ x17 x18], [])
(t17, ResoAST, (cl  (((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))))), [ x15 x19], [])
(t18, AllsimpAST, (cl  ((((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))) = (true)))), [], [])
(x20, Equp1AST, (cl  ((not (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))) = (true)))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((true))), [], [])
(x21, ResoAST, (cl  ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((true))), [ x20 t18], [])
(x22, Equn1AST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true)))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) ((true))), [], [])
(x23, ResoAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true)))) ((true))), [ x21 x22], [])
(x24, Equp2AST, (cl  ((not (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))) = (true)))) ((not (true))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(x25, ResoAST, (cl  ((not (true))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x24 t18], [])
(x26, Equn2AST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true)))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (true)))), [], [])
(x27, ResoAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true)))) ((not (true)))), [ x25 x26], [])
(t19, ResoAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true))))), [ x23 x27], [])
(t20, AllsimpAST, (cl  (((not (true)) = (false)))), [], [])
(t21, TransAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (false)))), [ t19 t20], [])
(t22, TransAST, (cl  (((not (e = f)) = (false)))), [ t17 t21], [])
(t23, ResoAST, (cl  ((false))), [ t0 t22 a0], [])
(t24, FalsAST, (cl  ((not (false)))), [], [])
(t25, ResoAST, (cl ), [ t23 t24], [])

Certif after process_subproof: 
(a0, AssumeAST, (cl  ((not (e = f)))), [], [])
(a1, AssumeAST, (cl  ((f = (cls ( atm (PL ( (SM ( (M ( c)))) d)) P))))), [], [])
(a2, AssumeAST, (cl  ((e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) Q))))), [], [])
(a3, AssumeAST, (cl  ((a = d))), [], [])
(a4, AssumeAST, (cl  ((b = c))), [], [])
(a5, AssumeAST, (cl  ((R = P))), [], [])
(a6, AssumeAST, (cl  ((S = Q))), [], [])
(a7, AssumeAST, (cl  ((S = R))), [], [])
(t0, Equp2AST, (cl  ((not ((not (e = f)) = (false)))) ((not (not (e = f)))) ((false))), [], [])
(t1, ReflAST, (cl  ((atm = atm))), [], [])
(t2, ReflAST, (cl  (((PL ( (SM ( (M ( b)))) a)) = (PL ( (SM ( (M ( b)))) a))))), [], [])
(x1, EqcoAST, (cl  ((not (atm = atm))) ((not ((PL ( (SM ( (M ( b)))) a)) = (PL ( (SM ( (M ( b)))) a))))) ((not (S = Q))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) Q)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(t4, ResoAST, (cl  (((cls ( atm (PL ( (SM ( (M ( b)))) a)) Q)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x1 t1 t2 a6], [])
(x28, EqtrAST, (cl  ((not (e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) Q))))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) Q)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(t5, ResoAST, (cl  ((e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x28 a2 t4], [])
(x2, EqcoAST, (cl  ((not (b = c))) (((M ( c)) = (M ( b))))), [], [])
(t7, ResoAST, (cl  (((M ( c)) = (M ( b))))), [ x2 a4], [])
(x3, EqcoAST, (cl  ((not ((M ( c)) = (M ( b))))) (((SM ( (M ( c)))) = (SM ( (M ( b))))))), [], [])
(t8, ResoAST, (cl  (((SM ( (M ( c)))) = (SM ( (M ( b))))))), [ x3 t7], [])
(x4, EqcoAST, (cl  ((not ((SM ( (M ( c)))) = (SM ( (M ( b))))))) ((not (a = d))) (((PL ( (SM ( (M ( c)))) d)) = (PL ( (SM ( (M ( b)))) a))))), [], [])
(t10, ResoAST, (cl  (((PL ( (SM ( (M ( c)))) d)) = (PL ( (SM ( (M ( b)))) a))))), [ x4 t8 a3], [])
(x29, EqtrAST, (cl  ((not (R = P))) ((not (S = R))) ((P = S))), [], [])
(t13, ResoAST, (cl  ((P = S))), [ x29 a5 a7], [])
(x5, EqcoAST, (cl  ((not (atm = atm))) ((not ((PL ( (SM ( (M ( c)))) d)) = (PL ( (SM ( (M ( b)))) a))))) ((not (P = S))) (((cls ( atm (PL ( (SM ( (M ( c)))) d)) P)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(t14, ResoAST, (cl  (((cls ( atm (PL ( (SM ( (M ( c)))) d)) P)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x5 t1 t10 t13], [])
(x30, EqtrAST, (cl  ((not (f = (cls ( atm (PL ( (SM ( (M ( c)))) d)) P))))) ((not ((cls ( atm (PL ( (SM ( (M ( c)))) d)) P)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(t15, ResoAST, (cl  ((f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x30 a1 t14], [])
(x6, EqtrAST, (cl  ((not (e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (e = f))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(x8, Equn2AST, (cl  (((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((e = f)) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(x10, ResoAST, (cl  ((not (e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) (((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ x6 x8], [])
(x7, EqtrAST, (cl  ((not (e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((e = f))), [], [])
(x9, Equn1AST, (cl  (((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (e = f))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [], [])
(x11, ResoAST, (cl  ((not (e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) (((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ x7 x9], [])
(t16, ResoAST, (cl  (((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ x10 x11 t5 t15], [])
(x12, Equp1AST, (cl  ((not ((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not (e = f))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(x13, ResoAST, (cl  ((not (e = f))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x12 t16], [])
(x14, Equn1AST, (cl  (((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((e = f)) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(x15, ResoAST, (cl  (((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x13 x14], [])
(x16, Equp2AST, (cl  ((not ((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((e = f))), [], [])
(x17, ResoAST, (cl  ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((e = f))), [ x16 t16], [])
(x18, Equn2AST, (cl  (((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not (e = f))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [], [])
(x19, ResoAST, (cl  (((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ x17 x18], [])
(t17, ResoAST, (cl  (((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))))), [ x15 x19], [])
(t18, HoleAST, (cl  ((((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))) = (true)))), [], [])
(x20, Equp1AST, (cl  ((not (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))) = (true)))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((true))), [], [])
(x21, ResoAST, (cl  ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((true))), [ x20 t18], [])
(x22, Equn1AST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true)))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) ((true))), [], [])
(x23, ResoAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true)))) ((true))), [ x21 x22], [])
(x24, Equp2AST, (cl  ((not (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))) = (true)))) ((not (true))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(x25, ResoAST, (cl  ((not (true))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x24 t18], [])
(x26, Equn2AST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true)))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (true)))), [], [])
(x27, ResoAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true)))) ((not (true)))), [ x25 x26], [])
(t19, ResoAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true))))), [ x23 x27], [])
(t20, HoleAST, (cl  (((not (true)) = (false)))), [], [])
(x34, Equp1AST, (cl  ((not ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true))))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (not (true))))), [], [])
(x33, ResoAST, (cl  ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (not (true))))), [ x34 t19], [])
(x32, Equp1AST, (cl  ((not ((not (true)) = (false)))) ((not (true))) ((not (false)))), [], [])
(x31, ResoAST, (cl  ((not (true))) ((not (false)))), [ x32 t20], [])
(x35, ResoAST, (cl  ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (false)))), [ x33 x31], [])
(x36, Equn2AST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (false))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((false))), [], [])
(x37, ResoAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (false))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ x35 x36], [])
(x41, Equp2AST, (cl  ((not ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true))))) ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not (true)))), [], [])
(x40, ResoAST, (cl  ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not (true)))), [ x41 t19], [])
(x39, Equp2AST, (cl  ((not ((not (true)) = (false)))) ((not (not (true)))) ((false))), [], [])
(x38, ResoAST, (cl  ((not (not (true)))) ((false))), [ x39 t20], [])
(x42, ResoAST, (cl  ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((false))), [ x40 x38], [])
(x43, Equn1AST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (false))) ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not (false)))), [], [])
(x44, ResoAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (false))) ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))))), [ x42 x43], [])
(t21, ResoAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (false)))), [ x37 x44], [])
(x48, Equp1AST, (cl  ((not ((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))))) ((not (e = f))) ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))))), [], [])
(x47, ResoAST, (cl  ((not (e = f))) ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))))), [ x48 t17], [])
(x46, Equp1AST, (cl  ((not ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (false)))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (false)))), [], [])
(x45, ResoAST, (cl  ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (false)))), [ x46 t21], [])
(x49, ResoAST, (cl  ((not (e = f))) ((not (false)))), [ x47 x45], [])
(x50, Equn2AST, (cl  (((not (e = f)) = (false))) ((not (e = f))) ((false))), [], [])
(x51, ResoAST, (cl  (((not (e = f)) = (false))) ((not (e = f)))), [ x49 x50], [])
(x55, Equp2AST, (cl  ((not ((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))))) ((not (not (e = f)))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [], [])
(x54, ResoAST, (cl  ((not (not (e = f)))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ x55 t17], [])
(x53, Equp2AST, (cl  ((not ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (false)))) ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((false))), [], [])
(x52, ResoAST, (cl  ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((false))), [ x53 t21], [])
(x56, ResoAST, (cl  ((not (not (e = f)))) ((false))), [ x54 x52], [])
(x57, Equn1AST, (cl  (((not (e = f)) = (false))) ((not (not (e = f)))) ((not (false)))), [], [])
(x58, ResoAST, (cl  (((not (e = f)) = (false))) ((not (not (e = f))))), [ x56 x57], [])
(t22, ResoAST, (cl  (((not (e = f)) = (false)))), [ x51 x58], [])
(t23, ResoAST, (cl  ((false))), [ t0 t22 a0], [])
(t24, FalsAST, (cl  ((not (false)))), [], [])
(t25, ResoAST, (cl ), [ t23 t24], [])

Certif after process_trivial: 
(a0, AssumeAST, (cl  ((not (e = f)))), [], [])
(a1, AssumeAST, (cl  ((f = (cls ( atm (PL ( (SM ( (M ( c)))) d)) P))))), [], [])
(a2, AssumeAST, (cl  ((e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) Q))))), [], [])
(a3, AssumeAST, (cl  ((a = d))), [], [])
(a4, AssumeAST, (cl  ((b = c))), [], [])
(a5, AssumeAST, (cl  ((R = P))), [], [])
(a6, AssumeAST, (cl  ((S = Q))), [], [])
(a7, AssumeAST, (cl  ((S = R))), [], [])
(t0, Equp2AST, (cl  ((not ((not (e = f)) = (false)))) ((not (not (e = f)))) ((false))), [], [])
(t1, ReflAST, (cl  ((atm = atm))), [], [])
(t2, ReflAST, (cl  (((PL ( (SM ( (M ( b)))) a)) = (PL ( (SM ( (M ( b)))) a))))), [], [])
(x1, EqcoAST, (cl  ((not (atm = atm))) ((not ((PL ( (SM ( (M ( b)))) a)) = (PL ( (SM ( (M ( b)))) a))))) ((not (S = Q))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) Q)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(t4, ResoAST, (cl  (((cls ( atm (PL ( (SM ( (M ( b)))) a)) Q)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x1 t1 t2 a6], [])
(x28, EqtrAST, (cl  ((not (e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) Q))))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) Q)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(t5, ResoAST, (cl  ((e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x28 a2 t4], [])
(x2, EqcoAST, (cl  ((not (b = c))) (((M ( c)) = (M ( b))))), [], [])
(t7, ResoAST, (cl  (((M ( c)) = (M ( b))))), [ x2 a4], [])
(x3, EqcoAST, (cl  ((not ((M ( c)) = (M ( b))))) (((SM ( (M ( c)))) = (SM ( (M ( b))))))), [], [])
(t8, ResoAST, (cl  (((SM ( (M ( c)))) = (SM ( (M ( b))))))), [ x3 t7], [])
(x4, EqcoAST, (cl  ((not ((SM ( (M ( c)))) = (SM ( (M ( b))))))) ((not (a = d))) (((PL ( (SM ( (M ( c)))) d)) = (PL ( (SM ( (M ( b)))) a))))), [], [])
(t10, ResoAST, (cl  (((PL ( (SM ( (M ( c)))) d)) = (PL ( (SM ( (M ( b)))) a))))), [ x4 t8 a3], [])
(x29, EqtrAST, (cl  ((not (R = P))) ((not (S = R))) ((P = S))), [], [])
(t13, ResoAST, (cl  ((P = S))), [ x29 a5 a7], [])
(x5, EqcoAST, (cl  ((not (atm = atm))) ((not ((PL ( (SM ( (M ( c)))) d)) = (PL ( (SM ( (M ( b)))) a))))) ((not (P = S))) (((cls ( atm (PL ( (SM ( (M ( c)))) d)) P)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(t14, ResoAST, (cl  (((cls ( atm (PL ( (SM ( (M ( c)))) d)) P)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x5 t1 t10 t13], [])
(x30, EqtrAST, (cl  ((not (f = (cls ( atm (PL ( (SM ( (M ( c)))) d)) P))))) ((not ((cls ( atm (PL ( (SM ( (M ( c)))) d)) P)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(t15, ResoAST, (cl  ((f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x30 a1 t14], [])
(x6, EqtrAST, (cl  ((not (e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (e = f))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], []) (* PROBLEM *)
e != (cls (atm (PL SM M b a) S)), f != (cls (atm (PL SM M b a) S)), e != f, (cls (atm (PL SM M b a) S)) = (cls (atm (PL SM M b a) S))
e != cls, f != cls, e != f, cls = cls
(x8, Equn2AST, (cl  (((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((e = f)) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(x10, ResoAST, (cl  ((not (e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) (((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ x6 x8], [])
(x7, EqtrAST, (cl  ((not (e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((e = f))), [], [])
(x9, Equn1AST, (cl  (((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (e = f))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [], [])
(x11, ResoAST, (cl  ((not (e = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (f = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) (((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ x7 x9], [])
(t16, ResoAST, (cl  (((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ x10 x11 t5 t15], [])
(x12, Equp1AST, (cl  ((not ((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not (e = f))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(x13, ResoAST, (cl  ((not (e = f))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x12 t16], [])
(x14, Equn1AST, (cl  (((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((e = f)) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(x15, ResoAST, (cl  (((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x13 x14], [])
(x16, Equp2AST, (cl  ((not ((e = f) = ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((e = f))), [], [])
(x17, ResoAST, (cl  ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((e = f))), [ x16 t16], [])
(x18, Equn2AST, (cl  (((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not (e = f))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [], [])
(x19, ResoAST, (cl  (((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ x17 x18], [])
(t17, ResoAST, (cl  (((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))))), [ x15 x19], [])
(t18, HoleAST, (cl  ((((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))) = (true)))), [], [])
(x20, Equp1AST, (cl  ((not (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))) = (true)))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((true))), [], [])
(x21, ResoAST, (cl  ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((true))), [ x20 t18], [])
(x22, Equn1AST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true)))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) ((true))), [], [])
(x23, ResoAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true)))) ((true))), [ x21 x22], [])
(x24, Equp2AST, (cl  ((not (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))) = (true)))) ((not (true))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [], [])
(x25, ResoAST, (cl  ((not (true))) (((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))), [ x24 t18], [])
(x26, Equn2AST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true)))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (true)))), [], [])
(x27, ResoAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true)))) ((not (true)))), [ x25 x26], [])
(t19, ResoAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true))))), [ x23 x27], [])
(t20, HoleAST, (cl  (((not (true)) = (false)))), [], [])
(x34, Equp1AST, (cl  ((not ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true))))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (not (true))))), [], [])
(x33, ResoAST, (cl  ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (not (true))))), [ x34 t19], [])
(x32, Equp1AST, (cl  ((not ((not (true)) = (false)))) ((not (true))) ((not (false)))), [], [])
(x31, ResoAST, (cl  ((not (true))) ((not (false)))), [ x32 t20], [])
(x35, ResoAST, (cl  ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (false)))), [ x33 x31], [])
(x36, Equn2AST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (false))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((false))), [], [])
(x37, ResoAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (false))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ x35 x36], [])
(x41, Equp2AST, (cl  ((not ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (not (true))))) ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not (true)))), [], [])
(x40, ResoAST, (cl  ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not (true)))), [ x41 t19], [])
(x39, Equp2AST, (cl  ((not ((not (true)) = (false)))) ((not (not (true)))) ((false))), [], [])
(x38, ResoAST, (cl  ((not (not (true)))) ((false))), [ x39 t20], [])
(x42, ResoAST, (cl  ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((false))), [ x40 x38], [])
(x43, Equn1AST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (false))) ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((not (false)))), [], [])
(x44, ResoAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (false))) ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))))), [ x42 x43], [])
(t21, ResoAST, (cl  (((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (false)))), [ x37 x44], [])
(x48, Equp1AST, (cl  ((not ((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))))) ((not (e = f))) ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))))), [], [])
(x47, ResoAST, (cl  ((not (e = f))) ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))))), [ x48 t17], [])
(x46, Equp1AST, (cl  ((not ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (false)))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (false)))), [], [])
(x45, ResoAST, (cl  ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))) ((not (false)))), [ x46 t21], [])
(x49, ResoAST, (cl  ((not (e = f))) ((not (false)))), [ x47 x45], [])
(x50, Equn2AST, (cl  (((not (e = f)) = (false))) ((not (e = f))) ((false))), [], [])
(x51, ResoAST, (cl  (((not (e = f)) = (false))) ((not (e = f)))), [ x49 x50], [])
(x55, Equp2AST, (cl  ((not ((not (e = f)) = (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S))))))) ((not (not (e = f)))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [], [])
(x54, ResoAST, (cl  ((not (not (e = f)))) ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))), [ x55 t17], [])
(x53, Equp2AST, (cl  ((not ((not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))) = (false)))) ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((false))), [], [])
(x52, ResoAST, (cl  ((not (not ((cls ( atm (PL ( (SM ( (M ( b)))) a)) S)) = (cls ( atm (PL ( (SM ( (M ( b)))) a)) S)))))) ((false))), [ x53 t21], [])
(x56, ResoAST, (cl  ((not (not (e = f)))) ((false))), [ x54 x52], [])
(x57, Equn1AST, (cl  (((not (e = f)) = (false))) ((not (not (e = f)))) ((not (false)))), [], [])
(x58, ResoAST, (cl  (((not (e = f)) = (false))) ((not (not (e = f))))), [ x56 x57], [])
(t22, ResoAST, (cl  (((not (e = f)) = (false)))), [ x51 x58], [])
(t23, ResoAST, (cl  ((false))), [ t0 t22 a0], [])
(t24, FalsAST, (cl  ((not (false)))), [], [])
(t25, ResoAST, (cl ), [ t23 t24], [])

WARNING: assuming the following hypothesis:
(is_true (negb true <---> false))

WARNING: assuming the following hypothesis:
(is_true
   (eqb_of_compdec
      (te_compdec
         {|
           te_carrier := Smt_sort_A_literal_multiset_d;
           te_compdec := CompDec_A_literal_multiset_d
         |})
      (Smt_var_cls Smt_var_atm
         (Smt_var_PL (Smt_var_SM (Smt_var_M Smt_var_b)) Smt_var_a) Smt_var_S)
      (Smt_var_cls Smt_var_atm
         (Smt_var_PL (Smt_var_SM (Smt_var_M Smt_var_b)) Smt_var_a) Smt_var_S) <--->
    true))

     = false
     : bool
