(assume a0 (not (or (= (subst_cls_d subst_atm_d d_d sigma_d) c_d) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d))))
(assume a1 (or (= (subst_cls_d subst_atm_d d_d sigma_d) c_d) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d)))
(step t1 (cl (not (= (or (= (subst_cls_d subst_atm_d d_d sigma_d) c_d) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d)) (or (= c_d (subst_cls_d subst_atm_d d_d sigma_d)) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d)))) (not (or (= (subst_cls_d subst_atm_d d_d sigma_d) c_d) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d))) (or (= c_d (subst_cls_d subst_atm_d d_d sigma_d)) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d))) :rule equiv_pos2)
(step t2 (cl (= (= (subst_cls_d subst_atm_d d_d sigma_d) c_d) (= c_d (subst_cls_d subst_atm_d d_d sigma_d)))) :rule all_simplify)
(step t3 (cl (= (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d))) :rule refl)
(step t4 (cl (= (or (= (subst_cls_d subst_atm_d d_d sigma_d) c_d) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d)) (or (= c_d (subst_cls_d subst_atm_d d_d sigma_d)) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d)))) :rule cong :premises (t2 t3))
(step t5 (cl (or (= c_d (subst_cls_d subst_atm_d d_d sigma_d)) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d))) :rule resolution :premises (t1 t4 a1))
(step t6 (cl (not (= (not (or (= (subst_cls_d subst_atm_d d_d sigma_d) c_d) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d))) (not (or (= c_d (subst_cls_d subst_atm_d d_d sigma_d)) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d))))) (not (not (or (= (subst_cls_d subst_atm_d d_d sigma_d) c_d) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d)))) (not (or (= c_d (subst_cls_d subst_atm_d d_d sigma_d)) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d)))) :rule equiv_pos2)
(step t7 (cl (= (or (= (subst_cls_d subst_atm_d d_d sigma_d) c_d) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d)) (or (= c_d (subst_cls_d subst_atm_d d_d sigma_d)) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d)))) :rule cong :premises (t2 t3))
(step t8 (cl (= (not (or (= (subst_cls_d subst_atm_d d_d sigma_d) c_d) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d))) (not (or (= c_d (subst_cls_d subst_atm_d d_d sigma_d)) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d))))) :rule cong :premises (t7))
(step t9 (cl (not (or (= c_d (subst_cls_d subst_atm_d d_d sigma_d)) (subset_mset_d (subst_cls_d subst_atm_d d_d sigma_d) c_d)))) :rule resolution :premises (t6 t8 a0))
(step t10 (cl) :rule resolution :premises (t5 t9))
