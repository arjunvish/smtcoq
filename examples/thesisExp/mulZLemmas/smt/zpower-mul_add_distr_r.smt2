(set-option :print-success true)
(set-option :produce-assignments true)
(set-option :produce-abducts true)
(set-option :incremental true)
(set-logic QF_UFLIA)
(set-option :sygus-core-connective false)
(declare-fun posq () Int)
(declare-fun d () Int)
(declare-fun r () Int)
(declare-fun x () Int)
(declare-fun mul (Int Int ) Int)
(assert (= x (+ (mul (+ (mul 2 posq) 1) d) r)))
(assert (= (mul 1 d) d))
(assert (= (mul 2 (mul posq d)) (mul (mul 2 posq) d)))
(assert (= (mul posq (mul 2 d)) (mul 2 (mul posq d))))
(assert (< r (mul 2 d)))
(assert (< (+ d r) (mul 2 d)))
(assert (<= 0 (+ d r)))
(assert (< 0 d))
(assert (< r d))
(assert (<= 0 r))
(get-abduct A (= x (+ (mul posq (mul 2 d)) (+ d r))))

;sygus-stream
;(define-fun __internal_abduct () Bool (and (= x 2) (= 1 (mul x posq))))
;(define-fun __internal_abduct () Bool (and (<= x 2) (= 1 (mul 2 posq))))

