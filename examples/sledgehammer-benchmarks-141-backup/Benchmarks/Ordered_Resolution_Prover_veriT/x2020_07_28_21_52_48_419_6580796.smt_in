; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A_set_d 0)
(declare-sort A_literal_multiset_d 0)
(declare-sort A_literal_multiset_set_d 0)
(declare-fun e_d () A_literal_multiset_d)
(declare-fun m_d () A_literal_multiset_set_d)
(declare-fun i_of_d (A_literal_multiset_set_d) A_set_d)
(declare-fun true_cls_d (A_set_d A_literal_multiset_d) Bool)
(assert (! (not false) :named a0))
(assert (! (true_cls_d (i_of_d m_d) e_d) :named a1))
(assert (! (not (true_cls_d (i_of_d m_d) e_d)) :named a2))
(check-sat)
;;;;(get-proof)
