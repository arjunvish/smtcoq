; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A_d 0)
(declare-sort B_d 0)
(declare-sort A_b_prod_d 0)
(declare-fun x_d () A_b_prod_d)
(declare-fun y_d () A_b_prod_d)
(declare-fun fst_d (A_b_prod_d) A_d)
(declare-fun snd_d (A_b_prod_d) B_d)
(declare-fun less_eq_d (B_d B_d) Bool)
(declare-fun less_eq_da (A_d A_d) Bool)
(assert (! (not (less_eq_d (snd_d x_d) (snd_d y_d))) :named a0))
(assert (! (and (less_eq_da (fst_d x_d) (fst_d y_d)) (less_eq_d (snd_d x_d) (snd_d y_d))) :named a1))
(check-sat)
;;;;;;(get-proof)
