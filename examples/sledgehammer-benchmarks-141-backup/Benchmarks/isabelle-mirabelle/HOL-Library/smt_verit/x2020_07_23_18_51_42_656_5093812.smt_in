; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort B_set_d 0)
(declare-sort C_set_d 0)
(declare-sort B_a_fun_d 0)
(declare-sort B_c_fun_d 0)
(declare-sort C_a_fun_d 0)
(declare-fun g_d () C_a_fun_d)
(declare-fun h_d () B_a_fun_d)
(declare-fun l_d () B_c_fun_d)
(declare-fun top_d () B_set_d)
(declare-fun comp_d (C_a_fun_d B_c_fun_d) B_a_fun_d)
(declare-fun top_da () C_set_d)
(declare-fun bij_betw_d (B_c_fun_d B_set_d C_set_d) Bool)
(assert (! (not (= h_d (comp_d g_d l_d))) :named a0))
(assert (! (bij_betw_d l_d top_d top_da) :named a1))
(assert (! (= (comp_d g_d l_d) h_d) :named a2))
(check-sat)
;;;;;;(get-proof)
